# coding: utf-8

"""
    Monad Swagger API

    This is the monad API

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from monad.models.models_secret_with_components import ModelsSecretWithComponents

class TestModelsSecretWithComponents(unittest.TestCase):
    """ModelsSecretWithComponents unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsSecretWithComponents:
        """Test ModelsSecretWithComponents
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsSecretWithComponents`
        """
        model = ModelsSecretWithComponents()
        if include_optional:
            return ModelsSecretWithComponents(
                created_at = '',
                description = '',
                id = '',
                inputs = [
                    monad.models.models/component_reference.models.ComponentReference(
                        id = '', 
                        name = '', 
                        type = '', )
                    ],
                name = '',
                organization_id = '',
                outputs = [
                    monad.models.models/component_reference.models.ComponentReference(
                        id = '', 
                        name = '', 
                        type = '', )
                    ],
                updated_at = '',
                value = ''
            )
        else:
            return ModelsSecretWithComponents(
        )
        """

    def testModelsSecretWithComponents(self):
        """Test ModelsSecretWithComponents"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
