# coding: utf-8

"""
    Monad API

    This is the monad API

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from monad.models.certificate_manager_settings_config import CertificateManagerSettingsConfig

class TestCertificateManagerSettingsConfig(unittest.TestCase):
    """CertificateManagerSettingsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificateManagerSettingsConfig:
        """Test CertificateManagerSettingsConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificateManagerSettingsConfig`
        """
        model = CertificateManagerSettingsConfig()
        if include_optional:
            return CertificateManagerSettingsConfig(
                certificate_statuses = [
                    'PENDING_VALIDATION'
                    ],
                cron = '',
                extended_key_usage = [
                    'TLS_WEB_SERVER_AUTHENTICATION'
                    ],
                key_types = [
                    'RSA_1024'
                    ],
                key_usage = [
                    'DIGITAL_SIGNATURE'
                    ],
                managed_by = 'CLOUDFRONT',
                regions = [
                    'us-east-1'
                    ],
                role_arn = ''
            )
        else:
            return CertificateManagerSettingsConfig(
        )
        """

    def testCertificateManagerSettingsConfig(self):
        """Test CertificateManagerSettingsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
