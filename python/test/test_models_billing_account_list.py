# coding: utf-8

"""
    Monad Swagger API

    This is the monad API

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from monad.models.models_billing_account_list import ModelsBillingAccountList

class TestModelsBillingAccountList(unittest.TestCase):
    """ModelsBillingAccountList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelsBillingAccountList:
        """Test ModelsBillingAccountList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelsBillingAccountList`
        """
        model = ModelsBillingAccountList()
        if include_optional:
            return ModelsBillingAccountList(
                billing_accounts = [
                    monad.models.models/billing_account.models.BillingAccount(
                        billing_email = '', 
                        created_at = '', 
                        description = '', 
                        has_payment_method = True, 
                        id = '', 
                        name = '', 
                        next_product = monad.models.models/billing_product.models.BillingProduct(
                            created_at = '', 
                            description = '', 
                            features = [
                                ''
                                ], 
                            id = '', 
                            name = '', 
                            recurring_cost_cents = 56, 
                            recurring_frequency = '', 
                            slug = '', 
                            updated_at = '', 
                            usage_unit = '', 
                            usage_unit_cost_cents = 56, ), 
                        next_product_id = '', 
                        product = monad.models.models/billing_product.models.BillingProduct(
                            created_at = '', 
                            description = '', 
                            id = '', 
                            name = '', 
                            recurring_cost_cents = 56, 
                            recurring_frequency = '', 
                            slug = '', 
                            updated_at = '', 
                            usage_unit = '', 
                            usage_unit_cost_cents = 56, ), 
                        product_change_after = '', 
                        product_id = '', 
                        status = '', 
                        updated_at = '', )
                    ],
                pagination = monad.models.models/pagination.models.Pagination(
                    limit = 56, 
                    offset = 56, 
                    total = 56, )
            )
        else:
            return ModelsBillingAccountList(
        )
        """

    def testModelsBillingAccountList(self):
        """Test ModelsBillingAccountList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
