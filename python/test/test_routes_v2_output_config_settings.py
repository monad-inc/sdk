# coding: utf-8

"""
    Monad Swagger API

    This is the monad API

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from monad.models.routes_v2_output_config_settings import RoutesV2OutputConfigSettings

class TestRoutesV2OutputConfigSettings(unittest.TestCase):
    """RoutesV2OutputConfigSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoutesV2OutputConfigSettings:
        """Test RoutesV2OutputConfigSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoutesV2OutputConfigSettings`
        """
        model = RoutesV2OutputConfigSettings()
        if include_optional:
            return RoutesV2OutputConfigSettings(
                ingress_address = '',
                path = '',
                port = '',
                auth_type = '',
                cloud_id = '',
                connection_type = '',
                index = '',
                insecure_skip_verify = True,
                url = '',
                username = '',
                endpoint = '',
                headers = {
                    'key' : ''
                    },
                max_batch_data_size = 56,
                max_batch_record_count = 56,
                method = '',
                payload_structure = '',
                rate_limit = 56,
                tls_skip_verify = True,
                wrapper_key = '',
                bucket = '',
                compression = '',
                format = '',
                partition_format = '',
                prefix = '',
                region = '',
                role_arn = '',
                rule_id = '',
                stream_name = '',
                account = '',
                database = '',
                var_schema = '',
                stage = '',
                table = '',
                user = '',
                warehouse = '',
                allow_insecure = True
            )
        else:
            return RoutesV2OutputConfigSettings(
        )
        """

    def testRoutesV2OutputConfigSettings(self):
        """Test RoutesV2OutputConfigSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
