# coding: utf-8

"""
    Monad Swagger API

    This is the monad API

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from monad.models.issues_settings_config import IssuesSettingsConfig

class TestIssuesSettingsConfig(unittest.TestCase):
    """IssuesSettingsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IssuesSettingsConfig:
        """Test IssuesSettingsConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IssuesSettingsConfig`
        """
        model = IssuesSettingsConfig()
        if include_optional:
            return IssuesSettingsConfig(
                control_ids = [
                    ''
                    ],
                has_note = '',
                has_remediation = '',
                has_service_ticket = '',
                issue_ids = [
                    ''
                    ],
                issue_types = [
                    'TOXIC_COMBINATION'
                    ],
                project_ids = [
                    ''
                    ],
                related_entity_id = '',
                resolution_reasons = [
                    'CONTROL_CHANGED'
                    ],
                risk_equals_all = [
                    ''
                    ],
                risk_equals_any = [
                    ''
                    ],
                search_query = '',
                security_scan = '',
                severities = [
                    'INFORMATIONAL'
                    ],
                stack_layers = [
                    'APPLICATION_AND_DATA'
                    ],
                status = [
                    'OPEN'
                    ],
                tenant_data_center = ''
            )
        else:
            return IssuesSettingsConfig(
        )
        """

    def testIssuesSettingsConfig(self):
        """Test IssuesSettingsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
