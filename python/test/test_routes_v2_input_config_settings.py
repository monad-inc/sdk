# coding: utf-8

"""
    Monad Swagger API

    This is the monad API

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from monad.models.routes_v2_input_config_settings import RoutesV2InputConfigSettings

class TestRoutesV2InputConfigSettings(unittest.TestCase):
    """RoutesV2InputConfigSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoutesV2InputConfigSettings:
        """Test RoutesV2InputConfigSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoutesV2InputConfigSettings`
        """
        model = RoutesV2InputConfigSettings()
        if include_optional:
            return RoutesV2InputConfigSettings(
                actor_type = '',
                cloud_type = '',
                cron = '',
                sort = '',
                target_industries = '',
                email = '',
                actions = [
                    ''
                    ],
                actor = '',
                country = '',
                created_after = '',
                enterprise = '',
                include = '',
                organization = '',
                repository = '',
                user = '',
                bucket = '',
                compression = '',
                format = '',
                partition_format = '',
                prefix = '',
                record_location = '',
                region = '',
                role_arn = '',
                correlation_id = '',
                resource_group_name = '',
                resource_provider = '',
                resource_uri = '',
                subscription_id = '',
                tenant_id = '',
                endpoint_url = '',
                result = [
                    ''
                    ],
                severity = [
                    ''
                    ],
                status = [
                    ''
                    ],
                filter = '',
                resource_names = [
                    ''
                    ],
                cloud_platform = [
                    ''
                    ],
                entity_type = [
                    ''
                    ],
                rate = 56,
                record_type = '',
                custom_template = '',
                category = '',
                workspace_id = '',
                app_name = '',
                cloud = '',
                member_cid = '',
                query = '',
                org_url = '',
                asset_status = [
                    ''
                    ],
                asset_type = '',
                detection_method = [
                    ''
                    ],
                vendor_severity = [
                    ''
                    ]
            )
        else:
            return RoutesV2InputConfigSettings(
        )
        """

    def testRoutesV2InputConfigSettings(self):
        """Test RoutesV2InputConfigSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
