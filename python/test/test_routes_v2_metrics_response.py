# coding: utf-8

"""
    Monad Swagger API

    This is the monad API

    The version of the OpenAPI document: 1.0
    Contact: support@swagger.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from monad.models.routes_v2_metrics_response import RoutesV2MetricsResponse

class TestRoutesV2MetricsResponse(unittest.TestCase):
    """RoutesV2MetricsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoutesV2MetricsResponse:
        """Test RoutesV2MetricsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoutesV2MetricsResponse`
        """
        model = RoutesV2MetricsResponse()
        if include_optional:
            return RoutesV2MetricsResponse(
                egress_bytes = [
                    monad.models.routes_v2/pipeline_metric.routesV2.PipelineMetric(
                        pipeline_id = '', 
                        pipeline_name = '', 
                        total_bytes = 56, 
                        values = [
                            monad.models.models/pipeline_node_metrics_value.models.PipelineNodeMetricsValue(
                                timestamp = 56, 
                                value = 1.337, )
                            ], )
                    ],
                ingress_bytes = [
                    monad.models.routes_v2/pipeline_metric.routesV2.PipelineMetric(
                        pipeline_id = '', 
                        pipeline_name = '', 
                        total_bytes = 56, 
                        values = [
                            monad.models.models/pipeline_node_metrics_value.models.PipelineNodeMetricsValue(
                                timestamp = 56, 
                                value = 1.337, )
                            ], )
                    ]
            )
        else:
            return RoutesV2MetricsResponse(
        )
        """

    def testRoutesV2MetricsResponse(self):
        """Test RoutesV2MetricsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
