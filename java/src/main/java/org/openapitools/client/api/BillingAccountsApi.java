/*
 * Monad Swagger API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.ModelsBillingAccount;
import org.openapitools.client.model.ModelsBillingAccountList;
import org.openapitools.client.model.RoutesV2CreateBillingAccountRequest;
import org.openapitools.client.model.RoutesV2UpdateBillingAccountRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class BillingAccountsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BillingAccountsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public BillingAccountsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for v2BillingAccountsBillingAccountIdDelete
     * @param billingAccountId Billing Account ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Billing account deleted successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to delete Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsBillingAccountIdDeleteCall(String billingAccountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/billing/accounts/{billing_account_id}"
            .replace("{" + "billing_account_id" + "}", localVarApiClient.escapeString(billingAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Bearer" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v2BillingAccountsBillingAccountIdDeleteValidateBeforeCall(String billingAccountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling v2BillingAccountsBillingAccountIdDelete(Async)");
        }

        return v2BillingAccountsBillingAccountIdDeleteCall(billingAccountId, _callback);

    }

    /**
     * Delete Billing Account
     * Delete Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Billing account deleted successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to delete Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public void v2BillingAccountsBillingAccountIdDelete(String billingAccountId) throws ApiException {
        v2BillingAccountsBillingAccountIdDeleteWithHttpInfo(billingAccountId);
    }

    /**
     * Delete Billing Account
     * Delete Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Billing account deleted successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to delete Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> v2BillingAccountsBillingAccountIdDeleteWithHttpInfo(String billingAccountId) throws ApiException {
        okhttp3.Call localVarCall = v2BillingAccountsBillingAccountIdDeleteValidateBeforeCall(billingAccountId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Delete Billing Account (asynchronously)
     * Delete Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Billing account deleted successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to delete Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsBillingAccountIdDeleteAsync(String billingAccountId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = v2BillingAccountsBillingAccountIdDeleteValidateBeforeCall(billingAccountId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for v2BillingAccountsBillingAccountIdGet
     * @param billingAccountId Billing Account ID (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get billing account successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to get Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsBillingAccountIdGetCall(String billingAccountId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/billing/accounts/{billing_account_id}"
            .replace("{" + "billing_account_id" + "}", localVarApiClient.escapeString(billingAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Bearer" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v2BillingAccountsBillingAccountIdGetValidateBeforeCall(String billingAccountId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling v2BillingAccountsBillingAccountIdGet(Async)");
        }

        return v2BillingAccountsBillingAccountIdGetCall(billingAccountId, _callback);

    }

    /**
     * Get Billing Account
     * Get Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @return ModelsBillingAccount
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get billing account successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to get Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public ModelsBillingAccount v2BillingAccountsBillingAccountIdGet(String billingAccountId) throws ApiException {
        ApiResponse<ModelsBillingAccount> localVarResp = v2BillingAccountsBillingAccountIdGetWithHttpInfo(billingAccountId);
        return localVarResp.getData();
    }

    /**
     * Get Billing Account
     * Get Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @return ApiResponse&lt;ModelsBillingAccount&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get billing account successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to get Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelsBillingAccount> v2BillingAccountsBillingAccountIdGetWithHttpInfo(String billingAccountId) throws ApiException {
        okhttp3.Call localVarCall = v2BillingAccountsBillingAccountIdGetValidateBeforeCall(billingAccountId, null);
        Type localVarReturnType = new TypeToken<ModelsBillingAccount>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Billing Account (asynchronously)
     * Get Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> get billing account successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to get Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsBillingAccountIdGetAsync(String billingAccountId, final ApiCallback<ModelsBillingAccount> _callback) throws ApiException {

        okhttp3.Call localVarCall = v2BillingAccountsBillingAccountIdGetValidateBeforeCall(billingAccountId, _callback);
        Type localVarReturnType = new TypeToken<ModelsBillingAccount>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v2BillingAccountsBillingAccountIdPatch
     * @param billingAccountId Billing Account ID (required)
     * @param routesV2UpdateBillingAccountRequest Request body for updating a billing account (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account updated successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to update Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsBillingAccountIdPatchCall(String billingAccountId, RoutesV2UpdateBillingAccountRequest routesV2UpdateBillingAccountRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = routesV2UpdateBillingAccountRequest;

        // create path and map variables
        String localVarPath = "/v2/billing/accounts/{billing_account_id}"
            .replace("{" + "billing_account_id" + "}", localVarApiClient.escapeString(billingAccountId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Bearer" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v2BillingAccountsBillingAccountIdPatchValidateBeforeCall(String billingAccountId, RoutesV2UpdateBillingAccountRequest routesV2UpdateBillingAccountRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'billingAccountId' is set
        if (billingAccountId == null) {
            throw new ApiException("Missing the required parameter 'billingAccountId' when calling v2BillingAccountsBillingAccountIdPatch(Async)");
        }

        // verify the required parameter 'routesV2UpdateBillingAccountRequest' is set
        if (routesV2UpdateBillingAccountRequest == null) {
            throw new ApiException("Missing the required parameter 'routesV2UpdateBillingAccountRequest' when calling v2BillingAccountsBillingAccountIdPatch(Async)");
        }

        return v2BillingAccountsBillingAccountIdPatchCall(billingAccountId, routesV2UpdateBillingAccountRequest, _callback);

    }

    /**
     * Update Billing Account
     * Update Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @param routesV2UpdateBillingAccountRequest Request body for updating a billing account (required)
     * @return ModelsBillingAccount
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account updated successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to update Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public ModelsBillingAccount v2BillingAccountsBillingAccountIdPatch(String billingAccountId, RoutesV2UpdateBillingAccountRequest routesV2UpdateBillingAccountRequest) throws ApiException {
        ApiResponse<ModelsBillingAccount> localVarResp = v2BillingAccountsBillingAccountIdPatchWithHttpInfo(billingAccountId, routesV2UpdateBillingAccountRequest);
        return localVarResp.getData();
    }

    /**
     * Update Billing Account
     * Update Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @param routesV2UpdateBillingAccountRequest Request body for updating a billing account (required)
     * @return ApiResponse&lt;ModelsBillingAccount&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account updated successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to update Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelsBillingAccount> v2BillingAccountsBillingAccountIdPatchWithHttpInfo(String billingAccountId, RoutesV2UpdateBillingAccountRequest routesV2UpdateBillingAccountRequest) throws ApiException {
        okhttp3.Call localVarCall = v2BillingAccountsBillingAccountIdPatchValidateBeforeCall(billingAccountId, routesV2UpdateBillingAccountRequest, null);
        Type localVarReturnType = new TypeToken<ModelsBillingAccount>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Billing Account (asynchronously)
     * Update Billing Account
     * @param billingAccountId Billing Account ID (required)
     * @param routesV2UpdateBillingAccountRequest Request body for updating a billing account (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account updated successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to update Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsBillingAccountIdPatchAsync(String billingAccountId, RoutesV2UpdateBillingAccountRequest routesV2UpdateBillingAccountRequest, final ApiCallback<ModelsBillingAccount> _callback) throws ApiException {

        okhttp3.Call localVarCall = v2BillingAccountsBillingAccountIdPatchValidateBeforeCall(billingAccountId, routesV2UpdateBillingAccountRequest, _callback);
        Type localVarReturnType = new TypeToken<ModelsBillingAccount>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v2BillingAccountsGet
     * @param limit Limit (optional)
     * @param offset Offset (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> list billing accounts successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to list Billing Accounts </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsGetCall(Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/billing/accounts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Bearer" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v2BillingAccountsGetValidateBeforeCall(Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        return v2BillingAccountsGetCall(limit, offset, _callback);

    }

    /**
     * List Billing Accounts
     * List Billing Accounts
     * @param limit Limit (optional)
     * @param offset Offset (optional)
     * @return ModelsBillingAccountList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> list billing accounts successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to list Billing Accounts </td><td>  -  </td></tr>
     </table>
     */
    public ModelsBillingAccountList v2BillingAccountsGet(Integer limit, Integer offset) throws ApiException {
        ApiResponse<ModelsBillingAccountList> localVarResp = v2BillingAccountsGetWithHttpInfo(limit, offset);
        return localVarResp.getData();
    }

    /**
     * List Billing Accounts
     * List Billing Accounts
     * @param limit Limit (optional)
     * @param offset Offset (optional)
     * @return ApiResponse&lt;ModelsBillingAccountList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> list billing accounts successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to list Billing Accounts </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelsBillingAccountList> v2BillingAccountsGetWithHttpInfo(Integer limit, Integer offset) throws ApiException {
        okhttp3.Call localVarCall = v2BillingAccountsGetValidateBeforeCall(limit, offset, null);
        Type localVarReturnType = new TypeToken<ModelsBillingAccountList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Billing Accounts (asynchronously)
     * List Billing Accounts
     * @param limit Limit (optional)
     * @param offset Offset (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> list billing accounts successfull </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to list Billing Accounts </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsGetAsync(Integer limit, Integer offset, final ApiCallback<ModelsBillingAccountList> _callback) throws ApiException {

        okhttp3.Call localVarCall = v2BillingAccountsGetValidateBeforeCall(limit, offset, _callback);
        Type localVarReturnType = new TypeToken<ModelsBillingAccountList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v2BillingAccountsPost
     * @param routesV2CreateBillingAccountRequest Request body for creating a billing account (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account created successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to create Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsPostCall(RoutesV2CreateBillingAccountRequest routesV2CreateBillingAccountRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = routesV2CreateBillingAccountRequest;

        // create path and map variables
        String localVarPath = "/v2/billing/accounts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "Bearer" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v2BillingAccountsPostValidateBeforeCall(RoutesV2CreateBillingAccountRequest routesV2CreateBillingAccountRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'routesV2CreateBillingAccountRequest' is set
        if (routesV2CreateBillingAccountRequest == null) {
            throw new ApiException("Missing the required parameter 'routesV2CreateBillingAccountRequest' when calling v2BillingAccountsPost(Async)");
        }

        return v2BillingAccountsPostCall(routesV2CreateBillingAccountRequest, _callback);

    }

    /**
     * Create Billing Account
     * Create Billing Account
     * @param routesV2CreateBillingAccountRequest Request body for creating a billing account (required)
     * @return ModelsBillingAccount
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account created successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to create Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public ModelsBillingAccount v2BillingAccountsPost(RoutesV2CreateBillingAccountRequest routesV2CreateBillingAccountRequest) throws ApiException {
        ApiResponse<ModelsBillingAccount> localVarResp = v2BillingAccountsPostWithHttpInfo(routesV2CreateBillingAccountRequest);
        return localVarResp.getData();
    }

    /**
     * Create Billing Account
     * Create Billing Account
     * @param routesV2CreateBillingAccountRequest Request body for creating a billing account (required)
     * @return ApiResponse&lt;ModelsBillingAccount&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account created successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to create Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ModelsBillingAccount> v2BillingAccountsPostWithHttpInfo(RoutesV2CreateBillingAccountRequest routesV2CreateBillingAccountRequest) throws ApiException {
        okhttp3.Call localVarCall = v2BillingAccountsPostValidateBeforeCall(routesV2CreateBillingAccountRequest, null);
        Type localVarReturnType = new TypeToken<ModelsBillingAccount>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Billing Account (asynchronously)
     * Create Billing Account
     * @param routesV2CreateBillingAccountRequest Request body for creating a billing account (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> billing account created successfully </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid JSON request body </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Failed to create Billing Account </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v2BillingAccountsPostAsync(RoutesV2CreateBillingAccountRequest routesV2CreateBillingAccountRequest, final ApiCallback<ModelsBillingAccount> _callback) throws ApiException {

        okhttp3.Call localVarCall = v2BillingAccountsPostValidateBeforeCall(routesV2CreateBillingAccountRequest, _callback);
        Type localVarReturnType = new TypeToken<ModelsBillingAccount>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
