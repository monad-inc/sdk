/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.PagerdutyAlertsConfig;
import org.openapitools.client.model.PagerdutySummaryConfig;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PagerDuty Output Settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-12T20:47:11.231120115Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class PagerdutySettingsConfig {
  public static final String SERIALIZED_NAME_ALERTS_CONFIG = "alerts_config";
  @SerializedName(SERIALIZED_NAME_ALERTS_CONFIG)
  @javax.annotation.Nullable
  private PagerdutyAlertsConfig alertsConfig;

  public static final String SERIALIZED_NAME_DEFAULT_EVENT_TYPE = "default_event_type";
  @SerializedName(SERIALIZED_NAME_DEFAULT_EVENT_TYPE)
  @javax.annotation.Nullable
  private String defaultEventType;

  public static final String SERIALIZED_NAME_SUMMARY_CONFIG = "summary_config";
  @SerializedName(SERIALIZED_NAME_SUMMARY_CONFIG)
  @javax.annotation.Nullable
  private PagerdutySummaryConfig summaryConfig;

  public PagerdutySettingsConfig() {
  }

  public PagerdutySettingsConfig alertsConfig(@javax.annotation.Nullable PagerdutyAlertsConfig alertsConfig) {
    this.alertsConfig = alertsConfig;
    return this;
  }

  /**
   * Get alertsConfig
   * @return alertsConfig
   */
  @javax.annotation.Nullable
  public PagerdutyAlertsConfig getAlertsConfig() {
    return alertsConfig;
  }

  public void setAlertsConfig(@javax.annotation.Nullable PagerdutyAlertsConfig alertsConfig) {
    this.alertsConfig = alertsConfig;
  }


  public PagerdutySettingsConfig defaultEventType(@javax.annotation.Nullable String defaultEventType) {
    this.defaultEventType = defaultEventType;
    return this;
  }

  /**
   * EventType determines whether events are sent as &#39;change&#39; or &#39;alert&#39; events. We recommend reading the docs for this output before making this choice.
   * @return defaultEventType
   */
  @javax.annotation.Nullable
  public String getDefaultEventType() {
    return defaultEventType;
  }

  public void setDefaultEventType(@javax.annotation.Nullable String defaultEventType) {
    this.defaultEventType = defaultEventType;
  }


  public PagerdutySettingsConfig summaryConfig(@javax.annotation.Nullable PagerdutySummaryConfig summaryConfig) {
    this.summaryConfig = summaryConfig;
    return this;
  }

  /**
   * Get summaryConfig
   * @return summaryConfig
   */
  @javax.annotation.Nullable
  public PagerdutySummaryConfig getSummaryConfig() {
    return summaryConfig;
  }

  public void setSummaryConfig(@javax.annotation.Nullable PagerdutySummaryConfig summaryConfig) {
    this.summaryConfig = summaryConfig;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PagerdutySettingsConfig pagerdutySettingsConfig = (PagerdutySettingsConfig) o;
    return Objects.equals(this.alertsConfig, pagerdutySettingsConfig.alertsConfig) &&
        Objects.equals(this.defaultEventType, pagerdutySettingsConfig.defaultEventType) &&
        Objects.equals(this.summaryConfig, pagerdutySettingsConfig.summaryConfig);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertsConfig, defaultEventType, summaryConfig);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PagerdutySettingsConfig {\n");
    sb.append("    alertsConfig: ").append(toIndentedString(alertsConfig)).append("\n");
    sb.append("    defaultEventType: ").append(toIndentedString(defaultEventType)).append("\n");
    sb.append("    summaryConfig: ").append(toIndentedString(summaryConfig)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alerts_config");
    openapiFields.add("default_event_type");
    openapiFields.add("summary_config");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PagerdutySettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PagerdutySettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PagerdutySettingsConfig is not found in the empty JSON string", PagerdutySettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PagerdutySettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PagerdutySettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `alerts_config`
      if (jsonObj.get("alerts_config") != null && !jsonObj.get("alerts_config").isJsonNull()) {
        PagerdutyAlertsConfig.validateJsonElement(jsonObj.get("alerts_config"));
      }
      if ((jsonObj.get("default_event_type") != null && !jsonObj.get("default_event_type").isJsonNull()) && !jsonObj.get("default_event_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `default_event_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("default_event_type").toString()));
      }
      // validate the optional field `summary_config`
      if (jsonObj.get("summary_config") != null && !jsonObj.get("summary_config").isJsonNull()) {
        PagerdutySummaryConfig.validateJsonElement(jsonObj.get("summary_config"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PagerdutySettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PagerdutySettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PagerdutySettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PagerdutySettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<PagerdutySettingsConfig>() {
           @Override
           public void write(JsonWriter out, PagerdutySettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PagerdutySettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PagerdutySettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PagerdutySettingsConfig
   * @throws IOException if the JSON string is invalid with respect to PagerdutySettingsConfig
   */
  public static PagerdutySettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PagerdutySettingsConfig.class);
  }

  /**
   * Convert an instance of PagerdutySettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

