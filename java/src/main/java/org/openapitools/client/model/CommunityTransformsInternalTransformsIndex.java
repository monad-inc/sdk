/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CommunityTransformsInternalTransformMetadata;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CommunityTransformsInternalTransformsIndex
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-27T22:14:38.658039272Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class CommunityTransformsInternalTransformsIndex {
  public static final String SERIALIZED_NAME_LAST_UPDATED = "last_updated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  @javax.annotation.Nullable
  private String lastUpdated;

  public static final String SERIALIZED_NAME_SCHEMA_HASH = "schema_hash";
  @SerializedName(SERIALIZED_NAME_SCHEMA_HASH)
  @javax.annotation.Nullable
  private String schemaHash;

  public static final String SERIALIZED_NAME_TRANSFORMS = "transforms";
  @SerializedName(SERIALIZED_NAME_TRANSFORMS)
  @javax.annotation.Nullable
  private List<CommunityTransformsInternalTransformMetadata> transforms = new ArrayList<>();

  public CommunityTransformsInternalTransformsIndex() {
  }

  public CommunityTransformsInternalTransformsIndex lastUpdated(@javax.annotation.Nullable String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * Get lastUpdated
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(@javax.annotation.Nullable String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public CommunityTransformsInternalTransformsIndex schemaHash(@javax.annotation.Nullable String schemaHash) {
    this.schemaHash = schemaHash;
    return this;
  }

  /**
   * Hash of the schema structure
   * @return schemaHash
   */
  @javax.annotation.Nullable
  public String getSchemaHash() {
    return schemaHash;
  }

  public void setSchemaHash(@javax.annotation.Nullable String schemaHash) {
    this.schemaHash = schemaHash;
  }


  public CommunityTransformsInternalTransformsIndex transforms(@javax.annotation.Nullable List<CommunityTransformsInternalTransformMetadata> transforms) {
    this.transforms = transforms;
    return this;
  }

  public CommunityTransformsInternalTransformsIndex addTransformsItem(CommunityTransformsInternalTransformMetadata transformsItem) {
    if (this.transforms == null) {
      this.transforms = new ArrayList<>();
    }
    this.transforms.add(transformsItem);
    return this;
  }

  /**
   * Get transforms
   * @return transforms
   */
  @javax.annotation.Nullable
  public List<CommunityTransformsInternalTransformMetadata> getTransforms() {
    return transforms;
  }

  public void setTransforms(@javax.annotation.Nullable List<CommunityTransformsInternalTransformMetadata> transforms) {
    this.transforms = transforms;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunityTransformsInternalTransformsIndex communityTransformsInternalTransformsIndex = (CommunityTransformsInternalTransformsIndex) o;
    return Objects.equals(this.lastUpdated, communityTransformsInternalTransformsIndex.lastUpdated) &&
        Objects.equals(this.schemaHash, communityTransformsInternalTransformsIndex.schemaHash) &&
        Objects.equals(this.transforms, communityTransformsInternalTransformsIndex.transforms);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastUpdated, schemaHash, transforms);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunityTransformsInternalTransformsIndex {\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    schemaHash: ").append(toIndentedString(schemaHash)).append("\n");
    sb.append("    transforms: ").append(toIndentedString(transforms)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("last_updated", "schema_hash", "transforms"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommunityTransformsInternalTransformsIndex
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommunityTransformsInternalTransformsIndex.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunityTransformsInternalTransformsIndex is not found in the empty JSON string", CommunityTransformsInternalTransformsIndex.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommunityTransformsInternalTransformsIndex.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunityTransformsInternalTransformsIndex` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("last_updated") != null && !jsonObj.get("last_updated").isJsonNull()) && !jsonObj.get("last_updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_updated").toString()));
      }
      if ((jsonObj.get("schema_hash") != null && !jsonObj.get("schema_hash").isJsonNull()) && !jsonObj.get("schema_hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `schema_hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("schema_hash").toString()));
      }
      if (jsonObj.get("transforms") != null && !jsonObj.get("transforms").isJsonNull()) {
        JsonArray jsonArraytransforms = jsonObj.getAsJsonArray("transforms");
        if (jsonArraytransforms != null) {
          // ensure the json data is an array
          if (!jsonObj.get("transforms").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `transforms` to be an array in the JSON string but got `%s`", jsonObj.get("transforms").toString()));
          }

          // validate the optional field `transforms` (array)
          for (int i = 0; i < jsonArraytransforms.size(); i++) {
            CommunityTransformsInternalTransformMetadata.validateJsonElement(jsonArraytransforms.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunityTransformsInternalTransformsIndex.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunityTransformsInternalTransformsIndex' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunityTransformsInternalTransformsIndex> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunityTransformsInternalTransformsIndex.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunityTransformsInternalTransformsIndex>() {
           @Override
           public void write(JsonWriter out, CommunityTransformsInternalTransformsIndex value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunityTransformsInternalTransformsIndex read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommunityTransformsInternalTransformsIndex given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommunityTransformsInternalTransformsIndex
   * @throws IOException if the JSON string is invalid with respect to CommunityTransformsInternalTransformsIndex
   */
  public static CommunityTransformsInternalTransformsIndex fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunityTransformsInternalTransformsIndex.class);
  }

  /**
   * Convert an instance of CommunityTransformsInternalTransformsIndex to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

