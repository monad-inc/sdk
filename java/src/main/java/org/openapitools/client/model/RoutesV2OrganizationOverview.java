/*
 * Monad Swagger API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ModelsDataUsage;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RoutesV2OrganizationOverview
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-22T01:58:49.639190406Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class RoutesV2OrganizationOverview {
  public static final String SERIALIZED_NAME_DISABLED = "disabled";
  @SerializedName(SERIALIZED_NAME_DISABLED)
  @javax.annotation.Nonnull
  private Integer disabled;

  public static final String SERIALIZED_NAME_EGRESS = "egress";
  @SerializedName(SERIALIZED_NAME_EGRESS)
  @javax.annotation.Nullable
  private ModelsDataUsage egress;

  public static final String SERIALIZED_NAME_HEALTHY = "healthy";
  @SerializedName(SERIALIZED_NAME_HEALTHY)
  @javax.annotation.Nonnull
  private Integer healthy;

  public static final String SERIALIZED_NAME_INGRESS = "ingress";
  @SerializedName(SERIALIZED_NAME_INGRESS)
  @javax.annotation.Nullable
  private ModelsDataUsage ingress;

  public static final String SERIALIZED_NAME_UNHEALTHY = "unhealthy";
  @SerializedName(SERIALIZED_NAME_UNHEALTHY)
  @javax.annotation.Nonnull
  private Integer unhealthy;

  public RoutesV2OrganizationOverview() {
  }

  public RoutesV2OrganizationOverview disabled(@javax.annotation.Nonnull Integer disabled) {
    this.disabled = disabled;
    return this;
  }

  /**
   * Get disabled
   * @return disabled
   */
  @javax.annotation.Nonnull
  public Integer getDisabled() {
    return disabled;
  }

  public void setDisabled(@javax.annotation.Nonnull Integer disabled) {
    this.disabled = disabled;
  }


  public RoutesV2OrganizationOverview egress(@javax.annotation.Nullable ModelsDataUsage egress) {
    this.egress = egress;
    return this;
  }

  /**
   * Get egress
   * @return egress
   */
  @javax.annotation.Nullable
  public ModelsDataUsage getEgress() {
    return egress;
  }

  public void setEgress(@javax.annotation.Nullable ModelsDataUsage egress) {
    this.egress = egress;
  }


  public RoutesV2OrganizationOverview healthy(@javax.annotation.Nonnull Integer healthy) {
    this.healthy = healthy;
    return this;
  }

  /**
   * Get healthy
   * @return healthy
   */
  @javax.annotation.Nonnull
  public Integer getHealthy() {
    return healthy;
  }

  public void setHealthy(@javax.annotation.Nonnull Integer healthy) {
    this.healthy = healthy;
  }


  public RoutesV2OrganizationOverview ingress(@javax.annotation.Nullable ModelsDataUsage ingress) {
    this.ingress = ingress;
    return this;
  }

  /**
   * Get ingress
   * @return ingress
   */
  @javax.annotation.Nullable
  public ModelsDataUsage getIngress() {
    return ingress;
  }

  public void setIngress(@javax.annotation.Nullable ModelsDataUsage ingress) {
    this.ingress = ingress;
  }


  public RoutesV2OrganizationOverview unhealthy(@javax.annotation.Nonnull Integer unhealthy) {
    this.unhealthy = unhealthy;
    return this;
  }

  /**
   * Get unhealthy
   * @return unhealthy
   */
  @javax.annotation.Nonnull
  public Integer getUnhealthy() {
    return unhealthy;
  }

  public void setUnhealthy(@javax.annotation.Nonnull Integer unhealthy) {
    this.unhealthy = unhealthy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoutesV2OrganizationOverview routesV2OrganizationOverview = (RoutesV2OrganizationOverview) o;
    return Objects.equals(this.disabled, routesV2OrganizationOverview.disabled) &&
        Objects.equals(this.egress, routesV2OrganizationOverview.egress) &&
        Objects.equals(this.healthy, routesV2OrganizationOverview.healthy) &&
        Objects.equals(this.ingress, routesV2OrganizationOverview.ingress) &&
        Objects.equals(this.unhealthy, routesV2OrganizationOverview.unhealthy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(disabled, egress, healthy, ingress, unhealthy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoutesV2OrganizationOverview {\n");
    sb.append("    disabled: ").append(toIndentedString(disabled)).append("\n");
    sb.append("    egress: ").append(toIndentedString(egress)).append("\n");
    sb.append("    healthy: ").append(toIndentedString(healthy)).append("\n");
    sb.append("    ingress: ").append(toIndentedString(ingress)).append("\n");
    sb.append("    unhealthy: ").append(toIndentedString(unhealthy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("disabled");
    openapiFields.add("egress");
    openapiFields.add("healthy");
    openapiFields.add("ingress");
    openapiFields.add("unhealthy");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("disabled");
    openapiRequiredFields.add("healthy");
    openapiRequiredFields.add("unhealthy");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RoutesV2OrganizationOverview
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RoutesV2OrganizationOverview.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RoutesV2OrganizationOverview is not found in the empty JSON string", RoutesV2OrganizationOverview.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RoutesV2OrganizationOverview.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RoutesV2OrganizationOverview` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RoutesV2OrganizationOverview.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `egress`
      if (jsonObj.get("egress") != null && !jsonObj.get("egress").isJsonNull()) {
        ModelsDataUsage.validateJsonElement(jsonObj.get("egress"));
      }
      // validate the optional field `ingress`
      if (jsonObj.get("ingress") != null && !jsonObj.get("ingress").isJsonNull()) {
        ModelsDataUsage.validateJsonElement(jsonObj.get("ingress"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RoutesV2OrganizationOverview.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RoutesV2OrganizationOverview' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RoutesV2OrganizationOverview> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RoutesV2OrganizationOverview.class));

       return (TypeAdapter<T>) new TypeAdapter<RoutesV2OrganizationOverview>() {
           @Override
           public void write(JsonWriter out, RoutesV2OrganizationOverview value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RoutesV2OrganizationOverview read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RoutesV2OrganizationOverview given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RoutesV2OrganizationOverview
   * @throws IOException if the JSON string is invalid with respect to RoutesV2OrganizationOverview
   */
  public static RoutesV2OrganizationOverview fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RoutesV2OrganizationOverview.class);
  }

  /**
   * Convert an instance of RoutesV2OrganizationOverview to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

