/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.RoutesV2OrganizationOverview;
import org.openapitools.client.model.RoutesV2PipelineStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RoutesV2GetOrganizationSummaryResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-09T19:54:12.926349512Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class RoutesV2GetOrganizationSummaryResponse {
  public static final String SERIALIZED_NAME_ORGANIZATION_ID = "organization_id";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_ID)
  @javax.annotation.Nonnull
  private String organizationId;

  public static final String SERIALIZED_NAME_PIPELINES = "pipelines";
  @SerializedName(SERIALIZED_NAME_PIPELINES)
  @javax.annotation.Nullable
  private List<RoutesV2PipelineStatus> pipelines = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUMMARY = "summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  @javax.annotation.Nullable
  private RoutesV2OrganizationOverview summary;

  public RoutesV2GetOrganizationSummaryResponse() {
  }

  public RoutesV2GetOrganizationSummaryResponse organizationId(@javax.annotation.Nonnull String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Get organizationId
   * @return organizationId
   */
  @javax.annotation.Nonnull
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(@javax.annotation.Nonnull String organizationId) {
    this.organizationId = organizationId;
  }


  public RoutesV2GetOrganizationSummaryResponse pipelines(@javax.annotation.Nullable List<RoutesV2PipelineStatus> pipelines) {
    this.pipelines = pipelines;
    return this;
  }

  public RoutesV2GetOrganizationSummaryResponse addPipelinesItem(RoutesV2PipelineStatus pipelinesItem) {
    if (this.pipelines == null) {
      this.pipelines = new ArrayList<>();
    }
    this.pipelines.add(pipelinesItem);
    return this;
  }

  /**
   * Get pipelines
   * @return pipelines
   */
  @javax.annotation.Nullable
  public List<RoutesV2PipelineStatus> getPipelines() {
    return pipelines;
  }

  public void setPipelines(@javax.annotation.Nullable List<RoutesV2PipelineStatus> pipelines) {
    this.pipelines = pipelines;
  }


  public RoutesV2GetOrganizationSummaryResponse summary(@javax.annotation.Nullable RoutesV2OrganizationOverview summary) {
    this.summary = summary;
    return this;
  }

  /**
   * Get summary
   * @return summary
   */
  @javax.annotation.Nullable
  public RoutesV2OrganizationOverview getSummary() {
    return summary;
  }

  public void setSummary(@javax.annotation.Nullable RoutesV2OrganizationOverview summary) {
    this.summary = summary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoutesV2GetOrganizationSummaryResponse routesV2GetOrganizationSummaryResponse = (RoutesV2GetOrganizationSummaryResponse) o;
    return Objects.equals(this.organizationId, routesV2GetOrganizationSummaryResponse.organizationId) &&
        Objects.equals(this.pipelines, routesV2GetOrganizationSummaryResponse.pipelines) &&
        Objects.equals(this.summary, routesV2GetOrganizationSummaryResponse.summary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organizationId, pipelines, summary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoutesV2GetOrganizationSummaryResponse {\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    pipelines: ").append(toIndentedString(pipelines)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("organization_id", "pipelines", "summary"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(Arrays.asList("organization_id"));
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RoutesV2GetOrganizationSummaryResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RoutesV2GetOrganizationSummaryResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RoutesV2GetOrganizationSummaryResponse is not found in the empty JSON string", RoutesV2GetOrganizationSummaryResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RoutesV2GetOrganizationSummaryResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RoutesV2GetOrganizationSummaryResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RoutesV2GetOrganizationSummaryResponse.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("organization_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organization_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organization_id").toString()));
      }
      if (jsonObj.get("pipelines") != null && !jsonObj.get("pipelines").isJsonNull()) {
        JsonArray jsonArraypipelines = jsonObj.getAsJsonArray("pipelines");
        if (jsonArraypipelines != null) {
          // ensure the json data is an array
          if (!jsonObj.get("pipelines").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `pipelines` to be an array in the JSON string but got `%s`", jsonObj.get("pipelines").toString()));
          }

          // validate the optional field `pipelines` (array)
          for (int i = 0; i < jsonArraypipelines.size(); i++) {
            RoutesV2PipelineStatus.validateJsonElement(jsonArraypipelines.get(i));
          };
        }
      }
      // validate the optional field `summary`
      if (jsonObj.get("summary") != null && !jsonObj.get("summary").isJsonNull()) {
        RoutesV2OrganizationOverview.validateJsonElement(jsonObj.get("summary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RoutesV2GetOrganizationSummaryResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RoutesV2GetOrganizationSummaryResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RoutesV2GetOrganizationSummaryResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RoutesV2GetOrganizationSummaryResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<RoutesV2GetOrganizationSummaryResponse>() {
           @Override
           public void write(JsonWriter out, RoutesV2GetOrganizationSummaryResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RoutesV2GetOrganizationSummaryResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RoutesV2GetOrganizationSummaryResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RoutesV2GetOrganizationSummaryResponse
   * @throws IOException if the JSON string is invalid with respect to RoutesV2GetOrganizationSummaryResponse
   */
  public static RoutesV2GetOrganizationSummaryResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RoutesV2GetOrganizationSummaryResponse.class);
  }

  /**
   * Convert an instance of RoutesV2GetOrganizationSummaryResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

