/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AuthenticationtypesAuthenticationMethod;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RoutesV3MFAStatusResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-07-09T19:44:28.272838845Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class RoutesV3MFAStatusResponse {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  @javax.annotation.Nullable
  private Boolean enabled;

  public static final String SERIALIZED_NAME_METHODS = "methods";
  @SerializedName(SERIALIZED_NAME_METHODS)
  @javax.annotation.Nullable
  private List<AuthenticationtypesAuthenticationMethod> methods = new ArrayList<>();

  public RoutesV3MFAStatusResponse() {
  }

  public RoutesV3MFAStatusResponse enabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(@javax.annotation.Nullable Boolean enabled) {
    this.enabled = enabled;
  }


  public RoutesV3MFAStatusResponse methods(@javax.annotation.Nullable List<AuthenticationtypesAuthenticationMethod> methods) {
    this.methods = methods;
    return this;
  }

  public RoutesV3MFAStatusResponse addMethodsItem(AuthenticationtypesAuthenticationMethod methodsItem) {
    if (this.methods == null) {
      this.methods = new ArrayList<>();
    }
    this.methods.add(methodsItem);
    return this;
  }

  /**
   * Get methods
   * @return methods
   */
  @javax.annotation.Nullable
  public List<AuthenticationtypesAuthenticationMethod> getMethods() {
    return methods;
  }

  public void setMethods(@javax.annotation.Nullable List<AuthenticationtypesAuthenticationMethod> methods) {
    this.methods = methods;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RoutesV3MFAStatusResponse routesV3MFAStatusResponse = (RoutesV3MFAStatusResponse) o;
    return Objects.equals(this.enabled, routesV3MFAStatusResponse.enabled) &&
        Objects.equals(this.methods, routesV3MFAStatusResponse.methods);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, methods);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RoutesV3MFAStatusResponse {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    methods: ").append(toIndentedString(methods)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("enabled", "methods"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RoutesV3MFAStatusResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RoutesV3MFAStatusResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RoutesV3MFAStatusResponse is not found in the empty JSON string", RoutesV3MFAStatusResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RoutesV3MFAStatusResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RoutesV3MFAStatusResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("methods") != null && !jsonObj.get("methods").isJsonNull()) {
        JsonArray jsonArraymethods = jsonObj.getAsJsonArray("methods");
        if (jsonArraymethods != null) {
          // ensure the json data is an array
          if (!jsonObj.get("methods").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `methods` to be an array in the JSON string but got `%s`", jsonObj.get("methods").toString()));
          }

          // validate the optional field `methods` (array)
          for (int i = 0; i < jsonArraymethods.size(); i++) {
            AuthenticationtypesAuthenticationMethod.validateJsonElement(jsonArraymethods.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RoutesV3MFAStatusResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RoutesV3MFAStatusResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RoutesV3MFAStatusResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RoutesV3MFAStatusResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<RoutesV3MFAStatusResponse>() {
           @Override
           public void write(JsonWriter out, RoutesV3MFAStatusResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RoutesV3MFAStatusResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RoutesV3MFAStatusResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RoutesV3MFAStatusResponse
   * @throws IOException if the JSON string is invalid with respect to RoutesV3MFAStatusResponse
   */
  public static RoutesV3MFAStatusResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RoutesV3MFAStatusResponse.class);
  }

  /**
   * Convert an instance of RoutesV3MFAStatusResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

