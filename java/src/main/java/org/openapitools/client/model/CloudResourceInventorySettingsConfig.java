/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Wiz cloud resource inventory settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-16T15:14:13.367181019Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class CloudResourceInventorySettingsConfig {
  public static final String SERIALIZED_NAME_CLOUD_PLATFORM = "cloudPlatform";
  @SerializedName(SERIALIZED_NAME_CLOUD_PLATFORM)
  @javax.annotation.Nullable
  private List<String> cloudPlatform = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENDPOINT_URL = "endpoint_url";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_URL)
  @javax.annotation.Nullable
  private String endpointUrl;

  public static final String SERIALIZED_NAME_ENTITY_TYPE = "entityType";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE)
  @javax.annotation.Nullable
  private List<String> entityType = new ArrayList<>();

  public static final String SERIALIZED_NAME_FULL_SNAPSHOT = "full_snapshot";
  @SerializedName(SERIALIZED_NAME_FULL_SNAPSHOT)
  @javax.annotation.Nullable
  private Boolean fullSnapshot;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  @javax.annotation.Nullable
  private Integer interval;

  public CloudResourceInventorySettingsConfig() {
  }

  public CloudResourceInventorySettingsConfig cloudPlatform(@javax.annotation.Nullable List<String> cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
    return this;
  }

  public CloudResourceInventorySettingsConfig addCloudPlatformItem(String cloudPlatformItem) {
    if (this.cloudPlatform == null) {
      this.cloudPlatform = new ArrayList<>();
    }
    this.cloudPlatform.add(cloudPlatformItem);
    return this;
  }

  /**
   * Cloud Platform types for Wiz. Ex: &#39;AWS&#39;, &#39;AZURE&#39;, &#39;GCP&#39;.
   * @return cloudPlatform
   */
  @javax.annotation.Nullable
  public List<String> getCloudPlatform() {
    return cloudPlatform;
  }

  public void setCloudPlatform(@javax.annotation.Nullable List<String> cloudPlatform) {
    this.cloudPlatform = cloudPlatform;
  }


  public CloudResourceInventorySettingsConfig endpointUrl(@javax.annotation.Nullable String endpointUrl) {
    this.endpointUrl = endpointUrl;
    return this;
  }

  /**
   * Endpoint URL for the Wiz API. Ex: &#39;https://api.wiz.io/v1/cloud-resource-inventory&#39;.
   * @return endpointUrl
   */
  @javax.annotation.Nullable
  public String getEndpointUrl() {
    return endpointUrl;
  }

  public void setEndpointUrl(@javax.annotation.Nullable String endpointUrl) {
    this.endpointUrl = endpointUrl;
  }


  public CloudResourceInventorySettingsConfig entityType(@javax.annotation.Nullable List<String> entityType) {
    this.entityType = entityType;
    return this;
  }

  public CloudResourceInventorySettingsConfig addEntityTypeItem(String entityTypeItem) {
    if (this.entityType == null) {
      this.entityType = new ArrayList<>();
    }
    this.entityType.add(entityTypeItem);
    return this;
  }

  /**
   * Entity types for Wiz. Ex: &#39;ACCOUNT&#39;, &#39;REGION&#39;, &#39;VPC&#39;, &#39;SUBNET&#39;, &#39;INSTANCE&#39;.
   * @return entityType
   */
  @javax.annotation.Nullable
  public List<String> getEntityType() {
    return entityType;
  }

  public void setEntityType(@javax.annotation.Nullable List<String> entityType) {
    this.entityType = entityType;
  }


  public CloudResourceInventorySettingsConfig fullSnapshot(@javax.annotation.Nullable Boolean fullSnapshot) {
    this.fullSnapshot = fullSnapshot;
    return this;
  }

  /**
   * FullSnapshot indicates whether to fetch a full snapshot of the cloud resource inventory.
   * @return fullSnapshot
   */
  @javax.annotation.Nullable
  public Boolean getFullSnapshot() {
    return fullSnapshot;
  }

  public void setFullSnapshot(@javax.annotation.Nullable Boolean fullSnapshot) {
    this.fullSnapshot = fullSnapshot;
  }


  public CloudResourceInventorySettingsConfig interval(@javax.annotation.Nullable Integer interval) {
    this.interval = interval;
    return this;
  }

  /**
   * Defines how frequently (in hours) the system polls the Wiz API to retrieve updated data. Only applicable when full_snapshot is enabled. The interval timer begins after each sync operation completes.
   * @return interval
   */
  @javax.annotation.Nullable
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(@javax.annotation.Nullable Integer interval) {
    this.interval = interval;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudResourceInventorySettingsConfig cloudResourceInventorySettingsConfig = (CloudResourceInventorySettingsConfig) o;
    return Objects.equals(this.cloudPlatform, cloudResourceInventorySettingsConfig.cloudPlatform) &&
        Objects.equals(this.endpointUrl, cloudResourceInventorySettingsConfig.endpointUrl) &&
        Objects.equals(this.entityType, cloudResourceInventorySettingsConfig.entityType) &&
        Objects.equals(this.fullSnapshot, cloudResourceInventorySettingsConfig.fullSnapshot) &&
        Objects.equals(this.interval, cloudResourceInventorySettingsConfig.interval);
  }

  @Override
  public int hashCode() {
    return Objects.hash(cloudPlatform, endpointUrl, entityType, fullSnapshot, interval);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudResourceInventorySettingsConfig {\n");
    sb.append("    cloudPlatform: ").append(toIndentedString(cloudPlatform)).append("\n");
    sb.append("    endpointUrl: ").append(toIndentedString(endpointUrl)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    fullSnapshot: ").append(toIndentedString(fullSnapshot)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("cloudPlatform");
    openapiFields.add("endpoint_url");
    openapiFields.add("entityType");
    openapiFields.add("full_snapshot");
    openapiFields.add("interval");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudResourceInventorySettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudResourceInventorySettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudResourceInventorySettingsConfig is not found in the empty JSON string", CloudResourceInventorySettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudResourceInventorySettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudResourceInventorySettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("cloudPlatform") != null && !jsonObj.get("cloudPlatform").isJsonNull() && !jsonObj.get("cloudPlatform").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloudPlatform` to be an array in the JSON string but got `%s`", jsonObj.get("cloudPlatform").toString()));
      }
      if ((jsonObj.get("endpoint_url") != null && !jsonObj.get("endpoint_url").isJsonNull()) && !jsonObj.get("endpoint_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("entityType") != null && !jsonObj.get("entityType").isJsonNull() && !jsonObj.get("entityType").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `entityType` to be an array in the JSON string but got `%s`", jsonObj.get("entityType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudResourceInventorySettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudResourceInventorySettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudResourceInventorySettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudResourceInventorySettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudResourceInventorySettingsConfig>() {
           @Override
           public void write(JsonWriter out, CloudResourceInventorySettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudResourceInventorySettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudResourceInventorySettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudResourceInventorySettingsConfig
   * @throws IOException if the JSON string is invalid with respect to CloudResourceInventorySettingsConfig
   */
  public static CloudResourceInventorySettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudResourceInventorySettingsConfig.class);
  }

  /**
   * Convert an instance of CloudResourceInventorySettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

