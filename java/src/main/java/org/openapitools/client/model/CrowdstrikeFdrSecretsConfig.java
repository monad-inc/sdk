/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ModelsSecret;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Crowdstrike Falcon Data Replicator secrets
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-06T20:46:53.463936844Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class CrowdstrikeFdrSecretsConfig {
  public static final String SERIALIZED_NAME_AWS_ACCESS_KEY = "aws_access_key";
  @SerializedName(SERIALIZED_NAME_AWS_ACCESS_KEY)
  @javax.annotation.Nullable
  private ModelsSecret awsAccessKey;

  public static final String SERIALIZED_NAME_AWS_SECRET_KEY = "aws_secret_key";
  @SerializedName(SERIALIZED_NAME_AWS_SECRET_KEY)
  @javax.annotation.Nullable
  private ModelsSecret awsSecretKey;

  public CrowdstrikeFdrSecretsConfig() {
  }

  public CrowdstrikeFdrSecretsConfig awsAccessKey(@javax.annotation.Nullable ModelsSecret awsAccessKey) {
    this.awsAccessKey = awsAccessKey;
    return this;
  }

  /**
   * Get awsAccessKey
   * @return awsAccessKey
   */
  @javax.annotation.Nullable
  public ModelsSecret getAwsAccessKey() {
    return awsAccessKey;
  }

  public void setAwsAccessKey(@javax.annotation.Nullable ModelsSecret awsAccessKey) {
    this.awsAccessKey = awsAccessKey;
  }


  public CrowdstrikeFdrSecretsConfig awsSecretKey(@javax.annotation.Nullable ModelsSecret awsSecretKey) {
    this.awsSecretKey = awsSecretKey;
    return this;
  }

  /**
   * Get awsSecretKey
   * @return awsSecretKey
   */
  @javax.annotation.Nullable
  public ModelsSecret getAwsSecretKey() {
    return awsSecretKey;
  }

  public void setAwsSecretKey(@javax.annotation.Nullable ModelsSecret awsSecretKey) {
    this.awsSecretKey = awsSecretKey;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CrowdstrikeFdrSecretsConfig crowdstrikeFdrSecretsConfig = (CrowdstrikeFdrSecretsConfig) o;
    return Objects.equals(this.awsAccessKey, crowdstrikeFdrSecretsConfig.awsAccessKey) &&
        Objects.equals(this.awsSecretKey, crowdstrikeFdrSecretsConfig.awsSecretKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsAccessKey, awsSecretKey);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CrowdstrikeFdrSecretsConfig {\n");
    sb.append("    awsAccessKey: ").append(toIndentedString(awsAccessKey)).append("\n");
    sb.append("    awsSecretKey: ").append(toIndentedString(awsSecretKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("aws_access_key", "aws_secret_key"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CrowdstrikeFdrSecretsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CrowdstrikeFdrSecretsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CrowdstrikeFdrSecretsConfig is not found in the empty JSON string", CrowdstrikeFdrSecretsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CrowdstrikeFdrSecretsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CrowdstrikeFdrSecretsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `aws_access_key`
      if (jsonObj.get("aws_access_key") != null && !jsonObj.get("aws_access_key").isJsonNull()) {
        ModelsSecret.validateJsonElement(jsonObj.get("aws_access_key"));
      }
      // validate the optional field `aws_secret_key`
      if (jsonObj.get("aws_secret_key") != null && !jsonObj.get("aws_secret_key").isJsonNull()) {
        ModelsSecret.validateJsonElement(jsonObj.get("aws_secret_key"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CrowdstrikeFdrSecretsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CrowdstrikeFdrSecretsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CrowdstrikeFdrSecretsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CrowdstrikeFdrSecretsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CrowdstrikeFdrSecretsConfig>() {
           @Override
           public void write(JsonWriter out, CrowdstrikeFdrSecretsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CrowdstrikeFdrSecretsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CrowdstrikeFdrSecretsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CrowdstrikeFdrSecretsConfig
   * @throws IOException if the JSON string is invalid with respect to CrowdstrikeFdrSecretsConfig
   */
  public static CrowdstrikeFdrSecretsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CrowdstrikeFdrSecretsConfig.class);
  }

  /**
   * Convert an instance of CrowdstrikeFdrSecretsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

