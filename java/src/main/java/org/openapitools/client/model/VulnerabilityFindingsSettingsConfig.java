/*
 * Monad Swagger API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Wiz vulnerability findings settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-01-17T14:25:02.184210344Z[Etc/UTC]", comments = "Generator version: 7.10.0")
public class VulnerabilityFindingsSettingsConfig {
  public static final String SERIALIZED_NAME_ASSET_STATUS = "asset_status";
  @SerializedName(SERIALIZED_NAME_ASSET_STATUS)
  @javax.annotation.Nullable
  private List<String> assetStatus = new ArrayList<>();

  public static final String SERIALIZED_NAME_ASSET_TYPE = "asset_type";
  @SerializedName(SERIALIZED_NAME_ASSET_TYPE)
  @javax.annotation.Nullable
  private String assetType;

  public static final String SERIALIZED_NAME_DETECTION_METHOD = "detection_method";
  @SerializedName(SERIALIZED_NAME_DETECTION_METHOD)
  @javax.annotation.Nullable
  private List<String> detectionMethod = new ArrayList<>();

  public static final String SERIALIZED_NAME_ENDPOINT_URL = "endpoint_url";
  @SerializedName(SERIALIZED_NAME_ENDPOINT_URL)
  @javax.annotation.Nullable
  private String endpointUrl;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private List<String> status = new ArrayList<>();

  public static final String SERIALIZED_NAME_VENDOR_SEVERITY = "vendor_severity";
  @SerializedName(SERIALIZED_NAME_VENDOR_SEVERITY)
  @javax.annotation.Nullable
  private List<String> vendorSeverity = new ArrayList<>();

  public VulnerabilityFindingsSettingsConfig() {
  }

  public VulnerabilityFindingsSettingsConfig assetStatus(@javax.annotation.Nullable List<String> assetStatus) {
    this.assetStatus = assetStatus;
    return this;
  }

  public VulnerabilityFindingsSettingsConfig addAssetStatusItem(String assetStatusItem) {
    if (this.assetStatus == null) {
      this.assetStatus = new ArrayList<>();
    }
    this.assetStatus.add(assetStatusItem);
    return this;
  }

  /**
   * Asset status types for Wiz. Ex: &#39;ACTIVE&#39;, &#39;INACTIVE&#39;.
   * @return assetStatus
   */
  @javax.annotation.Nullable
  public List<String> getAssetStatus() {
    return assetStatus;
  }

  public void setAssetStatus(@javax.annotation.Nullable List<String> assetStatus) {
    this.assetStatus = assetStatus;
  }


  public VulnerabilityFindingsSettingsConfig assetType(@javax.annotation.Nullable String assetType) {
    this.assetType = assetType;
    return this;
  }

  /**
   * Asset types for Wiz. Ex: &#39;AWS&#39;, &#39;AZURE&#39;, &#39;GCP&#39;.
   * @return assetType
   */
  @javax.annotation.Nullable
  public String getAssetType() {
    return assetType;
  }

  public void setAssetType(@javax.annotation.Nullable String assetType) {
    this.assetType = assetType;
  }


  public VulnerabilityFindingsSettingsConfig detectionMethod(@javax.annotation.Nullable List<String> detectionMethod) {
    this.detectionMethod = detectionMethod;
    return this;
  }

  public VulnerabilityFindingsSettingsConfig addDetectionMethodItem(String detectionMethodItem) {
    if (this.detectionMethod == null) {
      this.detectionMethod = new ArrayList<>();
    }
    this.detectionMethod.add(detectionMethodItem);
    return this;
  }

  /**
   * Detection method types for Wiz. Ex: &#39;AGENT&#39;, &#39;CLOUD&#39;, &#39;AGENT_CLOUD&#39;.
   * @return detectionMethod
   */
  @javax.annotation.Nullable
  public List<String> getDetectionMethod() {
    return detectionMethod;
  }

  public void setDetectionMethod(@javax.annotation.Nullable List<String> detectionMethod) {
    this.detectionMethod = detectionMethod;
  }


  public VulnerabilityFindingsSettingsConfig endpointUrl(@javax.annotation.Nullable String endpointUrl) {
    this.endpointUrl = endpointUrl;
    return this;
  }

  /**
   * Endpoint URL for the Wiz API. Ex: &#39;https://api.wiz.io/v1/vulnerability-findings&#39;.
   * @return endpointUrl
   */
  @javax.annotation.Nullable
  public String getEndpointUrl() {
    return endpointUrl;
  }

  public void setEndpointUrl(@javax.annotation.Nullable String endpointUrl) {
    this.endpointUrl = endpointUrl;
  }


  public VulnerabilityFindingsSettingsConfig status(@javax.annotation.Nullable List<String> status) {
    this.status = status;
    return this;
  }

  public VulnerabilityFindingsSettingsConfig addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<>();
    }
    this.status.add(statusItem);
    return this;
  }

  /**
   * Status types for Wiz. Ex: &#39;OPEN&#39;, &#39;RESOLVED&#39;.
   * @return status
   */
  @javax.annotation.Nullable
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable List<String> status) {
    this.status = status;
  }


  public VulnerabilityFindingsSettingsConfig vendorSeverity(@javax.annotation.Nullable List<String> vendorSeverity) {
    this.vendorSeverity = vendorSeverity;
    return this;
  }

  public VulnerabilityFindingsSettingsConfig addVendorSeverityItem(String vendorSeverityItem) {
    if (this.vendorSeverity == null) {
      this.vendorSeverity = new ArrayList<>();
    }
    this.vendorSeverity.add(vendorSeverityItem);
    return this;
  }

  /**
   * Vendor severity types for Wiz. Ex: &#39;CRITICAL&#39;, &#39;HIGH&#39;, &#39;MEDIUM&#39;, &#39;LOW&#39;, &#39;INFO&#39;.
   * @return vendorSeverity
   */
  @javax.annotation.Nullable
  public List<String> getVendorSeverity() {
    return vendorSeverity;
  }

  public void setVendorSeverity(@javax.annotation.Nullable List<String> vendorSeverity) {
    this.vendorSeverity = vendorSeverity;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityFindingsSettingsConfig vulnerabilityFindingsSettingsConfig = (VulnerabilityFindingsSettingsConfig) o;
    return Objects.equals(this.assetStatus, vulnerabilityFindingsSettingsConfig.assetStatus) &&
        Objects.equals(this.assetType, vulnerabilityFindingsSettingsConfig.assetType) &&
        Objects.equals(this.detectionMethod, vulnerabilityFindingsSettingsConfig.detectionMethod) &&
        Objects.equals(this.endpointUrl, vulnerabilityFindingsSettingsConfig.endpointUrl) &&
        Objects.equals(this.status, vulnerabilityFindingsSettingsConfig.status) &&
        Objects.equals(this.vendorSeverity, vulnerabilityFindingsSettingsConfig.vendorSeverity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetStatus, assetType, detectionMethod, endpointUrl, status, vendorSeverity);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityFindingsSettingsConfig {\n");
    sb.append("    assetStatus: ").append(toIndentedString(assetStatus)).append("\n");
    sb.append("    assetType: ").append(toIndentedString(assetType)).append("\n");
    sb.append("    detectionMethod: ").append(toIndentedString(detectionMethod)).append("\n");
    sb.append("    endpointUrl: ").append(toIndentedString(endpointUrl)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    vendorSeverity: ").append(toIndentedString(vendorSeverity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("asset_status");
    openapiFields.add("asset_type");
    openapiFields.add("detection_method");
    openapiFields.add("endpoint_url");
    openapiFields.add("status");
    openapiFields.add("vendor_severity");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VulnerabilityFindingsSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VulnerabilityFindingsSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VulnerabilityFindingsSettingsConfig is not found in the empty JSON string", VulnerabilityFindingsSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VulnerabilityFindingsSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VulnerabilityFindingsSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("asset_status") != null && !jsonObj.get("asset_status").isJsonNull() && !jsonObj.get("asset_status").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_status` to be an array in the JSON string but got `%s`", jsonObj.get("asset_status").toString()));
      }
      if ((jsonObj.get("asset_type") != null && !jsonObj.get("asset_type").isJsonNull()) && !jsonObj.get("asset_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `asset_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("asset_type").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("detection_method") != null && !jsonObj.get("detection_method").isJsonNull() && !jsonObj.get("detection_method").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `detection_method` to be an array in the JSON string but got `%s`", jsonObj.get("detection_method").toString()));
      }
      if ((jsonObj.get("endpoint_url") != null && !jsonObj.get("endpoint_url").isJsonNull()) && !jsonObj.get("endpoint_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endpoint_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endpoint_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull() && !jsonObj.get("status").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be an array in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("vendor_severity") != null && !jsonObj.get("vendor_severity").isJsonNull() && !jsonObj.get("vendor_severity").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_severity` to be an array in the JSON string but got `%s`", jsonObj.get("vendor_severity").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VulnerabilityFindingsSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VulnerabilityFindingsSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VulnerabilityFindingsSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VulnerabilityFindingsSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<VulnerabilityFindingsSettingsConfig>() {
           @Override
           public void write(JsonWriter out, VulnerabilityFindingsSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VulnerabilityFindingsSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VulnerabilityFindingsSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VulnerabilityFindingsSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to VulnerabilityFindingsSettingsConfig
   */
  public static VulnerabilityFindingsSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VulnerabilityFindingsSettingsConfig.class);
  }

  /**
   * Convert an instance of VulnerabilityFindingsSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

