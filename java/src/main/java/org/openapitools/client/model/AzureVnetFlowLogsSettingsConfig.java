/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Microsoft Azure Vnet Flow Logs settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-05T22:36:20.739733386Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class AzureVnetFlowLogsSettingsConfig {
  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  @javax.annotation.Nullable
  private String prefix;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region;

  public static final String SERIALIZED_NAME_RESOURCE_GROUP_NAME = "resource_group_name";
  @SerializedName(SERIALIZED_NAME_RESOURCE_GROUP_NAME)
  @javax.annotation.Nullable
  private String resourceGroupName;

  public static final String SERIALIZED_NAME_STORAGE_ACCOUNT_URL = "storage_account_url";
  @SerializedName(SERIALIZED_NAME_STORAGE_ACCOUNT_URL)
  @javax.annotation.Nullable
  private String storageAccountUrl;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_ID = "subscription_id";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ID)
  @javax.annotation.Nullable
  private String subscriptionId;

  public static final String SERIALIZED_NAME_TENANT_ID = "tenant_id";
  @SerializedName(SERIALIZED_NAME_TENANT_ID)
  @javax.annotation.Nullable
  private String tenantId;

  public static final String SERIALIZED_NAME_USE_SYNTHETIC_DATA = "use_synthetic_data";
  @SerializedName(SERIALIZED_NAME_USE_SYNTHETIC_DATA)
  @javax.annotation.Nullable
  private Boolean useSyntheticData;

  public static final String SERIALIZED_NAME_VIRTUAL_NETWORK_NAME = "virtual_network_name";
  @SerializedName(SERIALIZED_NAME_VIRTUAL_NETWORK_NAME)
  @javax.annotation.Nullable
  private String virtualNetworkName;

  public AzureVnetFlowLogsSettingsConfig() {
  }

  public AzureVnetFlowLogsSettingsConfig prefix(@javax.annotation.Nullable String prefix) {
    this.prefix = prefix;
    return this;
  }

  /**
   * Get prefix
   * @return prefix
   */
  @javax.annotation.Nullable
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(@javax.annotation.Nullable String prefix) {
    this.prefix = prefix;
  }


  public AzureVnetFlowLogsSettingsConfig region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * The Azure region where the virtual network is located
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public AzureVnetFlowLogsSettingsConfig resourceGroupName(@javax.annotation.Nullable String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
    return this;
  }

  /**
   * The name of the resource group containing the virtual network
   * @return resourceGroupName
   */
  @javax.annotation.Nullable
  public String getResourceGroupName() {
    return resourceGroupName;
  }

  public void setResourceGroupName(@javax.annotation.Nullable String resourceGroupName) {
    this.resourceGroupName = resourceGroupName;
  }


  public AzureVnetFlowLogsSettingsConfig storageAccountUrl(@javax.annotation.Nullable String storageAccountUrl) {
    this.storageAccountUrl = storageAccountUrl;
    return this;
  }

  /**
   * The Azure storage account URL where flow logs are stored
   * @return storageAccountUrl
   */
  @javax.annotation.Nullable
  public String getStorageAccountUrl() {
    return storageAccountUrl;
  }

  public void setStorageAccountUrl(@javax.annotation.Nullable String storageAccountUrl) {
    this.storageAccountUrl = storageAccountUrl;
  }


  public AzureVnetFlowLogsSettingsConfig subscriptionId(@javax.annotation.Nullable String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * The Azure subscription ID where the virtual network and storage account are located
   * @return subscriptionId
   */
  @javax.annotation.Nullable
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(@javax.annotation.Nullable String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }


  public AzureVnetFlowLogsSettingsConfig tenantId(@javax.annotation.Nullable String tenantId) {
    this.tenantId = tenantId;
    return this;
  }

  /**
   * The Azure Entra ID tenant (directory) ID.
   * @return tenantId
   */
  @javax.annotation.Nullable
  public String getTenantId() {
    return tenantId;
  }

  public void setTenantId(@javax.annotation.Nullable String tenantId) {
    this.tenantId = tenantId;
  }


  public AzureVnetFlowLogsSettingsConfig useSyntheticData(@javax.annotation.Nullable Boolean useSyntheticData) {
    this.useSyntheticData = useSyntheticData;
    return this;
  }

  /**
   * Generate synthetic demo data instead of connecting to the real data source.
   * @return useSyntheticData
   */
  @javax.annotation.Nullable
  public Boolean getUseSyntheticData() {
    return useSyntheticData;
  }

  public void setUseSyntheticData(@javax.annotation.Nullable Boolean useSyntheticData) {
    this.useSyntheticData = useSyntheticData;
  }


  public AzureVnetFlowLogsSettingsConfig virtualNetworkName(@javax.annotation.Nullable String virtualNetworkName) {
    this.virtualNetworkName = virtualNetworkName;
    return this;
  }

  /**
   * The name of the virtual network for which flow logs are being collected
   * @return virtualNetworkName
   */
  @javax.annotation.Nullable
  public String getVirtualNetworkName() {
    return virtualNetworkName;
  }

  public void setVirtualNetworkName(@javax.annotation.Nullable String virtualNetworkName) {
    this.virtualNetworkName = virtualNetworkName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AzureVnetFlowLogsSettingsConfig azureVnetFlowLogsSettingsConfig = (AzureVnetFlowLogsSettingsConfig) o;
    return Objects.equals(this.prefix, azureVnetFlowLogsSettingsConfig.prefix) &&
        Objects.equals(this.region, azureVnetFlowLogsSettingsConfig.region) &&
        Objects.equals(this.resourceGroupName, azureVnetFlowLogsSettingsConfig.resourceGroupName) &&
        Objects.equals(this.storageAccountUrl, azureVnetFlowLogsSettingsConfig.storageAccountUrl) &&
        Objects.equals(this.subscriptionId, azureVnetFlowLogsSettingsConfig.subscriptionId) &&
        Objects.equals(this.tenantId, azureVnetFlowLogsSettingsConfig.tenantId) &&
        Objects.equals(this.useSyntheticData, azureVnetFlowLogsSettingsConfig.useSyntheticData) &&
        Objects.equals(this.virtualNetworkName, azureVnetFlowLogsSettingsConfig.virtualNetworkName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(prefix, region, resourceGroupName, storageAccountUrl, subscriptionId, tenantId, useSyntheticData, virtualNetworkName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AzureVnetFlowLogsSettingsConfig {\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    resourceGroupName: ").append(toIndentedString(resourceGroupName)).append("\n");
    sb.append("    storageAccountUrl: ").append(toIndentedString(storageAccountUrl)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("    tenantId: ").append(toIndentedString(tenantId)).append("\n");
    sb.append("    useSyntheticData: ").append(toIndentedString(useSyntheticData)).append("\n");
    sb.append("    virtualNetworkName: ").append(toIndentedString(virtualNetworkName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("prefix", "region", "resource_group_name", "storage_account_url", "subscription_id", "tenant_id", "use_synthetic_data", "virtual_network_name"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AzureVnetFlowLogsSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AzureVnetFlowLogsSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AzureVnetFlowLogsSettingsConfig is not found in the empty JSON string", AzureVnetFlowLogsSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AzureVnetFlowLogsSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AzureVnetFlowLogsSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("resource_group_name") != null && !jsonObj.get("resource_group_name").isJsonNull()) && !jsonObj.get("resource_group_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `resource_group_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("resource_group_name").toString()));
      }
      if ((jsonObj.get("storage_account_url") != null && !jsonObj.get("storage_account_url").isJsonNull()) && !jsonObj.get("storage_account_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storage_account_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storage_account_url").toString()));
      }
      if ((jsonObj.get("subscription_id") != null && !jsonObj.get("subscription_id").isJsonNull()) && !jsonObj.get("subscription_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscription_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscription_id").toString()));
      }
      if ((jsonObj.get("tenant_id") != null && !jsonObj.get("tenant_id").isJsonNull()) && !jsonObj.get("tenant_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tenant_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tenant_id").toString()));
      }
      if ((jsonObj.get("virtual_network_name") != null && !jsonObj.get("virtual_network_name").isJsonNull()) && !jsonObj.get("virtual_network_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `virtual_network_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("virtual_network_name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AzureVnetFlowLogsSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AzureVnetFlowLogsSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AzureVnetFlowLogsSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AzureVnetFlowLogsSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AzureVnetFlowLogsSettingsConfig>() {
           @Override
           public void write(JsonWriter out, AzureVnetFlowLogsSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AzureVnetFlowLogsSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AzureVnetFlowLogsSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AzureVnetFlowLogsSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to AzureVnetFlowLogsSettingsConfig
   */
  public static AzureVnetFlowLogsSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AzureVnetFlowLogsSettingsConfig.class);
  }

  /**
   * Convert an instance of AzureVnetFlowLogsSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

