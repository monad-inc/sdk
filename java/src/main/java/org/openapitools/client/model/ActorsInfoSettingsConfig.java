/*
 * Monad Swagger API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CrowdStrike EDR actors info settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-04-17T13:45:57.827644230Z[Etc/UTC]", comments = "Generator version: 7.12.0")
public class ActorsInfoSettingsConfig {
  public static final String SERIALIZED_NAME_ACTOR_TYPE = "actor_type";
  @SerializedName(SERIALIZED_NAME_ACTOR_TYPE)
  @javax.annotation.Nullable
  private String actorType;

  public static final String SERIALIZED_NAME_CLOUD_TYPE = "cloud_type";
  @SerializedName(SERIALIZED_NAME_CLOUD_TYPE)
  @javax.annotation.Nullable
  private String cloudType;

  public static final String SERIALIZED_NAME_CRON = "cron";
  @SerializedName(SERIALIZED_NAME_CRON)
  @javax.annotation.Nullable
  private String cron;

  public static final String SERIALIZED_NAME_SORT = "sort";
  @SerializedName(SERIALIZED_NAME_SORT)
  @javax.annotation.Nullable
  private String sort;

  public static final String SERIALIZED_NAME_TARGET_INDUSTRIES = "target_industries";
  @SerializedName(SERIALIZED_NAME_TARGET_INDUSTRIES)
  @javax.annotation.Nullable
  private String targetIndustries;

  public ActorsInfoSettingsConfig() {
  }

  public ActorsInfoSettingsConfig actorType(@javax.annotation.Nullable String actorType) {
    this.actorType = actorType;
    return this;
  }

  /**
   * Type of actor. Ex: &#39;APT&#39;, &#39;eCrime&#39;, &#39;Hacktivist&#39;, &#39;Insider Threat&#39;, &#39;Nation-State&#39;, &#39;Unknown&#39;, &#39;Other&#39;, etc. Select &#39;None&#39; for no preference.
   * @return actorType
   */
  @javax.annotation.Nullable
  public String getActorType() {
    return actorType;
  }

  public void setActorType(@javax.annotation.Nullable String actorType) {
    this.actorType = actorType;
  }


  public ActorsInfoSettingsConfig cloudType(@javax.annotation.Nullable String cloudType) {
    this.cloudType = cloudType;
    return this;
  }

  /**
   * Your cloud type for CrowdStrike. Ex: &#39;autodiscover&#39;, &#39;us-1&#39;, &#39;us-2&#39;, &#39;eu-1&#39;, &#39;us-gov-1&#39;.
   * @return cloudType
   */
  @javax.annotation.Nullable
  public String getCloudType() {
    return cloudType;
  }

  public void setCloudType(@javax.annotation.Nullable String cloudType) {
    this.cloudType = cloudType;
  }


  public ActorsInfoSettingsConfig cron(@javax.annotation.Nullable String cron) {
    this.cron = cron;
    return this;
  }

  /**
   * Cron string for scheduling the ingest of your input
   * @return cron
   */
  @javax.annotation.Nullable
  public String getCron() {
    return cron;
  }

  public void setCron(@javax.annotation.Nullable String cron) {
    this.cron = cron;
  }


  public ActorsInfoSettingsConfig sort(@javax.annotation.Nullable String sort) {
    this.sort = sort;
    return this;
  }

  /**
   * Order fields in ascending or descending order. Ex: &#39;created_date|asc&#39;, &#39;created_date|desc&#39;.
   * @return sort
   */
  @javax.annotation.Nullable
  public String getSort() {
    return sort;
  }

  public void setSort(@javax.annotation.Nullable String sort) {
    this.sort = sort;
  }


  public ActorsInfoSettingsConfig targetIndustries(@javax.annotation.Nullable String targetIndustries) {
    this.targetIndustries = targetIndustries;
    return this;
  }

  /**
   * Industries targeted by the actor. Ex: &#39;Financial&#39;, &#39;Healthcare&#39;, &#39;Energy&#39;, &#39;Government&#39;, &#39;Manufacturing&#39;, &#39;Technology&#39;, etc. Select &#39;None&#39; for no preference.
   * @return targetIndustries
   */
  @javax.annotation.Nullable
  public String getTargetIndustries() {
    return targetIndustries;
  }

  public void setTargetIndustries(@javax.annotation.Nullable String targetIndustries) {
    this.targetIndustries = targetIndustries;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ActorsInfoSettingsConfig actorsInfoSettingsConfig = (ActorsInfoSettingsConfig) o;
    return Objects.equals(this.actorType, actorsInfoSettingsConfig.actorType) &&
        Objects.equals(this.cloudType, actorsInfoSettingsConfig.cloudType) &&
        Objects.equals(this.cron, actorsInfoSettingsConfig.cron) &&
        Objects.equals(this.sort, actorsInfoSettingsConfig.sort) &&
        Objects.equals(this.targetIndustries, actorsInfoSettingsConfig.targetIndustries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(actorType, cloudType, cron, sort, targetIndustries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ActorsInfoSettingsConfig {\n");
    sb.append("    actorType: ").append(toIndentedString(actorType)).append("\n");
    sb.append("    cloudType: ").append(toIndentedString(cloudType)).append("\n");
    sb.append("    cron: ").append(toIndentedString(cron)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    targetIndustries: ").append(toIndentedString(targetIndustries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("actor_type");
    openapiFields.add("cloud_type");
    openapiFields.add("cron");
    openapiFields.add("sort");
    openapiFields.add("target_industries");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ActorsInfoSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ActorsInfoSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ActorsInfoSettingsConfig is not found in the empty JSON string", ActorsInfoSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ActorsInfoSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ActorsInfoSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("actor_type") != null && !jsonObj.get("actor_type").isJsonNull()) && !jsonObj.get("actor_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `actor_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("actor_type").toString()));
      }
      if ((jsonObj.get("cloud_type") != null && !jsonObj.get("cloud_type").isJsonNull()) && !jsonObj.get("cloud_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cloud_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cloud_type").toString()));
      }
      if ((jsonObj.get("cron") != null && !jsonObj.get("cron").isJsonNull()) && !jsonObj.get("cron").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cron` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cron").toString()));
      }
      if ((jsonObj.get("sort") != null && !jsonObj.get("sort").isJsonNull()) && !jsonObj.get("sort").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sort` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sort").toString()));
      }
      if ((jsonObj.get("target_industries") != null && !jsonObj.get("target_industries").isJsonNull()) && !jsonObj.get("target_industries").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `target_industries` to be a primitive type in the JSON string but got `%s`", jsonObj.get("target_industries").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ActorsInfoSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ActorsInfoSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ActorsInfoSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ActorsInfoSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<ActorsInfoSettingsConfig>() {
           @Override
           public void write(JsonWriter out, ActorsInfoSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ActorsInfoSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ActorsInfoSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ActorsInfoSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to ActorsInfoSettingsConfig
   */
  public static ActorsInfoSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ActorsInfoSettingsConfig.class);
  }

  /**
   * Convert an instance of ActorsInfoSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

