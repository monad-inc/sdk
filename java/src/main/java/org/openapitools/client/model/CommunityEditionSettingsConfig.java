/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GreyNoise Community Edition settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-06-20T18:56:49.922231974Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class CommunityEditionSettingsConfig {
  public static final String SERIALIZED_NAME_DESTINATION_PATH = "destination_path";
  @SerializedName(SERIALIZED_NAME_DESTINATION_PATH)
  @javax.annotation.Nullable
  private String destinationPath;

  public static final String SERIALIZED_NAME_ERROR_ON_RATE_LIMIT = "error_on_rate_limit";
  @SerializedName(SERIALIZED_NAME_ERROR_ON_RATE_LIMIT)
  @javax.annotation.Nullable
  private Boolean errorOnRateLimit;

  public static final String SERIALIZED_NAME_IP_FIELD_PATH = "ip_field_path";
  @SerializedName(SERIALIZED_NAME_IP_FIELD_PATH)
  @javax.annotation.Nullable
  private String ipFieldPath;

  public static final String SERIALIZED_NAME_NO_MATCH_RESPONSE = "no_match_response";
  @SerializedName(SERIALIZED_NAME_NO_MATCH_RESPONSE)
  @javax.annotation.Nullable
  private String noMatchResponse;

  public static final String SERIALIZED_NAME_RATE_LIMIT_RESPONSE = "rate_limit_response";
  @SerializedName(SERIALIZED_NAME_RATE_LIMIT_RESPONSE)
  @javax.annotation.Nullable
  private String rateLimitResponse;

  public CommunityEditionSettingsConfig() {
  }

  public CommunityEditionSettingsConfig destinationPath(@javax.annotation.Nullable String destinationPath) {
    this.destinationPath = destinationPath;
    return this;
  }

  /**
   * DestinationPath is the path where the GreyNoise data will be stored
   * @return destinationPath
   */
  @javax.annotation.Nullable
  public String getDestinationPath() {
    return destinationPath;
  }

  public void setDestinationPath(@javax.annotation.Nullable String destinationPath) {
    this.destinationPath = destinationPath;
  }


  public CommunityEditionSettingsConfig errorOnRateLimit(@javax.annotation.Nullable Boolean errorOnRateLimit) {
    this.errorOnRateLimit = errorOnRateLimit;
    return this;
  }

  /**
   * ErrorOnRateLimit determines if rate limiting should cause an error (true) or return custom response (false)
   * @return errorOnRateLimit
   */
  @javax.annotation.Nullable
  public Boolean getErrorOnRateLimit() {
    return errorOnRateLimit;
  }

  public void setErrorOnRateLimit(@javax.annotation.Nullable Boolean errorOnRateLimit) {
    this.errorOnRateLimit = errorOnRateLimit;
  }


  public CommunityEditionSettingsConfig ipFieldPath(@javax.annotation.Nullable String ipFieldPath) {
    this.ipFieldPath = ipFieldPath;
    return this;
  }

  /**
   * IPFieldPath is the path to the IP address field in the record
   * @return ipFieldPath
   */
  @javax.annotation.Nullable
  public String getIpFieldPath() {
    return ipFieldPath;
  }

  public void setIpFieldPath(@javax.annotation.Nullable String ipFieldPath) {
    this.ipFieldPath = ipFieldPath;
  }


  public CommunityEditionSettingsConfig noMatchResponse(@javax.annotation.Nullable String noMatchResponse) {
    this.noMatchResponse = noMatchResponse;
    return this;
  }

  /**
   * NoMatchResponse is the value to add when no match is found
   * @return noMatchResponse
   */
  @javax.annotation.Nullable
  public String getNoMatchResponse() {
    return noMatchResponse;
  }

  public void setNoMatchResponse(@javax.annotation.Nullable String noMatchResponse) {
    this.noMatchResponse = noMatchResponse;
  }


  public CommunityEditionSettingsConfig rateLimitResponse(@javax.annotation.Nullable String rateLimitResponse) {
    this.rateLimitResponse = rateLimitResponse;
    return this;
  }

  /**
   * RateLimitResponse is the value to add when rate limited
   * @return rateLimitResponse
   */
  @javax.annotation.Nullable
  public String getRateLimitResponse() {
    return rateLimitResponse;
  }

  public void setRateLimitResponse(@javax.annotation.Nullable String rateLimitResponse) {
    this.rateLimitResponse = rateLimitResponse;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunityEditionSettingsConfig communityEditionSettingsConfig = (CommunityEditionSettingsConfig) o;
    return Objects.equals(this.destinationPath, communityEditionSettingsConfig.destinationPath) &&
        Objects.equals(this.errorOnRateLimit, communityEditionSettingsConfig.errorOnRateLimit) &&
        Objects.equals(this.ipFieldPath, communityEditionSettingsConfig.ipFieldPath) &&
        Objects.equals(this.noMatchResponse, communityEditionSettingsConfig.noMatchResponse) &&
        Objects.equals(this.rateLimitResponse, communityEditionSettingsConfig.rateLimitResponse);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationPath, errorOnRateLimit, ipFieldPath, noMatchResponse, rateLimitResponse);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunityEditionSettingsConfig {\n");
    sb.append("    destinationPath: ").append(toIndentedString(destinationPath)).append("\n");
    sb.append("    errorOnRateLimit: ").append(toIndentedString(errorOnRateLimit)).append("\n");
    sb.append("    ipFieldPath: ").append(toIndentedString(ipFieldPath)).append("\n");
    sb.append("    noMatchResponse: ").append(toIndentedString(noMatchResponse)).append("\n");
    sb.append("    rateLimitResponse: ").append(toIndentedString(rateLimitResponse)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("destination_path");
    openapiFields.add("error_on_rate_limit");
    openapiFields.add("ip_field_path");
    openapiFields.add("no_match_response");
    openapiFields.add("rate_limit_response");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommunityEditionSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommunityEditionSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunityEditionSettingsConfig is not found in the empty JSON string", CommunityEditionSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommunityEditionSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunityEditionSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("destination_path") != null && !jsonObj.get("destination_path").isJsonNull()) && !jsonObj.get("destination_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_path").toString()));
      }
      if ((jsonObj.get("ip_field_path") != null && !jsonObj.get("ip_field_path").isJsonNull()) && !jsonObj.get("ip_field_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ip_field_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ip_field_path").toString()));
      }
      if ((jsonObj.get("no_match_response") != null && !jsonObj.get("no_match_response").isJsonNull()) && !jsonObj.get("no_match_response").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `no_match_response` to be a primitive type in the JSON string but got `%s`", jsonObj.get("no_match_response").toString()));
      }
      if ((jsonObj.get("rate_limit_response") != null && !jsonObj.get("rate_limit_response").isJsonNull()) && !jsonObj.get("rate_limit_response").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rate_limit_response` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rate_limit_response").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunityEditionSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunityEditionSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunityEditionSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunityEditionSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunityEditionSettingsConfig>() {
           @Override
           public void write(JsonWriter out, CommunityEditionSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunityEditionSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommunityEditionSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommunityEditionSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to CommunityEditionSettingsConfig
   */
  public static CommunityEditionSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunityEditionSettingsConfig.class);
  }

  /**
   * Convert an instance of CommunityEditionSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

