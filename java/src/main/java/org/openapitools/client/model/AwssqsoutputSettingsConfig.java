/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SQS Output Settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-07T21:25:06.927751912Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class AwssqsoutputSettingsConfig {
  public static final String SERIALIZED_NAME_MESSAGE_GROUP_ID = "message_group_id";
  @SerializedName(SERIALIZED_NAME_MESSAGE_GROUP_ID)
  @javax.annotation.Nullable
  private String messageGroupId;

  public static final String SERIALIZED_NAME_QUEUE_TYPE = "queue_type";
  @SerializedName(SERIALIZED_NAME_QUEUE_TYPE)
  @javax.annotation.Nullable
  private String queueType;

  public static final String SERIALIZED_NAME_QUEUE_URL = "queue_url";
  @SerializedName(SERIALIZED_NAME_QUEUE_URL)
  @javax.annotation.Nullable
  private String queueUrl;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region;

  public static final String SERIALIZED_NAME_ROLE_ARN = "role_arn";
  @SerializedName(SERIALIZED_NAME_ROLE_ARN)
  @javax.annotation.Nullable
  private String roleArn;

  public AwssqsoutputSettingsConfig() {
  }

  public AwssqsoutputSettingsConfig messageGroupId(@javax.annotation.Nullable String messageGroupId) {
    this.messageGroupId = messageGroupId;
    return this;
  }

  /**
   * The message group ID for FIFO queues. This is required for FIFO queues.
   * @return messageGroupId
   */
  @javax.annotation.Nullable
  public String getMessageGroupId() {
    return messageGroupId;
  }

  public void setMessageGroupId(@javax.annotation.Nullable String messageGroupId) {
    this.messageGroupId = messageGroupId;
  }


  public AwssqsoutputSettingsConfig queueType(@javax.annotation.Nullable String queueType) {
    this.queueType = queueType;
    return this;
  }

  /**
   * The type of SQS queue to use. Can be either \&quot;standard\&quot; or \&quot;fifo\&quot;.
   * @return queueType
   */
  @javax.annotation.Nullable
  public String getQueueType() {
    return queueType;
  }

  public void setQueueType(@javax.annotation.Nullable String queueType) {
    this.queueType = queueType;
  }


  public AwssqsoutputSettingsConfig queueUrl(@javax.annotation.Nullable String queueUrl) {
    this.queueUrl = queueUrl;
    return this;
  }

  /**
   * The URL of the SQS queue to poll for messages.
   * @return queueUrl
   */
  @javax.annotation.Nullable
  public String getQueueUrl() {
    return queueUrl;
  }

  public void setQueueUrl(@javax.annotation.Nullable String queueUrl) {
    this.queueUrl = queueUrl;
  }


  public AwssqsoutputSettingsConfig region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * The AWS region where the SQS queue is located.
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public AwssqsoutputSettingsConfig roleArn(@javax.annotation.Nullable String roleArn) {
    this.roleArn = roleArn;
    return this;
  }

  /**
   * The ARN of the IAM role to assume for accessing the SQS queue.
   * @return roleArn
   */
  @javax.annotation.Nullable
  public String getRoleArn() {
    return roleArn;
  }

  public void setRoleArn(@javax.annotation.Nullable String roleArn) {
    this.roleArn = roleArn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AwssqsoutputSettingsConfig awssqsoutputSettingsConfig = (AwssqsoutputSettingsConfig) o;
    return Objects.equals(this.messageGroupId, awssqsoutputSettingsConfig.messageGroupId) &&
        Objects.equals(this.queueType, awssqsoutputSettingsConfig.queueType) &&
        Objects.equals(this.queueUrl, awssqsoutputSettingsConfig.queueUrl) &&
        Objects.equals(this.region, awssqsoutputSettingsConfig.region) &&
        Objects.equals(this.roleArn, awssqsoutputSettingsConfig.roleArn);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageGroupId, queueType, queueUrl, region, roleArn);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AwssqsoutputSettingsConfig {\n");
    sb.append("    messageGroupId: ").append(toIndentedString(messageGroupId)).append("\n");
    sb.append("    queueType: ").append(toIndentedString(queueType)).append("\n");
    sb.append("    queueUrl: ").append(toIndentedString(queueUrl)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    roleArn: ").append(toIndentedString(roleArn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("message_group_id", "queue_type", "queue_url", "region", "role_arn"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AwssqsoutputSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AwssqsoutputSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AwssqsoutputSettingsConfig is not found in the empty JSON string", AwssqsoutputSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AwssqsoutputSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AwssqsoutputSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("message_group_id") != null && !jsonObj.get("message_group_id").isJsonNull()) && !jsonObj.get("message_group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message_group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message_group_id").toString()));
      }
      if ((jsonObj.get("queue_type") != null && !jsonObj.get("queue_type").isJsonNull()) && !jsonObj.get("queue_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_type").toString()));
      }
      if ((jsonObj.get("queue_url") != null && !jsonObj.get("queue_url").isJsonNull()) && !jsonObj.get("queue_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `queue_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("queue_url").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("role_arn") != null && !jsonObj.get("role_arn").isJsonNull()) && !jsonObj.get("role_arn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `role_arn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("role_arn").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AwssqsoutputSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AwssqsoutputSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AwssqsoutputSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AwssqsoutputSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<AwssqsoutputSettingsConfig>() {
           @Override
           public void write(JsonWriter out, AwssqsoutputSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AwssqsoutputSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AwssqsoutputSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AwssqsoutputSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to AwssqsoutputSettingsConfig
   */
  public static AwssqsoutputSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AwssqsoutputSettingsConfig.class);
  }

  /**
   * Convert an instance of AwssqsoutputSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

