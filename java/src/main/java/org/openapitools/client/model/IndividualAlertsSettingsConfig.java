/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Clumio Alerts settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-08-07T02:03:05.682497263Z[Etc/UTC]", comments = "Generator version: 7.14.0")
public class IndividualAlertsSettingsConfig {
  public static final String SERIALIZED_NAME_ALERT_TYPE = "alert_type";
  @SerializedName(SERIALIZED_NAME_ALERT_TYPE)
  @javax.annotation.Nullable
  private String alertType;

  public static final String SERIALIZED_NAME_EMBED = "embed";
  @SerializedName(SERIALIZED_NAME_EMBED)
  @javax.annotation.Nullable
  private String embed;

  public static final String SERIALIZED_NAME_PRIMARY_ENTITY_TYPE = "primary_entity_type";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ENTITY_TYPE)
  @javax.annotation.Nullable
  private String primaryEntityType;

  public static final String SERIALIZED_NAME_PRIMARY_ENTITY_VALUE = "primary_entity_value";
  @SerializedName(SERIALIZED_NAME_PRIMARY_ENTITY_VALUE)
  @javax.annotation.Nullable
  private String primaryEntityValue;

  public static final String SERIALIZED_NAME_REGION = "region";
  @SerializedName(SERIALIZED_NAME_REGION)
  @javax.annotation.Nullable
  private String region;

  public static final String SERIALIZED_NAME_SEVERITY = "severity";
  @SerializedName(SERIALIZED_NAME_SEVERITY)
  @javax.annotation.Nullable
  private String severity;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nullable
  private String status;

  public static final String SERIALIZED_NAME_USE_SYNTHETIC_DATA = "use_synthetic_data";
  @SerializedName(SERIALIZED_NAME_USE_SYNTHETIC_DATA)
  @javax.annotation.Nullable
  private Boolean useSyntheticData;

  public IndividualAlertsSettingsConfig() {
  }

  public IndividualAlertsSettingsConfig alertType(@javax.annotation.Nullable String alertType) {
    this.alertType = alertType;
    return this;
  }

  /**
   * Filter by alert type (e.g., policy_violated, tag_conflict)
   * @return alertType
   */
  @javax.annotation.Nullable
  public String getAlertType() {
    return alertType;
  }

  public void setAlertType(@javax.annotation.Nullable String alertType) {
    this.alertType = alertType;
  }


  public IndividualAlertsSettingsConfig embed(@javax.annotation.Nullable String embed) {
    this.embed = embed;
    return this;
  }

  /**
   * Embed related resources in the data returned (e.g., read-consolidated-alert)
   * @return embed
   */
  @javax.annotation.Nullable
  public String getEmbed() {
    return embed;
  }

  public void setEmbed(@javax.annotation.Nullable String embed) {
    this.embed = embed;
  }


  public IndividualAlertsSettingsConfig primaryEntityType(@javax.annotation.Nullable String primaryEntityType) {
    this.primaryEntityType = primaryEntityType;
    return this;
  }

  /**
   * Filter by primary entity type (e.g., aws_ebs_volume, vmware_vm)
   * @return primaryEntityType
   */
  @javax.annotation.Nullable
  public String getPrimaryEntityType() {
    return primaryEntityType;
  }

  public void setPrimaryEntityType(@javax.annotation.Nullable String primaryEntityType) {
    this.primaryEntityType = primaryEntityType;
  }


  public IndividualAlertsSettingsConfig primaryEntityValue(@javax.annotation.Nullable String primaryEntityValue) {
    this.primaryEntityValue = primaryEntityValue;
    return this;
  }

  /**
   * Filter by primary entity value (contains search)
   * @return primaryEntityValue
   */
  @javax.annotation.Nullable
  public String getPrimaryEntityValue() {
    return primaryEntityValue;
  }

  public void setPrimaryEntityValue(@javax.annotation.Nullable String primaryEntityValue) {
    this.primaryEntityValue = primaryEntityValue;
  }


  public IndividualAlertsSettingsConfig region(@javax.annotation.Nullable String region) {
    this.region = region;
    return this;
  }

  /**
   * The region associated with your Clumio account
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(@javax.annotation.Nullable String region) {
    this.region = region;
  }


  public IndividualAlertsSettingsConfig severity(@javax.annotation.Nullable String severity) {
    this.severity = severity;
    return this;
  }

  /**
   * Filter by alert severity (error, warning)
   * @return severity
   */
  @javax.annotation.Nullable
  public String getSeverity() {
    return severity;
  }

  public void setSeverity(@javax.annotation.Nullable String severity) {
    this.severity = severity;
  }


  public IndividualAlertsSettingsConfig status(@javax.annotation.Nullable String status) {
    this.status = status;
    return this;
  }

  /**
   * Filter by alert status (active, cleared)
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nullable String status) {
    this.status = status;
  }


  public IndividualAlertsSettingsConfig useSyntheticData(@javax.annotation.Nullable Boolean useSyntheticData) {
    this.useSyntheticData = useSyntheticData;
    return this;
  }

  /**
   * Generate synthetic demo data instead of connecting to the real data source.
   * @return useSyntheticData
   */
  @javax.annotation.Nullable
  public Boolean getUseSyntheticData() {
    return useSyntheticData;
  }

  public void setUseSyntheticData(@javax.annotation.Nullable Boolean useSyntheticData) {
    this.useSyntheticData = useSyntheticData;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IndividualAlertsSettingsConfig individualAlertsSettingsConfig = (IndividualAlertsSettingsConfig) o;
    return Objects.equals(this.alertType, individualAlertsSettingsConfig.alertType) &&
        Objects.equals(this.embed, individualAlertsSettingsConfig.embed) &&
        Objects.equals(this.primaryEntityType, individualAlertsSettingsConfig.primaryEntityType) &&
        Objects.equals(this.primaryEntityValue, individualAlertsSettingsConfig.primaryEntityValue) &&
        Objects.equals(this.region, individualAlertsSettingsConfig.region) &&
        Objects.equals(this.severity, individualAlertsSettingsConfig.severity) &&
        Objects.equals(this.status, individualAlertsSettingsConfig.status) &&
        Objects.equals(this.useSyntheticData, individualAlertsSettingsConfig.useSyntheticData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertType, embed, primaryEntityType, primaryEntityValue, region, severity, status, useSyntheticData);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IndividualAlertsSettingsConfig {\n");
    sb.append("    alertType: ").append(toIndentedString(alertType)).append("\n");
    sb.append("    embed: ").append(toIndentedString(embed)).append("\n");
    sb.append("    primaryEntityType: ").append(toIndentedString(primaryEntityType)).append("\n");
    sb.append("    primaryEntityValue: ").append(toIndentedString(primaryEntityValue)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    useSyntheticData: ").append(toIndentedString(useSyntheticData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>(Arrays.asList("alert_type", "embed", "primary_entity_type", "primary_entity_value", "region", "severity", "status", "use_synthetic_data"));

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>(0);
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to IndividualAlertsSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!IndividualAlertsSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in IndividualAlertsSettingsConfig is not found in the empty JSON string", IndividualAlertsSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!IndividualAlertsSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `IndividualAlertsSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("alert_type") != null && !jsonObj.get("alert_type").isJsonNull()) && !jsonObj.get("alert_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alert_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alert_type").toString()));
      }
      if ((jsonObj.get("embed") != null && !jsonObj.get("embed").isJsonNull()) && !jsonObj.get("embed").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `embed` to be a primitive type in the JSON string but got `%s`", jsonObj.get("embed").toString()));
      }
      if ((jsonObj.get("primary_entity_type") != null && !jsonObj.get("primary_entity_type").isJsonNull()) && !jsonObj.get("primary_entity_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_entity_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_entity_type").toString()));
      }
      if ((jsonObj.get("primary_entity_value") != null && !jsonObj.get("primary_entity_value").isJsonNull()) && !jsonObj.get("primary_entity_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_entity_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_entity_value").toString()));
      }
      if ((jsonObj.get("region") != null && !jsonObj.get("region").isJsonNull()) && !jsonObj.get("region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("region").toString()));
      }
      if ((jsonObj.get("severity") != null && !jsonObj.get("severity").isJsonNull()) && !jsonObj.get("severity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `severity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("severity").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!IndividualAlertsSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'IndividualAlertsSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<IndividualAlertsSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(IndividualAlertsSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<IndividualAlertsSettingsConfig>() {
           @Override
           public void write(JsonWriter out, IndividualAlertsSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public IndividualAlertsSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of IndividualAlertsSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of IndividualAlertsSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to IndividualAlertsSettingsConfig
   */
  public static IndividualAlertsSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, IndividualAlertsSettingsConfig.class);
  }

  /**
   * Convert an instance of IndividualAlertsSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

