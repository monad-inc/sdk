/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * KVLookup enrichment settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-05-19T18:52:46.775666311Z[Etc/UTC]", comments = "Generator version: 7.13.0")
public class KvLookupSettingsConfig {
  public static final String SERIALIZED_NAME_DESTINATION_KEY = "destination_key";
  @SerializedName(SERIALIZED_NAME_DESTINATION_KEY)
  @javax.annotation.Nullable
  private String destinationKey;

  public static final String SERIALIZED_NAME_ERROR_ON_MISSING_KEY = "error_on_missing_key";
  @SerializedName(SERIALIZED_NAME_ERROR_ON_MISSING_KEY)
  @javax.annotation.Nullable
  private Boolean errorOnMissingKey;

  public static final String SERIALIZED_NAME_JOIN_KEY = "join_key";
  @SerializedName(SERIALIZED_NAME_JOIN_KEY)
  @javax.annotation.Nullable
  private String joinKey;

  public static final String SERIALIZED_NAME_KV_LOOKUP_OUTPUT_ID = "kv_lookup_output_id";
  @SerializedName(SERIALIZED_NAME_KV_LOOKUP_OUTPUT_ID)
  @javax.annotation.Nullable
  private String kvLookupOutputId;

  public KvLookupSettingsConfig() {
  }

  public KvLookupSettingsConfig destinationKey(@javax.annotation.Nullable String destinationKey) {
    this.destinationKey = destinationKey;
    return this;
  }

  /**
   * DestinationKey the path where the result will be stored in the record. Use &#39;.&#39; for the root object, &#39;field.subfield&#39; for nested properties, &#39;array[0]&#39; for array elements, or combined paths like &#39;users[0].name&#39;.
   * @return destinationKey
   */
  @javax.annotation.Nullable
  public String getDestinationKey() {
    return destinationKey;
  }

  public void setDestinationKey(@javax.annotation.Nullable String destinationKey) {
    this.destinationKey = destinationKey;
  }


  public KvLookupSettingsConfig errorOnMissingKey(@javax.annotation.Nullable Boolean errorOnMissingKey) {
    this.errorOnMissingKey = errorOnMissingKey;
    return this;
  }

  /**
   * ErrorOnMissingKey if true, will throw an error if the key is not found in the KV lookup output
   * @return errorOnMissingKey
   */
  @javax.annotation.Nullable
  public Boolean getErrorOnMissingKey() {
    return errorOnMissingKey;
  }

  public void setErrorOnMissingKey(@javax.annotation.Nullable Boolean errorOnMissingKey) {
    this.errorOnMissingKey = errorOnMissingKey;
  }


  public KvLookupSettingsConfig joinKey(@javax.annotation.Nullable String joinKey) {
    this.joinKey = joinKey;
    return this;
  }

  /**
   * JoinKey is the key in the record whose value will be used to join with the KV lookup output
   * @return joinKey
   */
  @javax.annotation.Nullable
  public String getJoinKey() {
    return joinKey;
  }

  public void setJoinKey(@javax.annotation.Nullable String joinKey) {
    this.joinKey = joinKey;
  }


  public KvLookupSettingsConfig kvLookupOutputId(@javax.annotation.Nullable String kvLookupOutputId) {
    this.kvLookupOutputId = kvLookupOutputId;
    return this;
  }

  /**
   * KVLookupOutputID is the ID of the KV lookup output to join with
   * @return kvLookupOutputId
   */
  @javax.annotation.Nullable
  public String getKvLookupOutputId() {
    return kvLookupOutputId;
  }

  public void setKvLookupOutputId(@javax.annotation.Nullable String kvLookupOutputId) {
    this.kvLookupOutputId = kvLookupOutputId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KvLookupSettingsConfig kvLookupSettingsConfig = (KvLookupSettingsConfig) o;
    return Objects.equals(this.destinationKey, kvLookupSettingsConfig.destinationKey) &&
        Objects.equals(this.errorOnMissingKey, kvLookupSettingsConfig.errorOnMissingKey) &&
        Objects.equals(this.joinKey, kvLookupSettingsConfig.joinKey) &&
        Objects.equals(this.kvLookupOutputId, kvLookupSettingsConfig.kvLookupOutputId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(destinationKey, errorOnMissingKey, joinKey, kvLookupOutputId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KvLookupSettingsConfig {\n");
    sb.append("    destinationKey: ").append(toIndentedString(destinationKey)).append("\n");
    sb.append("    errorOnMissingKey: ").append(toIndentedString(errorOnMissingKey)).append("\n");
    sb.append("    joinKey: ").append(toIndentedString(joinKey)).append("\n");
    sb.append("    kvLookupOutputId: ").append(toIndentedString(kvLookupOutputId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("destination_key");
    openapiFields.add("error_on_missing_key");
    openapiFields.add("join_key");
    openapiFields.add("kv_lookup_output_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to KvLookupSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!KvLookupSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KvLookupSettingsConfig is not found in the empty JSON string", KvLookupSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!KvLookupSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `KvLookupSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("destination_key") != null && !jsonObj.get("destination_key").isJsonNull()) && !jsonObj.get("destination_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("destination_key").toString()));
      }
      if ((jsonObj.get("join_key") != null && !jsonObj.get("join_key").isJsonNull()) && !jsonObj.get("join_key").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `join_key` to be a primitive type in the JSON string but got `%s`", jsonObj.get("join_key").toString()));
      }
      if ((jsonObj.get("kv_lookup_output_id") != null && !jsonObj.get("kv_lookup_output_id").isJsonNull()) && !jsonObj.get("kv_lookup_output_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kv_lookup_output_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kv_lookup_output_id").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KvLookupSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KvLookupSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KvLookupSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KvLookupSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<KvLookupSettingsConfig>() {
           @Override
           public void write(JsonWriter out, KvLookupSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public KvLookupSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of KvLookupSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of KvLookupSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to KvLookupSettingsConfig
   */
  public static KvLookupSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KvLookupSettingsConfig.class);
  }

  /**
   * Convert an instance of KvLookupSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

