/*
 * Monad Swagger API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Demo Custom settings
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-13T20:46:16.359400297Z[Etc/UTC]", comments = "Generator version: 7.11.0")
public class DemoCustomSettingsConfig {
  public static final String SERIALIZED_NAME_CUSTOM_TEMPLATE = "custom_template";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TEMPLATE)
  @javax.annotation.Nullable
  private String customTemplate;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  @javax.annotation.Nullable
  private Integer rate;

  public DemoCustomSettingsConfig() {
  }

  public DemoCustomSettingsConfig customTemplate(@javax.annotation.Nullable String customTemplate) {
    this.customTemplate = customTemplate;
    return this;
  }

  /**
   * A custom template using the functions we provide to generate demo data
   * @return customTemplate
   */
  @javax.annotation.Nullable
  public String getCustomTemplate() {
    return customTemplate;
  }

  public void setCustomTemplate(@javax.annotation.Nullable String customTemplate) {
    this.customTemplate = customTemplate;
  }


  public DemoCustomSettingsConfig rate(@javax.annotation.Nullable Integer rate) {
    this.rate = rate;
    return this;
  }

  /**
   * The rate at which to generate records (between 1 and 1000) per second
   * @return rate
   */
  @javax.annotation.Nullable
  public Integer getRate() {
    return rate;
  }

  public void setRate(@javax.annotation.Nullable Integer rate) {
    this.rate = rate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DemoCustomSettingsConfig demoCustomSettingsConfig = (DemoCustomSettingsConfig) o;
    return Objects.equals(this.customTemplate, demoCustomSettingsConfig.customTemplate) &&
        Objects.equals(this.rate, demoCustomSettingsConfig.rate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customTemplate, rate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DemoCustomSettingsConfig {\n");
    sb.append("    customTemplate: ").append(toIndentedString(customTemplate)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("custom_template");
    openapiFields.add("rate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to DemoCustomSettingsConfig
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!DemoCustomSettingsConfig.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in DemoCustomSettingsConfig is not found in the empty JSON string", DemoCustomSettingsConfig.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!DemoCustomSettingsConfig.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `DemoCustomSettingsConfig` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("custom_template") != null && !jsonObj.get("custom_template").isJsonNull()) && !jsonObj.get("custom_template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_template").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!DemoCustomSettingsConfig.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'DemoCustomSettingsConfig' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<DemoCustomSettingsConfig> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(DemoCustomSettingsConfig.class));

       return (TypeAdapter<T>) new TypeAdapter<DemoCustomSettingsConfig>() {
           @Override
           public void write(JsonWriter out, DemoCustomSettingsConfig value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public DemoCustomSettingsConfig read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of DemoCustomSettingsConfig given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of DemoCustomSettingsConfig
   * @throws IOException if the JSON string is invalid with respect to DemoCustomSettingsConfig
   */
  public static DemoCustomSettingsConfig fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, DemoCustomSettingsConfig.class);
  }

  /**
   * Convert an instance of DemoCustomSettingsConfig to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

