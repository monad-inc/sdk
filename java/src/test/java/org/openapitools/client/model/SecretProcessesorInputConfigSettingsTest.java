/*
 * Monad API
 * This is the monad API
 *
 * The version of the OpenAPI document: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ActorsInfoSettingsConfig;
import org.openapitools.client.model.AdminActivitySettingsConfig;
import org.openapitools.client.model.AdminLogsSettingsConfig;
import org.openapitools.client.model.AuditLogsSettingsConfig;
import org.openapitools.client.model.AuthLogsSettingsConfig;
import org.openapitools.client.model.AwsS3SettingsConfig;
import org.openapitools.client.model.AzureActivityLogsSettingsConfig;
import org.openapitools.client.model.BigqueryInputSettingsConfig;
import org.openapitools.client.model.BoxEventsSettingsConfig;
import org.openapitools.client.model.BoxUsersSettingsConfig;
import org.openapitools.client.model.CloudAssetInventorySettingsConfig;
import org.openapitools.client.model.CloudConfigurationFindingsSettingsConfig;
import org.openapitools.client.model.CloudLogsSettingsConfig;
import org.openapitools.client.model.CloudResourceInventorySettingsConfig;
import org.openapitools.client.model.CloudtrailSettingsConfig;
import org.openapitools.client.model.CrowdstrikeFdrSettingsConfig;
import org.openapitools.client.model.DefenderForEndpointAlertsSettingsConfig;
import org.openapitools.client.model.DemoCustomSettingsConfig;
import org.openapitools.client.model.DemoSettingsConfig;
import org.openapitools.client.model.DetectSummariesSettingsConfig;
import org.openapitools.client.model.DeviceActivitySettingsConfig;
import org.openapitools.client.model.DeviceDetailsSettingsConfig;
import org.openapitools.client.model.DevicesSettingsConfig;
import org.openapitools.client.model.DriveActivitySettingsConfig;
import org.openapitools.client.model.EntraIdSettingsConfig;
import org.openapitools.client.model.EventSettingsConfig;
import org.openapitools.client.model.EventsLogsSettingsConfig;
import org.openapitools.client.model.FullScansSettingsConfig;
import org.openapitools.client.model.IssuesSettingsConfig;
import org.openapitools.client.model.LogAnalyticsQuerySettingsConfig;
import org.openapitools.client.model.LoginActivitySettingsConfig;
import org.openapitools.client.model.LoginSessionsSettingsConfig;
import org.openapitools.client.model.MonadLogSettingsConfig;
import org.openapitools.client.model.OauthActivitySettingsConfig;
import org.openapitools.client.model.RolesInfoSettingsConfig;
import org.openapitools.client.model.SemgrepDeploymentsSettingsConfig;
import org.openapitools.client.model.SemgrepProjectDetailsSettingsConfig;
import org.openapitools.client.model.SemgrepProjectsSettingsConfig;
import org.openapitools.client.model.SlackUsersSettingsConfig;
import org.openapitools.client.model.SlackgroupsSettingsConfig;
import org.openapitools.client.model.SnowflakeInputSettingsConfig;
import org.openapitools.client.model.SnykOrganizationsSettingsConfig;
import org.openapitools.client.model.SnykProjectsSettingsConfig;
import org.openapitools.client.model.TailscaleUsersSettingsConfig;
import org.openapitools.client.model.TenableAssetsSettingsConfig;
import org.openapitools.client.model.TenableVulnerabilitiesSettingsConfig;
import org.openapitools.client.model.UsersInfoSettingsConfig;
import org.openapitools.client.model.UsersSettingsConfig;
import org.openapitools.client.model.VulnerabilitiesSettingsConfig;
import org.openapitools.client.model.VulnerabilityFindingsSettingsConfig;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for SecretProcessesorInputConfigSettings
 */
public class SecretProcessesorInputConfigSettingsTest {
    private final SecretProcessesorInputConfigSettings model = new SecretProcessesorInputConfigSettings();

    /**
     * Model tests for SecretProcessesorInputConfigSettings
     */
    @Test
    public void testSecretProcessesorInputConfigSettings() {
        // TODO: test SecretProcessesorInputConfigSettings
    }

    /**
     * Test the property 'actorType'
     */
    @Test
    public void actorTypeTest() {
        // TODO: test actorType
    }

    /**
     * Test the property 'cloudType'
     */
    @Test
    public void cloudTypeTest() {
        // TODO: test cloudType
    }

    /**
     * Test the property 'cron'
     */
    @Test
    public void cronTest() {
        // TODO: test cron
    }

    /**
     * Test the property 'sort'
     */
    @Test
    public void sortTest() {
        // TODO: test sort
    }

    /**
     * Test the property 'targetIndustries'
     */
    @Test
    public void targetIndustriesTest() {
        // TODO: test targetIndustries
    }

    /**
     * Test the property 'authType'
     */
    @Test
    public void authTypeTest() {
        // TODO: test authType
    }

    /**
     * Test the property 'email'
     */
    @Test
    public void emailTest() {
        // TODO: test email
    }

    /**
     * Test the property 'host'
     */
    @Test
    public void hostTest() {
        // TODO: test host
    }

    /**
     * Test the property 'actions'
     */
    @Test
    public void actionsTest() {
        // TODO: test actions
    }

    /**
     * Test the property 'actor'
     */
    @Test
    public void actorTest() {
        // TODO: test actor
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'createdAfter'
     */
    @Test
    public void createdAfterTest() {
        // TODO: test createdAfter
    }

    /**
     * Test the property 'enterprise'
     */
    @Test
    public void enterpriseTest() {
        // TODO: test enterprise
    }

    /**
     * Test the property 'include'
     */
    @Test
    public void includeTest() {
        // TODO: test include
    }

    /**
     * Test the property 'organization'
     */
    @Test
    public void organizationTest() {
        // TODO: test organization
    }

    /**
     * Test the property 'repository'
     */
    @Test
    public void repositoryTest() {
        // TODO: test repository
    }

    /**
     * Test the property 'user'
     */
    @Test
    public void userTest() {
        // TODO: test user
    }

    /**
     * Test the property 'bucket'
     */
    @Test
    public void bucketTest() {
        // TODO: test bucket
    }

    /**
     * Test the property 'compression'
     */
    @Test
    public void compressionTest() {
        // TODO: test compression
    }

    /**
     * Test the property 'format'
     */
    @Test
    public void formatTest() {
        // TODO: test format
    }

    /**
     * Test the property 'partitionFormat'
     */
    @Test
    public void partitionFormatTest() {
        // TODO: test partitionFormat
    }

    /**
     * Test the property 'prefix'
     */
    @Test
    public void prefixTest() {
        // TODO: test prefix
    }

    /**
     * Test the property 'recordLocation'
     */
    @Test
    public void recordLocationTest() {
        // TODO: test recordLocation
    }

    /**
     * Test the property 'region'
     */
    @Test
    public void regionTest() {
        // TODO: test region
    }

    /**
     * Test the property 'roleArn'
     */
    @Test
    public void roleArnTest() {
        // TODO: test roleArn
    }

    /**
     * Test the property 'correlationId'
     */
    @Test
    public void correlationIdTest() {
        // TODO: test correlationId
    }

    /**
     * Test the property 'resourceGroupName'
     */
    @Test
    public void resourceGroupNameTest() {
        // TODO: test resourceGroupName
    }

    /**
     * Test the property 'resourceProvider'
     */
    @Test
    public void resourceProviderTest() {
        // TODO: test resourceProvider
    }

    /**
     * Test the property 'resourceUri'
     */
    @Test
    public void resourceUriTest() {
        // TODO: test resourceUri
    }

    /**
     * Test the property 'subscriptionId'
     */
    @Test
    public void subscriptionIdTest() {
        // TODO: test subscriptionId
    }

    /**
     * Test the property 'tenantId'
     */
    @Test
    public void tenantIdTest() {
        // TODO: test tenantId
    }

    /**
     * Test the property 'dataset'
     */
    @Test
    public void datasetTest() {
        // TODO: test dataset
    }

    /**
     * Test the property 'project'
     */
    @Test
    public void projectTest() {
        // TODO: test project
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'table'
     */
    @Test
    public void tableTest() {
        // TODO: test table
    }

    /**
     * Test the property 'timestampColumn'
     */
    @Test
    public void timestampColumnTest() {
        // TODO: test timestampColumn
    }

    /**
     * Test the property 'eventType'
     */
    @Test
    public void eventTypeTest() {
        // TODO: test eventType
    }

    /**
     * Test the property 'filterTerm'
     */
    @Test
    public void filterTermTest() {
        // TODO: test filterTerm
    }

    /**
     * Test the property 'assetTypes'
     */
    @Test
    public void assetTypesTest() {
        // TODO: test assetTypes
    }

    /**
     * Test the property 'resourceNames'
     */
    @Test
    public void resourceNamesTest() {
        // TODO: test resourceNames
    }

    /**
     * Test the property 'endpointUrl'
     */
    @Test
    public void endpointUrlTest() {
        // TODO: test endpointUrl
    }

    /**
     * Test the property 'result'
     */
    @Test
    public void resultTest() {
        // TODO: test result
    }

    /**
     * Test the property 'severity'
     */
    @Test
    public void severityTest() {
        // TODO: test severity
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'enableProtoPayloadParsing'
     */
    @Test
    public void enableProtoPayloadParsingTest() {
        // TODO: test enableProtoPayloadParsing
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'cloudPlatform'
     */
    @Test
    public void cloudPlatformTest() {
        // TODO: test cloudPlatform
    }

    /**
     * Test the property 'entityType'
     */
    @Test
    public void entityTypeTest() {
        // TODO: test entityType
    }

    /**
     * Test the property 'fullSnapshot'
     */
    @Test
    public void fullSnapshotTest() {
        // TODO: test fullSnapshot
    }

    /**
     * Test the property 'interval'
     */
    @Test
    public void intervalTest() {
        // TODO: test interval
    }

    /**
     * Test the property 'awsQueueUrl'
     */
    @Test
    public void awsQueueUrlTest() {
        // TODO: test awsQueueUrl
    }

    /**
     * Test the property 'awsRegionName'
     */
    @Test
    public void awsRegionNameTest() {
        // TODO: test awsRegionName
    }

    /**
     * Test the property 'awsS3Url'
     */
    @Test
    public void awsS3UrlTest() {
        // TODO: test awsS3Url
    }

    /**
     * Test the property 'visibilityTimeout'
     */
    @Test
    public void visibilityTimeoutTest() {
        // TODO: test visibilityTimeout
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'rate'
     */
    @Test
    public void rateTest() {
        // TODO: test rate
    }

    /**
     * Test the property 'recordType'
     */
    @Test
    public void recordTypeTest() {
        // TODO: test recordType
    }

    /**
     * Test the property 'customTemplate'
     */
    @Test
    public void customTemplateTest() {
        // TODO: test customTemplate
    }

    /**
     * Test the property 'fieldOption'
     */
    @Test
    public void fieldOptionTest() {
        // TODO: test fieldOption
    }

    /**
     * Test the property 'organizationId'
     */
    @Test
    public void organizationIdTest() {
        // TODO: test organizationId
    }

    /**
     * Test the property 'workspaceId'
     */
    @Test
    public void workspaceIdTest() {
        // TODO: test workspaceId
    }

    /**
     * Test the property 'appName'
     */
    @Test
    public void appNameTest() {
        // TODO: test appName
    }

    /**
     * Test the property 'cloud'
     */
    @Test
    public void cloudTest() {
        // TODO: test cloud
    }

    /**
     * Test the property 'memberCid'
     */
    @Test
    public void memberCidTest() {
        // TODO: test memberCid
    }

    /**
     * Test the property 'storyId'
     */
    @Test
    public void storyIdTest() {
        // TODO: test storyId
    }

    /**
     * Test the property 'teamId'
     */
    @Test
    public void teamIdTest() {
        // TODO: test teamId
    }

    /**
     * Test the property 'tenantUrl'
     */
    @Test
    public void tenantUrlTest() {
        // TODO: test tenantUrl
    }

    /**
     * Test the property 'orgSlug'
     */
    @Test
    public void orgSlugTest() {
        // TODO: test orgSlug
    }

    /**
     * Test the property 'repo'
     */
    @Test
    public void repoTest() {
        // TODO: test repo
    }

    /**
     * Test the property 'controlIds'
     */
    @Test
    public void controlIdsTest() {
        // TODO: test controlIds
    }

    /**
     * Test the property 'hasNote'
     */
    @Test
    public void hasNoteTest() {
        // TODO: test hasNote
    }

    /**
     * Test the property 'hasRemediation'
     */
    @Test
    public void hasRemediationTest() {
        // TODO: test hasRemediation
    }

    /**
     * Test the property 'hasServiceTicket'
     */
    @Test
    public void hasServiceTicketTest() {
        // TODO: test hasServiceTicket
    }

    /**
     * Test the property 'issueIds'
     */
    @Test
    public void issueIdsTest() {
        // TODO: test issueIds
    }

    /**
     * Test the property 'issueTypes'
     */
    @Test
    public void issueTypesTest() {
        // TODO: test issueTypes
    }

    /**
     * Test the property 'projectIds'
     */
    @Test
    public void projectIdsTest() {
        // TODO: test projectIds
    }

    /**
     * Test the property 'relatedEntityId'
     */
    @Test
    public void relatedEntityIdTest() {
        // TODO: test relatedEntityId
    }

    /**
     * Test the property 'resolutionReasons'
     */
    @Test
    public void resolutionReasonsTest() {
        // TODO: test resolutionReasons
    }

    /**
     * Test the property 'riskEqualsAll'
     */
    @Test
    public void riskEqualsAllTest() {
        // TODO: test riskEqualsAll
    }

    /**
     * Test the property 'riskEqualsAny'
     */
    @Test
    public void riskEqualsAnyTest() {
        // TODO: test riskEqualsAny
    }

    /**
     * Test the property 'searchQuery'
     */
    @Test
    public void searchQueryTest() {
        // TODO: test searchQuery
    }

    /**
     * Test the property 'securityScan'
     */
    @Test
    public void securityScanTest() {
        // TODO: test securityScan
    }

    /**
     * Test the property 'severities'
     */
    @Test
    public void severitiesTest() {
        // TODO: test severities
    }

    /**
     * Test the property 'stackLayers'
     */
    @Test
    public void stackLayersTest() {
        // TODO: test stackLayers
    }

    /**
     * Test the property 'tenantDataCenter'
     */
    @Test
    public void tenantDataCenterTest() {
        // TODO: test tenantDataCenter
    }

    /**
     * Test the property 'logType'
     */
    @Test
    public void logTypeTest() {
        // TODO: test logType
    }

    /**
     * Test the property 'account'
     */
    @Test
    public void accountTest() {
        // TODO: test account
    }

    /**
     * Test the property 'database'
     */
    @Test
    public void databaseTest() {
        // TODO: test database
    }

    /**
     * Test the property 'role'
     */
    @Test
    public void roleTest() {
        // TODO: test role
    }

    /**
     * Test the property 'schema'
     */
    @Test
    public void schemaTest() {
        // TODO: test schema
    }

    /**
     * Test the property 'warehouse'
     */
    @Test
    public void warehouseTest() {
        // TODO: test warehouse
    }

    /**
     * Test the property 'userRoleOption'
     */
    @Test
    public void userRoleOptionTest() {
        // TODO: test userRoleOption
    }

    /**
     * Test the property 'userTypeOption'
     */
    @Test
    public void userTypeOptionTest() {
        // TODO: test userTypeOption
    }

    /**
     * Test the property 'fullSync'
     */
    @Test
    public void fullSyncTest() {
        // TODO: test fullSync
    }

    /**
     * Test the property 'assetStatus'
     */
    @Test
    public void assetStatusTest() {
        // TODO: test assetStatus
    }

    /**
     * Test the property 'assetType'
     */
    @Test
    public void assetTypeTest() {
        // TODO: test assetType
    }

    /**
     * Test the property 'detectionMethod'
     */
    @Test
    public void detectionMethodTest() {
        // TODO: test detectionMethod
    }

    /**
     * Test the property 'vendorSeverity'
     */
    @Test
    public void vendorSeverityTest() {
        // TODO: test vendorSeverity
    }

}
