/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsRole type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsRole{}

// ModelsRole struct for ModelsRole
type ModelsRole struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	PipelineCreate *bool `json:"pipeline_create,omitempty"`
	PipelineDelete *bool `json:"pipeline_delete,omitempty"`
	PipelineRead *bool `json:"pipeline_read,omitempty"`
	PipelineUpdate *bool `json:"pipeline_update,omitempty"`
	Protected *bool `json:"protected,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewModelsRole instantiates a new ModelsRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsRole() *ModelsRole {
	this := ModelsRole{}
	return &this
}

// NewModelsRoleWithDefaults instantiates a new ModelsRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsRoleWithDefaults() *ModelsRole {
	this := ModelsRole{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsRole) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsRole) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsRole) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsRole) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsRole) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsRole) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsRole) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsRole) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsRole) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsRole) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsRole) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsRole) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsRole) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsRole) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsRole) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPipelineCreate returns the PipelineCreate field value if set, zero value otherwise.
func (o *ModelsRole) GetPipelineCreate() bool {
	if o == nil || IsNil(o.PipelineCreate) {
		var ret bool
		return ret
	}
	return *o.PipelineCreate
}

// GetPipelineCreateOk returns a tuple with the PipelineCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetPipelineCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineCreate) {
		return nil, false
	}
	return o.PipelineCreate, true
}

// HasPipelineCreate returns a boolean if a field has been set.
func (o *ModelsRole) HasPipelineCreate() bool {
	if o != nil && !IsNil(o.PipelineCreate) {
		return true
	}

	return false
}

// SetPipelineCreate gets a reference to the given bool and assigns it to the PipelineCreate field.
func (o *ModelsRole) SetPipelineCreate(v bool) {
	o.PipelineCreate = &v
}

// GetPipelineDelete returns the PipelineDelete field value if set, zero value otherwise.
func (o *ModelsRole) GetPipelineDelete() bool {
	if o == nil || IsNil(o.PipelineDelete) {
		var ret bool
		return ret
	}
	return *o.PipelineDelete
}

// GetPipelineDeleteOk returns a tuple with the PipelineDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetPipelineDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineDelete) {
		return nil, false
	}
	return o.PipelineDelete, true
}

// HasPipelineDelete returns a boolean if a field has been set.
func (o *ModelsRole) HasPipelineDelete() bool {
	if o != nil && !IsNil(o.PipelineDelete) {
		return true
	}

	return false
}

// SetPipelineDelete gets a reference to the given bool and assigns it to the PipelineDelete field.
func (o *ModelsRole) SetPipelineDelete(v bool) {
	o.PipelineDelete = &v
}

// GetPipelineRead returns the PipelineRead field value if set, zero value otherwise.
func (o *ModelsRole) GetPipelineRead() bool {
	if o == nil || IsNil(o.PipelineRead) {
		var ret bool
		return ret
	}
	return *o.PipelineRead
}

// GetPipelineReadOk returns a tuple with the PipelineRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetPipelineReadOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineRead) {
		return nil, false
	}
	return o.PipelineRead, true
}

// HasPipelineRead returns a boolean if a field has been set.
func (o *ModelsRole) HasPipelineRead() bool {
	if o != nil && !IsNil(o.PipelineRead) {
		return true
	}

	return false
}

// SetPipelineRead gets a reference to the given bool and assigns it to the PipelineRead field.
func (o *ModelsRole) SetPipelineRead(v bool) {
	o.PipelineRead = &v
}

// GetPipelineUpdate returns the PipelineUpdate field value if set, zero value otherwise.
func (o *ModelsRole) GetPipelineUpdate() bool {
	if o == nil || IsNil(o.PipelineUpdate) {
		var ret bool
		return ret
	}
	return *o.PipelineUpdate
}

// GetPipelineUpdateOk returns a tuple with the PipelineUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetPipelineUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineUpdate) {
		return nil, false
	}
	return o.PipelineUpdate, true
}

// HasPipelineUpdate returns a boolean if a field has been set.
func (o *ModelsRole) HasPipelineUpdate() bool {
	if o != nil && !IsNil(o.PipelineUpdate) {
		return true
	}

	return false
}

// SetPipelineUpdate gets a reference to the given bool and assigns it to the PipelineUpdate field.
func (o *ModelsRole) SetPipelineUpdate(v bool) {
	o.PipelineUpdate = &v
}

// GetProtected returns the Protected field value if set, zero value otherwise.
func (o *ModelsRole) GetProtected() bool {
	if o == nil || IsNil(o.Protected) {
		var ret bool
		return ret
	}
	return *o.Protected
}

// GetProtectedOk returns a tuple with the Protected field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetProtectedOk() (*bool, bool) {
	if o == nil || IsNil(o.Protected) {
		return nil, false
	}
	return o.Protected, true
}

// HasProtected returns a boolean if a field has been set.
func (o *ModelsRole) HasProtected() bool {
	if o != nil && !IsNil(o.Protected) {
		return true
	}

	return false
}

// SetProtected gets a reference to the given bool and assigns it to the Protected field.
func (o *ModelsRole) SetProtected(v bool) {
	o.Protected = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsRole) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsRole) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsRole) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsRole) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsRole) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsRole) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.PipelineCreate) {
		toSerialize["pipeline_create"] = o.PipelineCreate
	}
	if !IsNil(o.PipelineDelete) {
		toSerialize["pipeline_delete"] = o.PipelineDelete
	}
	if !IsNil(o.PipelineRead) {
		toSerialize["pipeline_read"] = o.PipelineRead
	}
	if !IsNil(o.PipelineUpdate) {
		toSerialize["pipeline_update"] = o.PipelineUpdate
	}
	if !IsNil(o.Protected) {
		toSerialize["protected"] = o.Protected
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableModelsRole struct {
	value *ModelsRole
	isSet bool
}

func (v NullableModelsRole) Get() *ModelsRole {
	return v.value
}

func (v *NullableModelsRole) Set(val *ModelsRole) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsRole) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsRole(val *ModelsRole) *NullableModelsRole {
	return &NullableModelsRole{value: val, isSet: true}
}

func (v NullableModelsRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


