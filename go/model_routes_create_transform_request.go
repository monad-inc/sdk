/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutesCreateTransformRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesCreateTransformRequest{}

// RoutesCreateTransformRequest struct for RoutesCreateTransformRequest
type RoutesCreateTransformRequest struct {
	Config *RoutesTransformConfig `json:"config,omitempty"`
	Description *string `json:"description,omitempty"`
	Name string `json:"name"`
}

type _RoutesCreateTransformRequest RoutesCreateTransformRequest

// NewRoutesCreateTransformRequest instantiates a new RoutesCreateTransformRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesCreateTransformRequest(name string) *RoutesCreateTransformRequest {
	this := RoutesCreateTransformRequest{}
	this.Name = name
	return &this
}

// NewRoutesCreateTransformRequestWithDefaults instantiates a new RoutesCreateTransformRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesCreateTransformRequestWithDefaults() *RoutesCreateTransformRequest {
	this := RoutesCreateTransformRequest{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *RoutesCreateTransformRequest) GetConfig() RoutesTransformConfig {
	if o == nil || IsNil(o.Config) {
		var ret RoutesTransformConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCreateTransformRequest) GetConfigOk() (*RoutesTransformConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *RoutesCreateTransformRequest) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given RoutesTransformConfig and assigns it to the Config field.
func (o *RoutesCreateTransformRequest) SetConfig(v RoutesTransformConfig) {
	o.Config = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoutesCreateTransformRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCreateTransformRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoutesCreateTransformRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoutesCreateTransformRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *RoutesCreateTransformRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoutesCreateTransformRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoutesCreateTransformRequest) SetName(v string) {
	o.Name = v
}

func (o RoutesCreateTransformRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesCreateTransformRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *RoutesCreateTransformRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutesCreateTransformRequest := _RoutesCreateTransformRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutesCreateTransformRequest)

	if err != nil {
		return err
	}

	*o = RoutesCreateTransformRequest(varRoutesCreateTransformRequest)

	return err
}

type NullableRoutesCreateTransformRequest struct {
	value *RoutesCreateTransformRequest
	isSet bool
}

func (v NullableRoutesCreateTransformRequest) Get() *RoutesCreateTransformRequest {
	return v.value
}

func (v *NullableRoutesCreateTransformRequest) Set(val *RoutesCreateTransformRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesCreateTransformRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesCreateTransformRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesCreateTransformRequest(val *RoutesCreateTransformRequest) *NullableRoutesCreateTransformRequest {
	return &NullableRoutesCreateTransformRequest{value: val, isSet: true}
}

func (v NullableRoutesCreateTransformRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesCreateTransformRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


