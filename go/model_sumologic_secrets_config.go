/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the SumologicSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SumologicSecretsConfig{}

// SumologicSecretsConfig Sumo Logic Output Secrets
type SumologicSecretsConfig struct {
	// The Access ID for authenticating with Sumo Logic.
	AccessId *string `json:"access_id,omitempty"`
	// The Access Key for authenticating with Sumo Logic.
	AccessKey *string `json:"access_key,omitempty"`
}

// NewSumologicSecretsConfig instantiates a new SumologicSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSumologicSecretsConfig() *SumologicSecretsConfig {
	this := SumologicSecretsConfig{}
	return &this
}

// NewSumologicSecretsConfigWithDefaults instantiates a new SumologicSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSumologicSecretsConfigWithDefaults() *SumologicSecretsConfig {
	this := SumologicSecretsConfig{}
	return &this
}

// GetAccessId returns the AccessId field value if set, zero value otherwise.
func (o *SumologicSecretsConfig) GetAccessId() string {
	if o == nil || IsNil(o.AccessId) {
		var ret string
		return ret
	}
	return *o.AccessId
}

// GetAccessIdOk returns a tuple with the AccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumologicSecretsConfig) GetAccessIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccessId) {
		return nil, false
	}
	return o.AccessId, true
}

// HasAccessId returns a boolean if a field has been set.
func (o *SumologicSecretsConfig) HasAccessId() bool {
	if o != nil && !IsNil(o.AccessId) {
		return true
	}

	return false
}

// SetAccessId gets a reference to the given string and assigns it to the AccessId field.
func (o *SumologicSecretsConfig) SetAccessId(v string) {
	o.AccessId = &v
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *SumologicSecretsConfig) GetAccessKey() string {
	if o == nil || IsNil(o.AccessKey) {
		var ret string
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SumologicSecretsConfig) GetAccessKeyOk() (*string, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *SumologicSecretsConfig) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given string and assigns it to the AccessKey field.
func (o *SumologicSecretsConfig) SetAccessKey(v string) {
	o.AccessKey = &v
}

func (o SumologicSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SumologicSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessId) {
		toSerialize["access_id"] = o.AccessId
	}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	return toSerialize, nil
}

type NullableSumologicSecretsConfig struct {
	value *SumologicSecretsConfig
	isSet bool
}

func (v NullableSumologicSecretsConfig) Get() *SumologicSecretsConfig {
	return v.value
}

func (v *NullableSumologicSecretsConfig) Set(val *SumologicSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSumologicSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSumologicSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSumologicSecretsConfig(val *SumologicSecretsConfig) *NullableSumologicSecretsConfig {
	return &NullableSumologicSecretsConfig{value: val, isSet: true}
}

func (v NullableSumologicSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSumologicSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


