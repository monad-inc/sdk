/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the AuditLogsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditLogsSettingsConfig{}

// AuditLogsSettingsConfig GitHub audit logs settings
type AuditLogsSettingsConfig struct {
	// Filter by specific actions. Use wildcards for broader matches (e.g., repo.*)
	Actions []string `json:"actions,omitempty"`
	// Filter by the username that initiated the action
	Actor *string `json:"actor,omitempty"`
	// Filter by actor's country code (e.g., US)
	Country *string `json:"country,omitempty"`
	// Only return audit log entries after this RFC3339 formatted time stamp
	CreatedAfter *string `json:"created_after,omitempty"`
	// Your GitHub enterprise slug or ID
	Enterprise *string `json:"enterprise,omitempty"`
	// Event types to include. web: Gets all web (non-git) events. git: Gets git events. all: Gets both.
	Include *string `json:"include,omitempty"`
	// Filter by organization name
	Organization *string `json:"organization,omitempty"`
	// Filter by repository (format: org-name/repo-name)
	Repository *string `json:"repository,omitempty"`
	// Filter by the username that was affected by the action
	User *string `json:"user,omitempty"`
}

// NewAuditLogsSettingsConfig instantiates a new AuditLogsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditLogsSettingsConfig() *AuditLogsSettingsConfig {
	this := AuditLogsSettingsConfig{}
	return &this
}

// NewAuditLogsSettingsConfigWithDefaults instantiates a new AuditLogsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditLogsSettingsConfigWithDefaults() *AuditLogsSettingsConfig {
	this := AuditLogsSettingsConfig{}
	return &this
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetActions() []string {
	if o == nil || IsNil(o.Actions) {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetActionsOk() ([]string, bool) {
	if o == nil || IsNil(o.Actions) {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasActions() bool {
	if o != nil && !IsNil(o.Actions) {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *AuditLogsSettingsConfig) SetActions(v []string) {
	o.Actions = v
}

// GetActor returns the Actor field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetActor() string {
	if o == nil || IsNil(o.Actor) {
		var ret string
		return ret
	}
	return *o.Actor
}

// GetActorOk returns a tuple with the Actor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetActorOk() (*string, bool) {
	if o == nil || IsNil(o.Actor) {
		return nil, false
	}
	return o.Actor, true
}

// HasActor returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasActor() bool {
	if o != nil && !IsNil(o.Actor) {
		return true
	}

	return false
}

// SetActor gets a reference to the given string and assigns it to the Actor field.
func (o *AuditLogsSettingsConfig) SetActor(v string) {
	o.Actor = &v
}

// GetCountry returns the Country field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetCountry() string {
	if o == nil || IsNil(o.Country) {
		var ret string
		return ret
	}
	return *o.Country
}

// GetCountryOk returns a tuple with the Country field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetCountryOk() (*string, bool) {
	if o == nil || IsNil(o.Country) {
		return nil, false
	}
	return o.Country, true
}

// HasCountry returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasCountry() bool {
	if o != nil && !IsNil(o.Country) {
		return true
	}

	return false
}

// SetCountry gets a reference to the given string and assigns it to the Country field.
func (o *AuditLogsSettingsConfig) SetCountry(v string) {
	o.Country = &v
}

// GetCreatedAfter returns the CreatedAfter field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetCreatedAfter() string {
	if o == nil || IsNil(o.CreatedAfter) {
		var ret string
		return ret
	}
	return *o.CreatedAfter
}

// GetCreatedAfterOk returns a tuple with the CreatedAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetCreatedAfterOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAfter) {
		return nil, false
	}
	return o.CreatedAfter, true
}

// HasCreatedAfter returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasCreatedAfter() bool {
	if o != nil && !IsNil(o.CreatedAfter) {
		return true
	}

	return false
}

// SetCreatedAfter gets a reference to the given string and assigns it to the CreatedAfter field.
func (o *AuditLogsSettingsConfig) SetCreatedAfter(v string) {
	o.CreatedAfter = &v
}

// GetEnterprise returns the Enterprise field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetEnterprise() string {
	if o == nil || IsNil(o.Enterprise) {
		var ret string
		return ret
	}
	return *o.Enterprise
}

// GetEnterpriseOk returns a tuple with the Enterprise field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetEnterpriseOk() (*string, bool) {
	if o == nil || IsNil(o.Enterprise) {
		return nil, false
	}
	return o.Enterprise, true
}

// HasEnterprise returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasEnterprise() bool {
	if o != nil && !IsNil(o.Enterprise) {
		return true
	}

	return false
}

// SetEnterprise gets a reference to the given string and assigns it to the Enterprise field.
func (o *AuditLogsSettingsConfig) SetEnterprise(v string) {
	o.Enterprise = &v
}

// GetInclude returns the Include field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetInclude() string {
	if o == nil || IsNil(o.Include) {
		var ret string
		return ret
	}
	return *o.Include
}

// GetIncludeOk returns a tuple with the Include field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetIncludeOk() (*string, bool) {
	if o == nil || IsNil(o.Include) {
		return nil, false
	}
	return o.Include, true
}

// HasInclude returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasInclude() bool {
	if o != nil && !IsNil(o.Include) {
		return true
	}

	return false
}

// SetInclude gets a reference to the given string and assigns it to the Include field.
func (o *AuditLogsSettingsConfig) SetInclude(v string) {
	o.Include = &v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetOrganization() string {
	if o == nil || IsNil(o.Organization) {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetOrganizationOk() (*string, bool) {
	if o == nil || IsNil(o.Organization) {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasOrganization() bool {
	if o != nil && !IsNil(o.Organization) {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *AuditLogsSettingsConfig) SetOrganization(v string) {
	o.Organization = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetRepository() string {
	if o == nil || IsNil(o.Repository) {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetRepositoryOk() (*string, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *AuditLogsSettingsConfig) SetRepository(v string) {
	o.Repository = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *AuditLogsSettingsConfig) GetUser() string {
	if o == nil || IsNil(o.User) {
		var ret string
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditLogsSettingsConfig) GetUserOk() (*string, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *AuditLogsSettingsConfig) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given string and assigns it to the User field.
func (o *AuditLogsSettingsConfig) SetUser(v string) {
	o.User = &v
}

func (o AuditLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditLogsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Actions) {
		toSerialize["actions"] = o.Actions
	}
	if !IsNil(o.Actor) {
		toSerialize["actor"] = o.Actor
	}
	if !IsNil(o.Country) {
		toSerialize["country"] = o.Country
	}
	if !IsNil(o.CreatedAfter) {
		toSerialize["created_after"] = o.CreatedAfter
	}
	if !IsNil(o.Enterprise) {
		toSerialize["enterprise"] = o.Enterprise
	}
	if !IsNil(o.Include) {
		toSerialize["include"] = o.Include
	}
	if !IsNil(o.Organization) {
		toSerialize["organization"] = o.Organization
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableAuditLogsSettingsConfig struct {
	value *AuditLogsSettingsConfig
	isSet bool
}

func (v NullableAuditLogsSettingsConfig) Get() *AuditLogsSettingsConfig {
	return v.value
}

func (v *NullableAuditLogsSettingsConfig) Set(val *AuditLogsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditLogsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditLogsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditLogsSettingsConfig(val *AuditLogsSettingsConfig) *NullableAuditLogsSettingsConfig {
	return &NullableAuditLogsSettingsConfig{value: val, isSet: true}
}

func (v NullableAuditLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditLogsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


