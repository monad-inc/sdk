/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutesV3CreateConnectionRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV3CreateConnectionRoleRequest{}

// RoutesV3CreateConnectionRoleRequest struct for RoutesV3CreateConnectionRoleRequest
type RoutesV3CreateConnectionRoleRequest struct {
	// Description of the role
	Description *string `json:"description,omitempty"`
	// Name of the role
	Name string `json:"name"`
	// Permission slugs for the role
	Permissions []string `json:"permissions"`
}

type _RoutesV3CreateConnectionRoleRequest RoutesV3CreateConnectionRoleRequest

// NewRoutesV3CreateConnectionRoleRequest instantiates a new RoutesV3CreateConnectionRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV3CreateConnectionRoleRequest(name string, permissions []string) *RoutesV3CreateConnectionRoleRequest {
	this := RoutesV3CreateConnectionRoleRequest{}
	this.Name = name
	this.Permissions = permissions
	return &this
}

// NewRoutesV3CreateConnectionRoleRequestWithDefaults instantiates a new RoutesV3CreateConnectionRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV3CreateConnectionRoleRequestWithDefaults() *RoutesV3CreateConnectionRoleRequest {
	this := RoutesV3CreateConnectionRoleRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoutesV3CreateConnectionRoleRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV3CreateConnectionRoleRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoutesV3CreateConnectionRoleRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoutesV3CreateConnectionRoleRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *RoutesV3CreateConnectionRoleRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoutesV3CreateConnectionRoleRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoutesV3CreateConnectionRoleRequest) SetName(v string) {
	o.Name = v
}

// GetPermissions returns the Permissions field value
func (o *RoutesV3CreateConnectionRoleRequest) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *RoutesV3CreateConnectionRoleRequest) GetPermissionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *RoutesV3CreateConnectionRoleRequest) SetPermissions(v []string) {
	o.Permissions = v
}

func (o RoutesV3CreateConnectionRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV3CreateConnectionRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	toSerialize["permissions"] = o.Permissions
	return toSerialize, nil
}

func (o *RoutesV3CreateConnectionRoleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"permissions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutesV3CreateConnectionRoleRequest := _RoutesV3CreateConnectionRoleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutesV3CreateConnectionRoleRequest)

	if err != nil {
		return err
	}

	*o = RoutesV3CreateConnectionRoleRequest(varRoutesV3CreateConnectionRoleRequest)

	return err
}

type NullableRoutesV3CreateConnectionRoleRequest struct {
	value *RoutesV3CreateConnectionRoleRequest
	isSet bool
}

func (v NullableRoutesV3CreateConnectionRoleRequest) Get() *RoutesV3CreateConnectionRoleRequest {
	return v.value
}

func (v *NullableRoutesV3CreateConnectionRoleRequest) Set(val *RoutesV3CreateConnectionRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV3CreateConnectionRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV3CreateConnectionRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV3CreateConnectionRoleRequest(val *RoutesV3CreateConnectionRoleRequest) *NullableRoutesV3CreateConnectionRoleRequest {
	return &NullableRoutesV3CreateConnectionRoleRequest{value: val, isSet: true}
}

func (v NullableRoutesV3CreateConnectionRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV3CreateConnectionRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


