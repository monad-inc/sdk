/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the SecurityGroupsFilterConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityGroupsFilterConfig{}

// SecurityGroupsFilterConfig struct for SecurityGroupsFilterConfig
type SecurityGroupsFilterConfig struct {
	Name *string `json:"name,omitempty"`
	Values []string `json:"values,omitempty"`
}

// NewSecurityGroupsFilterConfig instantiates a new SecurityGroupsFilterConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityGroupsFilterConfig() *SecurityGroupsFilterConfig {
	this := SecurityGroupsFilterConfig{}
	return &this
}

// NewSecurityGroupsFilterConfigWithDefaults instantiates a new SecurityGroupsFilterConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityGroupsFilterConfigWithDefaults() *SecurityGroupsFilterConfig {
	this := SecurityGroupsFilterConfig{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *SecurityGroupsFilterConfig) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupsFilterConfig) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *SecurityGroupsFilterConfig) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *SecurityGroupsFilterConfig) SetName(v string) {
	o.Name = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *SecurityGroupsFilterConfig) GetValues() []string {
	if o == nil || IsNil(o.Values) {
		var ret []string
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityGroupsFilterConfig) GetValuesOk() ([]string, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *SecurityGroupsFilterConfig) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []string and assigns it to the Values field.
func (o *SecurityGroupsFilterConfig) SetValues(v []string) {
	o.Values = v
}

func (o SecurityGroupsFilterConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityGroupsFilterConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableSecurityGroupsFilterConfig struct {
	value *SecurityGroupsFilterConfig
	isSet bool
}

func (v NullableSecurityGroupsFilterConfig) Get() *SecurityGroupsFilterConfig {
	return v.value
}

func (v *NullableSecurityGroupsFilterConfig) Set(val *SecurityGroupsFilterConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityGroupsFilterConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityGroupsFilterConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityGroupsFilterConfig(val *SecurityGroupsFilterConfig) *NullableSecurityGroupsFilterConfig {
	return &NullableSecurityGroupsFilterConfig{value: val, isSet: true}
}

func (v NullableSecurityGroupsFilterConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityGroupsFilterConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


