/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ResourceEvaluationsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResourceEvaluationsSettingsConfig{}

// ResourceEvaluationsSettingsConfig AWS Resource Evaluations settings
type ResourceEvaluationsSettingsConfig struct {
	// Cron string for scheduling the ingest of your input. eg: `0 0 * * *` - Daily at midnight, or `*_/15 * * * *` - Every 15 minutes
	Cron *string `json:"cron,omitempty"`
	// Filters proactive resource evaluations for a given infrastructure deployment.
	EvaluationContextIdentifier *string `json:"evaluation_context_identifier,omitempty"`
	// The Region that you would receieve findings for
	Region *string `json:"region,omitempty"`
	// The ARN of the role to assume to access the bucket
	RoleArn *string `json:"role_arn,omitempty"`
}

// NewResourceEvaluationsSettingsConfig instantiates a new ResourceEvaluationsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResourceEvaluationsSettingsConfig() *ResourceEvaluationsSettingsConfig {
	this := ResourceEvaluationsSettingsConfig{}
	return &this
}

// NewResourceEvaluationsSettingsConfigWithDefaults instantiates a new ResourceEvaluationsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResourceEvaluationsSettingsConfigWithDefaults() *ResourceEvaluationsSettingsConfig {
	this := ResourceEvaluationsSettingsConfig{}
	return &this
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *ResourceEvaluationsSettingsConfig) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceEvaluationsSettingsConfig) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *ResourceEvaluationsSettingsConfig) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *ResourceEvaluationsSettingsConfig) SetCron(v string) {
	o.Cron = &v
}

// GetEvaluationContextIdentifier returns the EvaluationContextIdentifier field value if set, zero value otherwise.
func (o *ResourceEvaluationsSettingsConfig) GetEvaluationContextIdentifier() string {
	if o == nil || IsNil(o.EvaluationContextIdentifier) {
		var ret string
		return ret
	}
	return *o.EvaluationContextIdentifier
}

// GetEvaluationContextIdentifierOk returns a tuple with the EvaluationContextIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceEvaluationsSettingsConfig) GetEvaluationContextIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.EvaluationContextIdentifier) {
		return nil, false
	}
	return o.EvaluationContextIdentifier, true
}

// HasEvaluationContextIdentifier returns a boolean if a field has been set.
func (o *ResourceEvaluationsSettingsConfig) HasEvaluationContextIdentifier() bool {
	if o != nil && !IsNil(o.EvaluationContextIdentifier) {
		return true
	}

	return false
}

// SetEvaluationContextIdentifier gets a reference to the given string and assigns it to the EvaluationContextIdentifier field.
func (o *ResourceEvaluationsSettingsConfig) SetEvaluationContextIdentifier(v string) {
	o.EvaluationContextIdentifier = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *ResourceEvaluationsSettingsConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceEvaluationsSettingsConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *ResourceEvaluationsSettingsConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *ResourceEvaluationsSettingsConfig) SetRegion(v string) {
	o.Region = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *ResourceEvaluationsSettingsConfig) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResourceEvaluationsSettingsConfig) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *ResourceEvaluationsSettingsConfig) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *ResourceEvaluationsSettingsConfig) SetRoleArn(v string) {
	o.RoleArn = &v
}

func (o ResourceEvaluationsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResourceEvaluationsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.EvaluationContextIdentifier) {
		toSerialize["evaluation_context_identifier"] = o.EvaluationContextIdentifier
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}
	return toSerialize, nil
}

type NullableResourceEvaluationsSettingsConfig struct {
	value *ResourceEvaluationsSettingsConfig
	isSet bool
}

func (v NullableResourceEvaluationsSettingsConfig) Get() *ResourceEvaluationsSettingsConfig {
	return v.value
}

func (v *NullableResourceEvaluationsSettingsConfig) Set(val *ResourceEvaluationsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceEvaluationsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceEvaluationsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceEvaluationsSettingsConfig(val *ResourceEvaluationsSettingsConfig) *NullableResourceEvaluationsSettingsConfig {
	return &NullableResourceEvaluationsSettingsConfig{value: val, isSet: true}
}

func (v NullableResourceEvaluationsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceEvaluationsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


