/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsPipelineEdgeConditions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPipelineEdgeConditions{}

// ModelsPipelineEdgeConditions struct for ModelsPipelineEdgeConditions
type ModelsPipelineEdgeConditions struct {
	Conditions []ModelsPipelineEdgeCondition `json:"conditions,omitempty"`
	Operator *string `json:"operator,omitempty"`
}

// NewModelsPipelineEdgeConditions instantiates a new ModelsPipelineEdgeConditions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPipelineEdgeConditions() *ModelsPipelineEdgeConditions {
	this := ModelsPipelineEdgeConditions{}
	return &this
}

// NewModelsPipelineEdgeConditionsWithDefaults instantiates a new ModelsPipelineEdgeConditions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPipelineEdgeConditionsWithDefaults() *ModelsPipelineEdgeConditions {
	this := ModelsPipelineEdgeConditions{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ModelsPipelineEdgeConditions) GetConditions() []ModelsPipelineEdgeCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []ModelsPipelineEdgeCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdgeConditions) GetConditionsOk() ([]ModelsPipelineEdgeCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ModelsPipelineEdgeConditions) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []ModelsPipelineEdgeCondition and assigns it to the Conditions field.
func (o *ModelsPipelineEdgeConditions) SetConditions(v []ModelsPipelineEdgeCondition) {
	o.Conditions = v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *ModelsPipelineEdgeConditions) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdgeConditions) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *ModelsPipelineEdgeConditions) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *ModelsPipelineEdgeConditions) SetOperator(v string) {
	o.Operator = &v
}

func (o ModelsPipelineEdgeConditions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPipelineEdgeConditions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	return toSerialize, nil
}

type NullableModelsPipelineEdgeConditions struct {
	value *ModelsPipelineEdgeConditions
	isSet bool
}

func (v NullableModelsPipelineEdgeConditions) Get() *ModelsPipelineEdgeConditions {
	return v.value
}

func (v *NullableModelsPipelineEdgeConditions) Set(val *ModelsPipelineEdgeConditions) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPipelineEdgeConditions) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPipelineEdgeConditions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPipelineEdgeConditions(val *ModelsPipelineEdgeConditions) *NullableModelsPipelineEdgeConditions {
	return &NullableModelsPipelineEdgeConditions{value: val, isSet: true}
}

func (v NullableModelsPipelineEdgeConditions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPipelineEdgeConditions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


