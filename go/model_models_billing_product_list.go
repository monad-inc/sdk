/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsBillingProductList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsBillingProductList{}

// ModelsBillingProductList struct for ModelsBillingProductList
type ModelsBillingProductList struct {
	BillingProducts []ModelsBillingProduct `json:"billing_products,omitempty"`
	Pagination *ModelsPagination `json:"pagination,omitempty"`
}

// NewModelsBillingProductList instantiates a new ModelsBillingProductList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsBillingProductList() *ModelsBillingProductList {
	this := ModelsBillingProductList{}
	return &this
}

// NewModelsBillingProductListWithDefaults instantiates a new ModelsBillingProductList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsBillingProductListWithDefaults() *ModelsBillingProductList {
	this := ModelsBillingProductList{}
	return &this
}

// GetBillingProducts returns the BillingProducts field value if set, zero value otherwise.
func (o *ModelsBillingProductList) GetBillingProducts() []ModelsBillingProduct {
	if o == nil || IsNil(o.BillingProducts) {
		var ret []ModelsBillingProduct
		return ret
	}
	return o.BillingProducts
}

// GetBillingProductsOk returns a tuple with the BillingProducts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProductList) GetBillingProductsOk() ([]ModelsBillingProduct, bool) {
	if o == nil || IsNil(o.BillingProducts) {
		return nil, false
	}
	return o.BillingProducts, true
}

// HasBillingProducts returns a boolean if a field has been set.
func (o *ModelsBillingProductList) HasBillingProducts() bool {
	if o != nil && !IsNil(o.BillingProducts) {
		return true
	}

	return false
}

// SetBillingProducts gets a reference to the given []ModelsBillingProduct and assigns it to the BillingProducts field.
func (o *ModelsBillingProductList) SetBillingProducts(v []ModelsBillingProduct) {
	o.BillingProducts = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ModelsBillingProductList) GetPagination() ModelsPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ModelsPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProductList) GetPaginationOk() (*ModelsPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ModelsBillingProductList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ModelsPagination and assigns it to the Pagination field.
func (o *ModelsBillingProductList) SetPagination(v ModelsPagination) {
	o.Pagination = &v
}

func (o ModelsBillingProductList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsBillingProductList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BillingProducts) {
		toSerialize["billing_products"] = o.BillingProducts
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableModelsBillingProductList struct {
	value *ModelsBillingProductList
	isSet bool
}

func (v NullableModelsBillingProductList) Get() *ModelsBillingProductList {
	return v.value
}

func (v *NullableModelsBillingProductList) Set(val *ModelsBillingProductList) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsBillingProductList) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsBillingProductList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsBillingProductList(val *ModelsBillingProductList) *NullableModelsBillingProductList {
	return &NullableModelsBillingProductList{value: val, isSet: true}
}

func (v NullableModelsBillingProductList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsBillingProductList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


