/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelsPipelineConfigV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPipelineConfigV2{}

// ModelsPipelineConfigV2 struct for ModelsPipelineConfigV2
type ModelsPipelineConfigV2 struct {
	CreatedAt *string `json:"createdAt,omitempty"`
	Description *string `json:"description,omitempty"`
	Edges []ModelsPipelineEdge `json:"edges"`
	Enabled bool `json:"enabled"`
	Id string `json:"id"`
	Name string `json:"name"`
	Nodes []ModelsPipelineNode `json:"nodes"`
	OrganizationId string `json:"organizationId"`
	OrganizationName *string `json:"organizationName,omitempty"`
	UpdatedAt *string `json:"updatedAt,omitempty"`
}

type _ModelsPipelineConfigV2 ModelsPipelineConfigV2

// NewModelsPipelineConfigV2 instantiates a new ModelsPipelineConfigV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPipelineConfigV2(edges []ModelsPipelineEdge, enabled bool, id string, name string, nodes []ModelsPipelineNode, organizationId string) *ModelsPipelineConfigV2 {
	this := ModelsPipelineConfigV2{}
	this.Edges = edges
	this.Enabled = enabled
	this.Id = id
	this.Name = name
	this.Nodes = nodes
	this.OrganizationId = organizationId
	return &this
}

// NewModelsPipelineConfigV2WithDefaults instantiates a new ModelsPipelineConfigV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPipelineConfigV2WithDefaults() *ModelsPipelineConfigV2 {
	this := ModelsPipelineConfigV2{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsPipelineConfigV2) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsPipelineConfigV2) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsPipelineConfigV2) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsPipelineConfigV2) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsPipelineConfigV2) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsPipelineConfigV2) SetDescription(v string) {
	o.Description = &v
}

// GetEdges returns the Edges field value
func (o *ModelsPipelineConfigV2) GetEdges() []ModelsPipelineEdge {
	if o == nil {
		var ret []ModelsPipelineEdge
		return ret
	}

	return o.Edges
}

// GetEdgesOk returns a tuple with the Edges field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetEdgesOk() ([]ModelsPipelineEdge, bool) {
	if o == nil {
		return nil, false
	}
	return o.Edges, true
}

// SetEdges sets field value
func (o *ModelsPipelineConfigV2) SetEdges(v []ModelsPipelineEdge) {
	o.Edges = v
}

// GetEnabled returns the Enabled field value
func (o *ModelsPipelineConfigV2) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ModelsPipelineConfigV2) SetEnabled(v bool) {
	o.Enabled = v
}

// GetId returns the Id field value
func (o *ModelsPipelineConfigV2) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModelsPipelineConfigV2) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ModelsPipelineConfigV2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ModelsPipelineConfigV2) SetName(v string) {
	o.Name = v
}

// GetNodes returns the Nodes field value
func (o *ModelsPipelineConfigV2) GetNodes() []ModelsPipelineNode {
	if o == nil {
		var ret []ModelsPipelineNode
		return ret
	}

	return o.Nodes
}

// GetNodesOk returns a tuple with the Nodes field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetNodesOk() ([]ModelsPipelineNode, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nodes, true
}

// SetNodes sets field value
func (o *ModelsPipelineConfigV2) SetNodes(v []ModelsPipelineNode) {
	o.Nodes = v
}

// GetOrganizationId returns the OrganizationId field value
func (o *ModelsPipelineConfigV2) GetOrganizationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetOrganizationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationId, true
}

// SetOrganizationId sets field value
func (o *ModelsPipelineConfigV2) SetOrganizationId(v string) {
	o.OrganizationId = v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ModelsPipelineConfigV2) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ModelsPipelineConfigV2) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ModelsPipelineConfigV2) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsPipelineConfigV2) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineConfigV2) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsPipelineConfigV2) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsPipelineConfigV2) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsPipelineConfigV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPipelineConfigV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["edges"] = o.Edges
	toSerialize["enabled"] = o.Enabled
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["nodes"] = o.Nodes
	toSerialize["organizationId"] = o.OrganizationId
	if !IsNil(o.OrganizationName) {
		toSerialize["organizationName"] = o.OrganizationName
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

func (o *ModelsPipelineConfigV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"edges",
		"enabled",
		"id",
		"name",
		"nodes",
		"organizationId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelsPipelineConfigV2 := _ModelsPipelineConfigV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelsPipelineConfigV2)

	if err != nil {
		return err
	}

	*o = ModelsPipelineConfigV2(varModelsPipelineConfigV2)

	return err
}

type NullableModelsPipelineConfigV2 struct {
	value *ModelsPipelineConfigV2
	isSet bool
}

func (v NullableModelsPipelineConfigV2) Get() *ModelsPipelineConfigV2 {
	return v.value
}

func (v *NullableModelsPipelineConfigV2) Set(val *ModelsPipelineConfigV2) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPipelineConfigV2) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPipelineConfigV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPipelineConfigV2(val *ModelsPipelineConfigV2) *NullableModelsPipelineConfigV2 {
	return &NullableModelsPipelineConfigV2{value: val, isSet: true}
}

func (v NullableModelsPipelineConfigV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPipelineConfigV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


