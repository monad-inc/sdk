/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the KmsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KmsSettingsConfig{}

// KmsSettingsConfig struct for KmsSettingsConfig
type KmsSettingsConfig struct {
	// Cron expression for scheduling the input
	Cron *string `json:"cron,omitempty"`
	// Type of KMS resources to list
	KmsType *string `json:"kms_type,omitempty"`
	// AWS region to use
	Region *string `json:"region,omitempty"`
	// Role ARN to assume
	RoleArn *string `json:"role_arn,omitempty"`
}

// NewKmsSettingsConfig instantiates a new KmsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKmsSettingsConfig() *KmsSettingsConfig {
	this := KmsSettingsConfig{}
	return &this
}

// NewKmsSettingsConfigWithDefaults instantiates a new KmsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKmsSettingsConfigWithDefaults() *KmsSettingsConfig {
	this := KmsSettingsConfig{}
	return &this
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *KmsSettingsConfig) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmsSettingsConfig) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *KmsSettingsConfig) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *KmsSettingsConfig) SetCron(v string) {
	o.Cron = &v
}

// GetKmsType returns the KmsType field value if set, zero value otherwise.
func (o *KmsSettingsConfig) GetKmsType() string {
	if o == nil || IsNil(o.KmsType) {
		var ret string
		return ret
	}
	return *o.KmsType
}

// GetKmsTypeOk returns a tuple with the KmsType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmsSettingsConfig) GetKmsTypeOk() (*string, bool) {
	if o == nil || IsNil(o.KmsType) {
		return nil, false
	}
	return o.KmsType, true
}

// HasKmsType returns a boolean if a field has been set.
func (o *KmsSettingsConfig) HasKmsType() bool {
	if o != nil && !IsNil(o.KmsType) {
		return true
	}

	return false
}

// SetKmsType gets a reference to the given string and assigns it to the KmsType field.
func (o *KmsSettingsConfig) SetKmsType(v string) {
	o.KmsType = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *KmsSettingsConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmsSettingsConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *KmsSettingsConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *KmsSettingsConfig) SetRegion(v string) {
	o.Region = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *KmsSettingsConfig) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KmsSettingsConfig) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *KmsSettingsConfig) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *KmsSettingsConfig) SetRoleArn(v string) {
	o.RoleArn = &v
}

func (o KmsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KmsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.KmsType) {
		toSerialize["kms_type"] = o.KmsType
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}
	return toSerialize, nil
}

type NullableKmsSettingsConfig struct {
	value *KmsSettingsConfig
	isSet bool
}

func (v NullableKmsSettingsConfig) Get() *KmsSettingsConfig {
	return v.value
}

func (v *NullableKmsSettingsConfig) Set(val *KmsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableKmsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableKmsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKmsSettingsConfig(val *KmsSettingsConfig) *NullableKmsSettingsConfig {
	return &NullableKmsSettingsConfig{value: val, isSet: true}
}

func (v NullableKmsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKmsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


