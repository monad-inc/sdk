/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the OutputsConnectorMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutputsConnectorMeta{}

// OutputsConnectorMeta struct for OutputsConnectorMeta
type OutputsConnectorMeta struct {
	AuthType *string `json:"auth_type,omitempty"`
	BillingType *int32 `json:"billing_type,omitempty"`
	Category *string `json:"category,omitempty"`
	Config interface{} `json:"config,omitempty"`
	Description *string `json:"description,omitempty"`
	House *string `json:"house,omitempty"`
	Internal *bool `json:"internal,omitempty"`
	Name *string `json:"name,omitempty"`
	Tier *int32 `json:"tier,omitempty"`
	TypeId *string `json:"type_id,omitempty"`
}

// NewOutputsConnectorMeta instantiates a new OutputsConnectorMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutputsConnectorMeta() *OutputsConnectorMeta {
	this := OutputsConnectorMeta{}
	return &this
}

// NewOutputsConnectorMetaWithDefaults instantiates a new OutputsConnectorMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutputsConnectorMetaWithDefaults() *OutputsConnectorMeta {
	this := OutputsConnectorMeta{}
	return &this
}

// GetAuthType returns the AuthType field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetAuthType() string {
	if o == nil || IsNil(o.AuthType) {
		var ret string
		return ret
	}
	return *o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetAuthTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AuthType) {
		return nil, false
	}
	return o.AuthType, true
}

// HasAuthType returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasAuthType() bool {
	if o != nil && !IsNil(o.AuthType) {
		return true
	}

	return false
}

// SetAuthType gets a reference to the given string and assigns it to the AuthType field.
func (o *OutputsConnectorMeta) SetAuthType(v string) {
	o.AuthType = &v
}

// GetBillingType returns the BillingType field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetBillingType() int32 {
	if o == nil || IsNil(o.BillingType) {
		var ret int32
		return ret
	}
	return *o.BillingType
}

// GetBillingTypeOk returns a tuple with the BillingType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetBillingTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.BillingType) {
		return nil, false
	}
	return o.BillingType, true
}

// HasBillingType returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasBillingType() bool {
	if o != nil && !IsNil(o.BillingType) {
		return true
	}

	return false
}

// SetBillingType gets a reference to the given int32 and assigns it to the BillingType field.
func (o *OutputsConnectorMeta) SetBillingType(v int32) {
	o.BillingType = &v
}

// GetCategory returns the Category field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetCategory() string {
	if o == nil || IsNil(o.Category) {
		var ret string
		return ret
	}
	return *o.Category
}

// GetCategoryOk returns a tuple with the Category field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.Category) {
		return nil, false
	}
	return o.Category, true
}

// HasCategory returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasCategory() bool {
	if o != nil && !IsNil(o.Category) {
		return true
	}

	return false
}

// SetCategory gets a reference to the given string and assigns it to the Category field.
func (o *OutputsConnectorMeta) SetCategory(v string) {
	o.Category = &v
}

// GetConfig returns the Config field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OutputsConnectorMeta) GetConfig() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OutputsConnectorMeta) GetConfigOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return &o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given interface{} and assigns it to the Config field.
func (o *OutputsConnectorMeta) SetConfig(v interface{}) {
	o.Config = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OutputsConnectorMeta) SetDescription(v string) {
	o.Description = &v
}

// GetHouse returns the House field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetHouse() string {
	if o == nil || IsNil(o.House) {
		var ret string
		return ret
	}
	return *o.House
}

// GetHouseOk returns a tuple with the House field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetHouseOk() (*string, bool) {
	if o == nil || IsNil(o.House) {
		return nil, false
	}
	return o.House, true
}

// HasHouse returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasHouse() bool {
	if o != nil && !IsNil(o.House) {
		return true
	}

	return false
}

// SetHouse gets a reference to the given string and assigns it to the House field.
func (o *OutputsConnectorMeta) SetHouse(v string) {
	o.House = &v
}

// GetInternal returns the Internal field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetInternal() bool {
	if o == nil || IsNil(o.Internal) {
		var ret bool
		return ret
	}
	return *o.Internal
}

// GetInternalOk returns a tuple with the Internal field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetInternalOk() (*bool, bool) {
	if o == nil || IsNil(o.Internal) {
		return nil, false
	}
	return o.Internal, true
}

// HasInternal returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasInternal() bool {
	if o != nil && !IsNil(o.Internal) {
		return true
	}

	return false
}

// SetInternal gets a reference to the given bool and assigns it to the Internal field.
func (o *OutputsConnectorMeta) SetInternal(v bool) {
	o.Internal = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *OutputsConnectorMeta) SetName(v string) {
	o.Name = &v
}

// GetTier returns the Tier field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetTier() int32 {
	if o == nil || IsNil(o.Tier) {
		var ret int32
		return ret
	}
	return *o.Tier
}

// GetTierOk returns a tuple with the Tier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetTierOk() (*int32, bool) {
	if o == nil || IsNil(o.Tier) {
		return nil, false
	}
	return o.Tier, true
}

// HasTier returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasTier() bool {
	if o != nil && !IsNil(o.Tier) {
		return true
	}

	return false
}

// SetTier gets a reference to the given int32 and assigns it to the Tier field.
func (o *OutputsConnectorMeta) SetTier(v int32) {
	o.Tier = &v
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *OutputsConnectorMeta) GetTypeId() string {
	if o == nil || IsNil(o.TypeId) {
		var ret string
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutputsConnectorMeta) GetTypeIdOk() (*string, bool) {
	if o == nil || IsNil(o.TypeId) {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *OutputsConnectorMeta) HasTypeId() bool {
	if o != nil && !IsNil(o.TypeId) {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given string and assigns it to the TypeId field.
func (o *OutputsConnectorMeta) SetTypeId(v string) {
	o.TypeId = &v
}

func (o OutputsConnectorMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutputsConnectorMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthType) {
		toSerialize["auth_type"] = o.AuthType
	}
	if !IsNil(o.BillingType) {
		toSerialize["billing_type"] = o.BillingType
	}
	if !IsNil(o.Category) {
		toSerialize["category"] = o.Category
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.House) {
		toSerialize["house"] = o.House
	}
	if !IsNil(o.Internal) {
		toSerialize["internal"] = o.Internal
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Tier) {
		toSerialize["tier"] = o.Tier
	}
	if !IsNil(o.TypeId) {
		toSerialize["type_id"] = o.TypeId
	}
	return toSerialize, nil
}

type NullableOutputsConnectorMeta struct {
	value *OutputsConnectorMeta
	isSet bool
}

func (v NullableOutputsConnectorMeta) Get() *OutputsConnectorMeta {
	return v.value
}

func (v *NullableOutputsConnectorMeta) Set(val *OutputsConnectorMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableOutputsConnectorMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableOutputsConnectorMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutputsConnectorMeta(val *OutputsConnectorMeta) *NullableOutputsConnectorMeta {
	return &NullableOutputsConnectorMeta{value: val, isSet: true}
}

func (v NullableOutputsConnectorMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutputsConnectorMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


