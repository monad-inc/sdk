/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// SecretProcessesorEnrichmentConfigSettings - struct for SecretProcessesorEnrichmentConfigSettings
type SecretProcessesorEnrichmentConfigSettings struct {
	CommunityEditionSettingsConfig *CommunityEditionSettingsConfig
	MapmapOfStringAny *map[string]interface{}
}

// CommunityEditionSettingsConfigAsSecretProcessesorEnrichmentConfigSettings is a convenience function that returns CommunityEditionSettingsConfig wrapped in SecretProcessesorEnrichmentConfigSettings
func CommunityEditionSettingsConfigAsSecretProcessesorEnrichmentConfigSettings(v *CommunityEditionSettingsConfig) SecretProcessesorEnrichmentConfigSettings {
	return SecretProcessesorEnrichmentConfigSettings{
		CommunityEditionSettingsConfig: v,
	}
}

// map[string]interface{}AsSecretProcessesorEnrichmentConfigSettings is a convenience function that returns map[string]interface{} wrapped in SecretProcessesorEnrichmentConfigSettings
func MapmapOfStringAnyAsSecretProcessesorEnrichmentConfigSettings(v *map[string]interface{}) SecretProcessesorEnrichmentConfigSettings {
	return SecretProcessesorEnrichmentConfigSettings{
		MapmapOfStringAny: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SecretProcessesorEnrichmentConfigSettings) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CommunityEditionSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CommunityEditionSettingsConfig)
	if err == nil {
		jsonCommunityEditionSettingsConfig, _ := json.Marshal(dst.CommunityEditionSettingsConfig)
		if string(jsonCommunityEditionSettingsConfig) == "{}" { // empty struct
			dst.CommunityEditionSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CommunityEditionSettingsConfig); err != nil {
				dst.CommunityEditionSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CommunityEditionSettingsConfig = nil
	}

	// try to unmarshal data into MapmapOfStringAny
	err = newStrictDecoder(data).Decode(&dst.MapmapOfStringAny)
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			if err = validator.Validate(dst.MapmapOfStringAny); err != nil {
				dst.MapmapOfStringAny = nil
			} else {
				match++
			}
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CommunityEditionSettingsConfig = nil
		dst.MapmapOfStringAny = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SecretProcessesorEnrichmentConfigSettings)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SecretProcessesorEnrichmentConfigSettings)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SecretProcessesorEnrichmentConfigSettings) MarshalJSON() ([]byte, error) {
	if src.CommunityEditionSettingsConfig != nil {
		return json.Marshal(&src.CommunityEditionSettingsConfig)
	}

	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SecretProcessesorEnrichmentConfigSettings) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CommunityEditionSettingsConfig != nil {
		return obj.CommunityEditionSettingsConfig
	}

	if obj.MapmapOfStringAny != nil {
		return obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj SecretProcessesorEnrichmentConfigSettings) GetActualInstanceValue() (interface{}) {
	if obj.CommunityEditionSettingsConfig != nil {
		return *obj.CommunityEditionSettingsConfig
	}

	if obj.MapmapOfStringAny != nil {
		return *obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

type NullableSecretProcessesorEnrichmentConfigSettings struct {
	value *SecretProcessesorEnrichmentConfigSettings
	isSet bool
}

func (v NullableSecretProcessesorEnrichmentConfigSettings) Get() *SecretProcessesorEnrichmentConfigSettings {
	return v.value
}

func (v *NullableSecretProcessesorEnrichmentConfigSettings) Set(val *SecretProcessesorEnrichmentConfigSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretProcessesorEnrichmentConfigSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretProcessesorEnrichmentConfigSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretProcessesorEnrichmentConfigSettings(val *SecretProcessesorEnrichmentConfigSettings) *NullableSecretProcessesorEnrichmentConfigSettings {
	return &NullableSecretProcessesorEnrichmentConfigSettings{value: val, isSet: true}
}

func (v NullableSecretProcessesorEnrichmentConfigSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretProcessesorEnrichmentConfigSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


