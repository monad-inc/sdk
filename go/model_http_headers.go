/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the HttpHeaders type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpHeaders{}

// HttpHeaders struct for HttpHeaders
type HttpHeaders struct {
	HeaderKey *string `json:"header_key,omitempty"`
	HeaderValue *string `json:"header_value,omitempty"`
}

// NewHttpHeaders instantiates a new HttpHeaders object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpHeaders() *HttpHeaders {
	this := HttpHeaders{}
	return &this
}

// NewHttpHeadersWithDefaults instantiates a new HttpHeaders object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpHeadersWithDefaults() *HttpHeaders {
	this := HttpHeaders{}
	return &this
}

// GetHeaderKey returns the HeaderKey field value if set, zero value otherwise.
func (o *HttpHeaders) GetHeaderKey() string {
	if o == nil || IsNil(o.HeaderKey) {
		var ret string
		return ret
	}
	return *o.HeaderKey
}

// GetHeaderKeyOk returns a tuple with the HeaderKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpHeaders) GetHeaderKeyOk() (*string, bool) {
	if o == nil || IsNil(o.HeaderKey) {
		return nil, false
	}
	return o.HeaderKey, true
}

// HasHeaderKey returns a boolean if a field has been set.
func (o *HttpHeaders) HasHeaderKey() bool {
	if o != nil && !IsNil(o.HeaderKey) {
		return true
	}

	return false
}

// SetHeaderKey gets a reference to the given string and assigns it to the HeaderKey field.
func (o *HttpHeaders) SetHeaderKey(v string) {
	o.HeaderKey = &v
}

// GetHeaderValue returns the HeaderValue field value if set, zero value otherwise.
func (o *HttpHeaders) GetHeaderValue() string {
	if o == nil || IsNil(o.HeaderValue) {
		var ret string
		return ret
	}
	return *o.HeaderValue
}

// GetHeaderValueOk returns a tuple with the HeaderValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpHeaders) GetHeaderValueOk() (*string, bool) {
	if o == nil || IsNil(o.HeaderValue) {
		return nil, false
	}
	return o.HeaderValue, true
}

// HasHeaderValue returns a boolean if a field has been set.
func (o *HttpHeaders) HasHeaderValue() bool {
	if o != nil && !IsNil(o.HeaderValue) {
		return true
	}

	return false
}

// SetHeaderValue gets a reference to the given string and assigns it to the HeaderValue field.
func (o *HttpHeaders) SetHeaderValue(v string) {
	o.HeaderValue = &v
}

func (o HttpHeaders) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpHeaders) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.HeaderKey) {
		toSerialize["header_key"] = o.HeaderKey
	}
	if !IsNil(o.HeaderValue) {
		toSerialize["header_value"] = o.HeaderValue
	}
	return toSerialize, nil
}

type NullableHttpHeaders struct {
	value *HttpHeaders
	isSet bool
}

func (v NullableHttpHeaders) Get() *HttpHeaders {
	return v.value
}

func (v *NullableHttpHeaders) Set(val *HttpHeaders) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpHeaders) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpHeaders) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpHeaders(val *HttpHeaders) *NullableHttpHeaders {
	return &NullableHttpHeaders{value: val, isSet: true}
}

func (v NullableHttpHeaders) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpHeaders) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


