/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the MonadHttpSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonadHttpSettingsConfig{}

// MonadHttpSettingsConfig Monad HTTP settings
type MonadHttpSettingsConfig struct {
	// URL of the organization to monitor
	OrgUrl *string `json:"org_url,omitempty"`
}

// NewMonadHttpSettingsConfig instantiates a new MonadHttpSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonadHttpSettingsConfig() *MonadHttpSettingsConfig {
	this := MonadHttpSettingsConfig{}
	return &this
}

// NewMonadHttpSettingsConfigWithDefaults instantiates a new MonadHttpSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonadHttpSettingsConfigWithDefaults() *MonadHttpSettingsConfig {
	this := MonadHttpSettingsConfig{}
	return &this
}

// GetOrgUrl returns the OrgUrl field value if set, zero value otherwise.
func (o *MonadHttpSettingsConfig) GetOrgUrl() string {
	if o == nil || IsNil(o.OrgUrl) {
		var ret string
		return ret
	}
	return *o.OrgUrl
}

// GetOrgUrlOk returns a tuple with the OrgUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonadHttpSettingsConfig) GetOrgUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUrl) {
		return nil, false
	}
	return o.OrgUrl, true
}

// HasOrgUrl returns a boolean if a field has been set.
func (o *MonadHttpSettingsConfig) HasOrgUrl() bool {
	if o != nil && !IsNil(o.OrgUrl) {
		return true
	}

	return false
}

// SetOrgUrl gets a reference to the given string and assigns it to the OrgUrl field.
func (o *MonadHttpSettingsConfig) SetOrgUrl(v string) {
	o.OrgUrl = &v
}

func (o MonadHttpSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonadHttpSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgUrl) {
		toSerialize["org_url"] = o.OrgUrl
	}
	return toSerialize, nil
}

type NullableMonadHttpSettingsConfig struct {
	value *MonadHttpSettingsConfig
	isSet bool
}

func (v NullableMonadHttpSettingsConfig) Get() *MonadHttpSettingsConfig {
	return v.value
}

func (v *NullableMonadHttpSettingsConfig) Set(val *MonadHttpSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableMonadHttpSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableMonadHttpSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonadHttpSettingsConfig(val *MonadHttpSettingsConfig) *NullableMonadHttpSettingsConfig {
	return &NullableMonadHttpSettingsConfig{value: val, isSet: true}
}

func (v NullableMonadHttpSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonadHttpSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


