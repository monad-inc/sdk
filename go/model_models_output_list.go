/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsOutputList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsOutputList{}

// ModelsOutputList struct for ModelsOutputList
type ModelsOutputList struct {
	Outputs []ModelsOutput `json:"outputs,omitempty"`
	Pagination *ModelsPagination `json:"pagination,omitempty"`
}

// NewModelsOutputList instantiates a new ModelsOutputList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsOutputList() *ModelsOutputList {
	this := ModelsOutputList{}
	return &this
}

// NewModelsOutputListWithDefaults instantiates a new ModelsOutputList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsOutputListWithDefaults() *ModelsOutputList {
	this := ModelsOutputList{}
	return &this
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *ModelsOutputList) GetOutputs() []ModelsOutput {
	if o == nil || IsNil(o.Outputs) {
		var ret []ModelsOutput
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOutputList) GetOutputsOk() ([]ModelsOutput, bool) {
	if o == nil || IsNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *ModelsOutputList) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given []ModelsOutput and assigns it to the Outputs field.
func (o *ModelsOutputList) SetOutputs(v []ModelsOutput) {
	o.Outputs = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ModelsOutputList) GetPagination() ModelsPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ModelsPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOutputList) GetPaginationOk() (*ModelsPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ModelsOutputList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ModelsPagination and assigns it to the Pagination field.
func (o *ModelsOutputList) SetPagination(v ModelsPagination) {
	o.Pagination = &v
}

func (o ModelsOutputList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsOutputList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableModelsOutputList struct {
	value *ModelsOutputList
	isSet bool
}

func (v NullableModelsOutputList) Get() *ModelsOutputList {
	return v.value
}

func (v *NullableModelsOutputList) Set(val *ModelsOutputList) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsOutputList) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsOutputList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsOutputList(val *ModelsOutputList) *NullableModelsOutputList {
	return &NullableModelsOutputList{value: val, isSet: true}
}

func (v NullableModelsOutputList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsOutputList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


