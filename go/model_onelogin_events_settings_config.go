/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the OneloginEventsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OneloginEventsSettingsConfig{}

// OneloginEventsSettingsConfig Onelogin Events settings
type OneloginEventsSettingsConfig struct {
	// SubDomain is a placeholder that represents your specific OneLogin subdomain.
	Subdomain *string `json:"subdomain,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
}

// NewOneloginEventsSettingsConfig instantiates a new OneloginEventsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOneloginEventsSettingsConfig() *OneloginEventsSettingsConfig {
	this := OneloginEventsSettingsConfig{}
	return &this
}

// NewOneloginEventsSettingsConfigWithDefaults instantiates a new OneloginEventsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOneloginEventsSettingsConfigWithDefaults() *OneloginEventsSettingsConfig {
	this := OneloginEventsSettingsConfig{}
	return &this
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *OneloginEventsSettingsConfig) GetSubdomain() string {
	if o == nil || IsNil(o.Subdomain) {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneloginEventsSettingsConfig) GetSubdomainOk() (*string, bool) {
	if o == nil || IsNil(o.Subdomain) {
		return nil, false
	}
	return o.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (o *OneloginEventsSettingsConfig) HasSubdomain() bool {
	if o != nil && !IsNil(o.Subdomain) {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *OneloginEventsSettingsConfig) SetSubdomain(v string) {
	o.Subdomain = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *OneloginEventsSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OneloginEventsSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *OneloginEventsSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *OneloginEventsSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

func (o OneloginEventsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OneloginEventsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Subdomain) {
		toSerialize["subdomain"] = o.Subdomain
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	return toSerialize, nil
}

type NullableOneloginEventsSettingsConfig struct {
	value *OneloginEventsSettingsConfig
	isSet bool
}

func (v NullableOneloginEventsSettingsConfig) Get() *OneloginEventsSettingsConfig {
	return v.value
}

func (v *NullableOneloginEventsSettingsConfig) Set(val *OneloginEventsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableOneloginEventsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableOneloginEventsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOneloginEventsSettingsConfig(val *OneloginEventsSettingsConfig) *NullableOneloginEventsSettingsConfig {
	return &NullableOneloginEventsSettingsConfig{value: val, isSet: true}
}

func (v NullableOneloginEventsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOneloginEventsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


