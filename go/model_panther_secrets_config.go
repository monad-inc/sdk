/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the PantherSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PantherSecretsConfig{}

// PantherSecretsConfig struct for PantherSecretsConfig
type PantherSecretsConfig struct {
	BearerToken *ModelsSecret `json:"bearer_token,omitempty"`
}

// NewPantherSecretsConfig instantiates a new PantherSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPantherSecretsConfig() *PantherSecretsConfig {
	this := PantherSecretsConfig{}
	return &this
}

// NewPantherSecretsConfigWithDefaults instantiates a new PantherSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPantherSecretsConfigWithDefaults() *PantherSecretsConfig {
	this := PantherSecretsConfig{}
	return &this
}

// GetBearerToken returns the BearerToken field value if set, zero value otherwise.
func (o *PantherSecretsConfig) GetBearerToken() ModelsSecret {
	if o == nil || IsNil(o.BearerToken) {
		var ret ModelsSecret
		return ret
	}
	return *o.BearerToken
}

// GetBearerTokenOk returns a tuple with the BearerToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PantherSecretsConfig) GetBearerTokenOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.BearerToken) {
		return nil, false
	}
	return o.BearerToken, true
}

// HasBearerToken returns a boolean if a field has been set.
func (o *PantherSecretsConfig) HasBearerToken() bool {
	if o != nil && !IsNil(o.BearerToken) {
		return true
	}

	return false
}

// SetBearerToken gets a reference to the given ModelsSecret and assigns it to the BearerToken field.
func (o *PantherSecretsConfig) SetBearerToken(v ModelsSecret) {
	o.BearerToken = &v
}

func (o PantherSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PantherSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BearerToken) {
		toSerialize["bearer_token"] = o.BearerToken
	}
	return toSerialize, nil
}

type NullablePantherSecretsConfig struct {
	value *PantherSecretsConfig
	isSet bool
}

func (v NullablePantherSecretsConfig) Get() *PantherSecretsConfig {
	return v.value
}

func (v *NullablePantherSecretsConfig) Set(val *PantherSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePantherSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePantherSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePantherSecretsConfig(val *PantherSecretsConfig) *NullablePantherSecretsConfig {
	return &NullablePantherSecretsConfig{value: val, isSet: true}
}

func (v NullablePantherSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePantherSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


