/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ModelsPipelineEdge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPipelineEdge{}

// ModelsPipelineEdge struct for ModelsPipelineEdge
type ModelsPipelineEdge struct {
	Conditions ModelsPipelineEdgeConditions `json:"conditions"`
	CreatedAt *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	FromNodeInstanceId string `json:"from_node_instance_id"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	PipelineId *string `json:"pipeline_id,omitempty"`
	ToNodeInstanceId string `json:"to_node_instance_id"`
}

type _ModelsPipelineEdge ModelsPipelineEdge

// NewModelsPipelineEdge instantiates a new ModelsPipelineEdge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPipelineEdge(conditions ModelsPipelineEdgeConditions, fromNodeInstanceId string, toNodeInstanceId string) *ModelsPipelineEdge {
	this := ModelsPipelineEdge{}
	this.Conditions = conditions
	this.FromNodeInstanceId = fromNodeInstanceId
	this.ToNodeInstanceId = toNodeInstanceId
	return &this
}

// NewModelsPipelineEdgeWithDefaults instantiates a new ModelsPipelineEdge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPipelineEdgeWithDefaults() *ModelsPipelineEdge {
	this := ModelsPipelineEdge{}
	return &this
}

// GetConditions returns the Conditions field value
func (o *ModelsPipelineEdge) GetConditions() ModelsPipelineEdgeConditions {
	if o == nil {
		var ret ModelsPipelineEdgeConditions
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetConditionsOk() (*ModelsPipelineEdgeConditions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Conditions, true
}

// SetConditions sets field value
func (o *ModelsPipelineEdge) SetConditions(v ModelsPipelineEdgeConditions) {
	o.Conditions = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsPipelineEdge) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsPipelineEdge) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsPipelineEdge) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsPipelineEdge) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsPipelineEdge) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsPipelineEdge) SetDescription(v string) {
	o.Description = &v
}

// GetFromNodeInstanceId returns the FromNodeInstanceId field value
func (o *ModelsPipelineEdge) GetFromNodeInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromNodeInstanceId
}

// GetFromNodeInstanceIdOk returns a tuple with the FromNodeInstanceId field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetFromNodeInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromNodeInstanceId, true
}

// SetFromNodeInstanceId sets field value
func (o *ModelsPipelineEdge) SetFromNodeInstanceId(v string) {
	o.FromNodeInstanceId = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsPipelineEdge) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsPipelineEdge) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsPipelineEdge) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsPipelineEdge) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsPipelineEdge) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsPipelineEdge) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsPipelineEdge) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsPipelineEdge) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsPipelineEdge) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *ModelsPipelineEdge) GetPipelineId() string {
	if o == nil || IsNil(o.PipelineId) {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *ModelsPipelineEdge) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *ModelsPipelineEdge) SetPipelineId(v string) {
	o.PipelineId = &v
}

// GetToNodeInstanceId returns the ToNodeInstanceId field value
func (o *ModelsPipelineEdge) GetToNodeInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToNodeInstanceId
}

// GetToNodeInstanceIdOk returns a tuple with the ToNodeInstanceId field value
// and a boolean to check if the value has been set.
func (o *ModelsPipelineEdge) GetToNodeInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToNodeInstanceId, true
}

// SetToNodeInstanceId sets field value
func (o *ModelsPipelineEdge) SetToNodeInstanceId(v string) {
	o.ToNodeInstanceId = v
}

func (o ModelsPipelineEdge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPipelineEdge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conditions"] = o.Conditions
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["from_node_instance_id"] = o.FromNodeInstanceId
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	toSerialize["to_node_instance_id"] = o.ToNodeInstanceId
	return toSerialize, nil
}

func (o *ModelsPipelineEdge) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conditions",
		"from_node_instance_id",
		"to_node_instance_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varModelsPipelineEdge := _ModelsPipelineEdge{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varModelsPipelineEdge)

	if err != nil {
		return err
	}

	*o = ModelsPipelineEdge(varModelsPipelineEdge)

	return err
}

type NullableModelsPipelineEdge struct {
	value *ModelsPipelineEdge
	isSet bool
}

func (v NullableModelsPipelineEdge) Get() *ModelsPipelineEdge {
	return v.value
}

func (v *NullableModelsPipelineEdge) Set(val *ModelsPipelineEdge) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPipelineEdge) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPipelineEdge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPipelineEdge(val *ModelsPipelineEdge) *NullableModelsPipelineEdge {
	return &NullableModelsPipelineEdge{value: val, isSet: true}
}

func (v NullableModelsPipelineEdge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPipelineEdge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


