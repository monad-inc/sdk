/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutesCreateRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesCreateRoleRequest{}

// RoutesCreateRoleRequest struct for RoutesCreateRoleRequest
type RoutesCreateRoleRequest struct {
	Description *string `json:"description,omitempty"`
	Name string `json:"name"`
	PipelineCreate *bool `json:"pipeline_create,omitempty"`
	PipelineDelete *bool `json:"pipeline_delete,omitempty"`
	PipelineRead *bool `json:"pipeline_read,omitempty"`
	PipelineUpdate *bool `json:"pipeline_update,omitempty"`
}

type _RoutesCreateRoleRequest RoutesCreateRoleRequest

// NewRoutesCreateRoleRequest instantiates a new RoutesCreateRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesCreateRoleRequest(name string) *RoutesCreateRoleRequest {
	this := RoutesCreateRoleRequest{}
	this.Name = name
	return &this
}

// NewRoutesCreateRoleRequestWithDefaults instantiates a new RoutesCreateRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesCreateRoleRequestWithDefaults() *RoutesCreateRoleRequest {
	this := RoutesCreateRoleRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoutesCreateRoleRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCreateRoleRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoutesCreateRoleRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoutesCreateRoleRequest) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *RoutesCreateRoleRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RoutesCreateRoleRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RoutesCreateRoleRequest) SetName(v string) {
	o.Name = v
}

// GetPipelineCreate returns the PipelineCreate field value if set, zero value otherwise.
func (o *RoutesCreateRoleRequest) GetPipelineCreate() bool {
	if o == nil || IsNil(o.PipelineCreate) {
		var ret bool
		return ret
	}
	return *o.PipelineCreate
}

// GetPipelineCreateOk returns a tuple with the PipelineCreate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCreateRoleRequest) GetPipelineCreateOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineCreate) {
		return nil, false
	}
	return o.PipelineCreate, true
}

// HasPipelineCreate returns a boolean if a field has been set.
func (o *RoutesCreateRoleRequest) HasPipelineCreate() bool {
	if o != nil && !IsNil(o.PipelineCreate) {
		return true
	}

	return false
}

// SetPipelineCreate gets a reference to the given bool and assigns it to the PipelineCreate field.
func (o *RoutesCreateRoleRequest) SetPipelineCreate(v bool) {
	o.PipelineCreate = &v
}

// GetPipelineDelete returns the PipelineDelete field value if set, zero value otherwise.
func (o *RoutesCreateRoleRequest) GetPipelineDelete() bool {
	if o == nil || IsNil(o.PipelineDelete) {
		var ret bool
		return ret
	}
	return *o.PipelineDelete
}

// GetPipelineDeleteOk returns a tuple with the PipelineDelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCreateRoleRequest) GetPipelineDeleteOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineDelete) {
		return nil, false
	}
	return o.PipelineDelete, true
}

// HasPipelineDelete returns a boolean if a field has been set.
func (o *RoutesCreateRoleRequest) HasPipelineDelete() bool {
	if o != nil && !IsNil(o.PipelineDelete) {
		return true
	}

	return false
}

// SetPipelineDelete gets a reference to the given bool and assigns it to the PipelineDelete field.
func (o *RoutesCreateRoleRequest) SetPipelineDelete(v bool) {
	o.PipelineDelete = &v
}

// GetPipelineRead returns the PipelineRead field value if set, zero value otherwise.
func (o *RoutesCreateRoleRequest) GetPipelineRead() bool {
	if o == nil || IsNil(o.PipelineRead) {
		var ret bool
		return ret
	}
	return *o.PipelineRead
}

// GetPipelineReadOk returns a tuple with the PipelineRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCreateRoleRequest) GetPipelineReadOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineRead) {
		return nil, false
	}
	return o.PipelineRead, true
}

// HasPipelineRead returns a boolean if a field has been set.
func (o *RoutesCreateRoleRequest) HasPipelineRead() bool {
	if o != nil && !IsNil(o.PipelineRead) {
		return true
	}

	return false
}

// SetPipelineRead gets a reference to the given bool and assigns it to the PipelineRead field.
func (o *RoutesCreateRoleRequest) SetPipelineRead(v bool) {
	o.PipelineRead = &v
}

// GetPipelineUpdate returns the PipelineUpdate field value if set, zero value otherwise.
func (o *RoutesCreateRoleRequest) GetPipelineUpdate() bool {
	if o == nil || IsNil(o.PipelineUpdate) {
		var ret bool
		return ret
	}
	return *o.PipelineUpdate
}

// GetPipelineUpdateOk returns a tuple with the PipelineUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesCreateRoleRequest) GetPipelineUpdateOk() (*bool, bool) {
	if o == nil || IsNil(o.PipelineUpdate) {
		return nil, false
	}
	return o.PipelineUpdate, true
}

// HasPipelineUpdate returns a boolean if a field has been set.
func (o *RoutesCreateRoleRequest) HasPipelineUpdate() bool {
	if o != nil && !IsNil(o.PipelineUpdate) {
		return true
	}

	return false
}

// SetPipelineUpdate gets a reference to the given bool and assigns it to the PipelineUpdate field.
func (o *RoutesCreateRoleRequest) SetPipelineUpdate(v bool) {
	o.PipelineUpdate = &v
}

func (o RoutesCreateRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesCreateRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.PipelineCreate) {
		toSerialize["pipeline_create"] = o.PipelineCreate
	}
	if !IsNil(o.PipelineDelete) {
		toSerialize["pipeline_delete"] = o.PipelineDelete
	}
	if !IsNil(o.PipelineRead) {
		toSerialize["pipeline_read"] = o.PipelineRead
	}
	if !IsNil(o.PipelineUpdate) {
		toSerialize["pipeline_update"] = o.PipelineUpdate
	}
	return toSerialize, nil
}

func (o *RoutesCreateRoleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutesCreateRoleRequest := _RoutesCreateRoleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutesCreateRoleRequest)

	if err != nil {
		return err
	}

	*o = RoutesCreateRoleRequest(varRoutesCreateRoleRequest)

	return err
}

type NullableRoutesCreateRoleRequest struct {
	value *RoutesCreateRoleRequest
	isSet bool
}

func (v NullableRoutesCreateRoleRequest) Get() *RoutesCreateRoleRequest {
	return v.value
}

func (v *NullableRoutesCreateRoleRequest) Set(val *RoutesCreateRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesCreateRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesCreateRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesCreateRoleRequest(val *RoutesCreateRoleRequest) *NullableRoutesCreateRoleRequest {
	return &NullableRoutesCreateRoleRequest{value: val, isSet: true}
}

func (v NullableRoutesCreateRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesCreateRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


