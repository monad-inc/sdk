/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RolesInfoSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RolesInfoSettingsConfig{}

// RolesInfoSettingsConfig CrowdStrike EDR roles info settings
type RolesInfoSettingsConfig struct {
	// Your cloud type for CrowdStrike. Ex: 'autodiscover', 'us-1', 'us-2', 'eu-1', 'us-gov-1'.
	CloudType *string `json:"cloud_type,omitempty"`
	// Cron string for scheduling the ingest of your input
	Cron *string `json:"cron,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
}

// NewRolesInfoSettingsConfig instantiates a new RolesInfoSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRolesInfoSettingsConfig() *RolesInfoSettingsConfig {
	this := RolesInfoSettingsConfig{}
	return &this
}

// NewRolesInfoSettingsConfigWithDefaults instantiates a new RolesInfoSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRolesInfoSettingsConfigWithDefaults() *RolesInfoSettingsConfig {
	this := RolesInfoSettingsConfig{}
	return &this
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *RolesInfoSettingsConfig) GetCloudType() string {
	if o == nil || IsNil(o.CloudType) {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesInfoSettingsConfig) GetCloudTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CloudType) {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *RolesInfoSettingsConfig) HasCloudType() bool {
	if o != nil && !IsNil(o.CloudType) {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *RolesInfoSettingsConfig) SetCloudType(v string) {
	o.CloudType = &v
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *RolesInfoSettingsConfig) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesInfoSettingsConfig) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *RolesInfoSettingsConfig) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *RolesInfoSettingsConfig) SetCron(v string) {
	o.Cron = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *RolesInfoSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RolesInfoSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *RolesInfoSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *RolesInfoSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

func (o RolesInfoSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RolesInfoSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CloudType) {
		toSerialize["cloud_type"] = o.CloudType
	}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	return toSerialize, nil
}

type NullableRolesInfoSettingsConfig struct {
	value *RolesInfoSettingsConfig
	isSet bool
}

func (v NullableRolesInfoSettingsConfig) Get() *RolesInfoSettingsConfig {
	return v.value
}

func (v *NullableRolesInfoSettingsConfig) Set(val *RolesInfoSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRolesInfoSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRolesInfoSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRolesInfoSettingsConfig(val *RolesInfoSettingsConfig) *NullableRolesInfoSettingsConfig {
	return &NullableRolesInfoSettingsConfig{value: val, isSet: true}
}

func (v NullableRolesInfoSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRolesInfoSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


