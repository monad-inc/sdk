/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the CloudConfigurationFindingsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudConfigurationFindingsSettingsConfig{}

// CloudConfigurationFindingsSettingsConfig Wiz cloud configuration findings settings
type CloudConfigurationFindingsSettingsConfig struct {
	// Endpoint URL for the Wiz API. Ex: 'https://api.wiz.io/v1/cloud-configuration-findings'.
	EndpointUrl *string `json:"endpoint_url,omitempty"`
	// Result types for Wiz. Ex: 'PASSED', 'FAILED'.
	Result []string `json:"result,omitempty"`
	// Severity types for Wiz. Ex: 'CRITICAL', 'HIGH', 'MEDIUM', 'LOW', 'INFO'.
	Severity []string `json:"severity,omitempty"`
	// Status types for Wiz. Ex: 'OPEN', 'RESOLVED'.
	Status []string `json:"status,omitempty"`
}

// NewCloudConfigurationFindingsSettingsConfig instantiates a new CloudConfigurationFindingsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudConfigurationFindingsSettingsConfig() *CloudConfigurationFindingsSettingsConfig {
	this := CloudConfigurationFindingsSettingsConfig{}
	return &this
}

// NewCloudConfigurationFindingsSettingsConfigWithDefaults instantiates a new CloudConfigurationFindingsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudConfigurationFindingsSettingsConfigWithDefaults() *CloudConfigurationFindingsSettingsConfig {
	this := CloudConfigurationFindingsSettingsConfig{}
	return &this
}

// GetEndpointUrl returns the EndpointUrl field value if set, zero value otherwise.
func (o *CloudConfigurationFindingsSettingsConfig) GetEndpointUrl() string {
	if o == nil || IsNil(o.EndpointUrl) {
		var ret string
		return ret
	}
	return *o.EndpointUrl
}

// GetEndpointUrlOk returns a tuple with the EndpointUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudConfigurationFindingsSettingsConfig) GetEndpointUrlOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointUrl) {
		return nil, false
	}
	return o.EndpointUrl, true
}

// HasEndpointUrl returns a boolean if a field has been set.
func (o *CloudConfigurationFindingsSettingsConfig) HasEndpointUrl() bool {
	if o != nil && !IsNil(o.EndpointUrl) {
		return true
	}

	return false
}

// SetEndpointUrl gets a reference to the given string and assigns it to the EndpointUrl field.
func (o *CloudConfigurationFindingsSettingsConfig) SetEndpointUrl(v string) {
	o.EndpointUrl = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *CloudConfigurationFindingsSettingsConfig) GetResult() []string {
	if o == nil || IsNil(o.Result) {
		var ret []string
		return ret
	}
	return o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudConfigurationFindingsSettingsConfig) GetResultOk() ([]string, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *CloudConfigurationFindingsSettingsConfig) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given []string and assigns it to the Result field.
func (o *CloudConfigurationFindingsSettingsConfig) SetResult(v []string) {
	o.Result = v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *CloudConfigurationFindingsSettingsConfig) GetSeverity() []string {
	if o == nil || IsNil(o.Severity) {
		var ret []string
		return ret
	}
	return o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudConfigurationFindingsSettingsConfig) GetSeverityOk() ([]string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *CloudConfigurationFindingsSettingsConfig) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given []string and assigns it to the Severity field.
func (o *CloudConfigurationFindingsSettingsConfig) SetSeverity(v []string) {
	o.Severity = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CloudConfigurationFindingsSettingsConfig) GetStatus() []string {
	if o == nil || IsNil(o.Status) {
		var ret []string
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudConfigurationFindingsSettingsConfig) GetStatusOk() ([]string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CloudConfigurationFindingsSettingsConfig) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given []string and assigns it to the Status field.
func (o *CloudConfigurationFindingsSettingsConfig) SetStatus(v []string) {
	o.Status = v
}

func (o CloudConfigurationFindingsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudConfigurationFindingsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointUrl) {
		toSerialize["endpoint_url"] = o.EndpointUrl
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableCloudConfigurationFindingsSettingsConfig struct {
	value *CloudConfigurationFindingsSettingsConfig
	isSet bool
}

func (v NullableCloudConfigurationFindingsSettingsConfig) Get() *CloudConfigurationFindingsSettingsConfig {
	return v.value
}

func (v *NullableCloudConfigurationFindingsSettingsConfig) Set(val *CloudConfigurationFindingsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudConfigurationFindingsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudConfigurationFindingsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudConfigurationFindingsSettingsConfig(val *CloudConfigurationFindingsSettingsConfig) *NullableCloudConfigurationFindingsSettingsConfig {
	return &NullableCloudConfigurationFindingsSettingsConfig{value: val, isSet: true}
}

func (v NullableCloudConfigurationFindingsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudConfigurationFindingsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


