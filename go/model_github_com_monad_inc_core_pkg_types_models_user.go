/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the GithubComMonadIncCorePkgTypesModelsUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GithubComMonadIncCorePkgTypesModelsUser{}

// GithubComMonadIncCorePkgTypesModelsUser struct for GithubComMonadIncCorePkgTypesModelsUser
type GithubComMonadIncCorePkgTypesModelsUser struct {
	AuthProviders []ModelsUserAuthProvider `json:"auth_providers,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	Email *string `json:"email,omitempty"`
	Id *string `json:"id,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Username *string `json:"username,omitempty"`
}

// NewGithubComMonadIncCorePkgTypesModelsUser instantiates a new GithubComMonadIncCorePkgTypesModelsUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGithubComMonadIncCorePkgTypesModelsUser() *GithubComMonadIncCorePkgTypesModelsUser {
	this := GithubComMonadIncCorePkgTypesModelsUser{}
	return &this
}

// NewGithubComMonadIncCorePkgTypesModelsUserWithDefaults instantiates a new GithubComMonadIncCorePkgTypesModelsUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGithubComMonadIncCorePkgTypesModelsUserWithDefaults() *GithubComMonadIncCorePkgTypesModelsUser {
	this := GithubComMonadIncCorePkgTypesModelsUser{}
	return &this
}

// GetAuthProviders returns the AuthProviders field value if set, zero value otherwise.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetAuthProviders() []ModelsUserAuthProvider {
	if o == nil || IsNil(o.AuthProviders) {
		var ret []ModelsUserAuthProvider
		return ret
	}
	return o.AuthProviders
}

// GetAuthProvidersOk returns a tuple with the AuthProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetAuthProvidersOk() ([]ModelsUserAuthProvider, bool) {
	if o == nil || IsNil(o.AuthProviders) {
		return nil, false
	}
	return o.AuthProviders, true
}

// HasAuthProviders returns a boolean if a field has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) HasAuthProviders() bool {
	if o != nil && !IsNil(o.AuthProviders) {
		return true
	}

	return false
}

// SetAuthProviders gets a reference to the given []ModelsUserAuthProvider and assigns it to the AuthProviders field.
func (o *GithubComMonadIncCorePkgTypesModelsUser) SetAuthProviders(v []ModelsUserAuthProvider) {
	o.AuthProviders = v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *GithubComMonadIncCorePkgTypesModelsUser) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GithubComMonadIncCorePkgTypesModelsUser) SetEmail(v string) {
	o.Email = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *GithubComMonadIncCorePkgTypesModelsUser) SetId(v string) {
	o.Id = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *GithubComMonadIncCorePkgTypesModelsUser) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *GithubComMonadIncCorePkgTypesModelsUser) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *GithubComMonadIncCorePkgTypesModelsUser) SetUsername(v string) {
	o.Username = &v
}

func (o GithubComMonadIncCorePkgTypesModelsUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GithubComMonadIncCorePkgTypesModelsUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthProviders) {
		toSerialize["auth_providers"] = o.AuthProviders
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableGithubComMonadIncCorePkgTypesModelsUser struct {
	value *GithubComMonadIncCorePkgTypesModelsUser
	isSet bool
}

func (v NullableGithubComMonadIncCorePkgTypesModelsUser) Get() *GithubComMonadIncCorePkgTypesModelsUser {
	return v.value
}

func (v *NullableGithubComMonadIncCorePkgTypesModelsUser) Set(val *GithubComMonadIncCorePkgTypesModelsUser) {
	v.value = val
	v.isSet = true
}

func (v NullableGithubComMonadIncCorePkgTypesModelsUser) IsSet() bool {
	return v.isSet
}

func (v *NullableGithubComMonadIncCorePkgTypesModelsUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGithubComMonadIncCorePkgTypesModelsUser(val *GithubComMonadIncCorePkgTypesModelsUser) *NullableGithubComMonadIncCorePkgTypesModelsUser {
	return &NullableGithubComMonadIncCorePkgTypesModelsUser{value: val, isSet: true}
}

func (v NullableGithubComMonadIncCorePkgTypesModelsUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGithubComMonadIncCorePkgTypesModelsUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


