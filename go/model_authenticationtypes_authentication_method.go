/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the AuthenticationtypesAuthenticationMethod type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationtypesAuthenticationMethod{}

// AuthenticationtypesAuthenticationMethod struct for AuthenticationtypesAuthenticationMethod
type AuthenticationtypesAuthenticationMethod struct {
	Confirmed *bool `json:"confirmed,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CredentialBackedUp *bool `json:"credential_backed_up,omitempty"`
	CredentialDeviceType *string `json:"credential_device_type,omitempty"`
	Email *string `json:"email,omitempty"`
	Id *string `json:"id,omitempty"`
	KeyId *string `json:"key_id,omitempty"`
	LinkId *string `json:"link_id,omitempty"`
	Name *string `json:"name,omitempty"`
	PhoneNumber *string `json:"phone_number,omitempty"`
	PublicKey *string `json:"public_key,omitempty"`
	Type *string `json:"type,omitempty"`
	UserAgent *string `json:"user_agent,omitempty"`
}

// NewAuthenticationtypesAuthenticationMethod instantiates a new AuthenticationtypesAuthenticationMethod object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationtypesAuthenticationMethod() *AuthenticationtypesAuthenticationMethod {
	this := AuthenticationtypesAuthenticationMethod{}
	return &this
}

// NewAuthenticationtypesAuthenticationMethodWithDefaults instantiates a new AuthenticationtypesAuthenticationMethod object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationtypesAuthenticationMethodWithDefaults() *AuthenticationtypesAuthenticationMethod {
	this := AuthenticationtypesAuthenticationMethod{}
	return &this
}

// GetConfirmed returns the Confirmed field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetConfirmed() bool {
	if o == nil || IsNil(o.Confirmed) {
		var ret bool
		return ret
	}
	return *o.Confirmed
}

// GetConfirmedOk returns a tuple with the Confirmed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetConfirmedOk() (*bool, bool) {
	if o == nil || IsNil(o.Confirmed) {
		return nil, false
	}
	return o.Confirmed, true
}

// HasConfirmed returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasConfirmed() bool {
	if o != nil && !IsNil(o.Confirmed) {
		return true
	}

	return false
}

// SetConfirmed gets a reference to the given bool and assigns it to the Confirmed field.
func (o *AuthenticationtypesAuthenticationMethod) SetConfirmed(v bool) {
	o.Confirmed = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *AuthenticationtypesAuthenticationMethod) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCredentialBackedUp returns the CredentialBackedUp field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetCredentialBackedUp() bool {
	if o == nil || IsNil(o.CredentialBackedUp) {
		var ret bool
		return ret
	}
	return *o.CredentialBackedUp
}

// GetCredentialBackedUpOk returns a tuple with the CredentialBackedUp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetCredentialBackedUpOk() (*bool, bool) {
	if o == nil || IsNil(o.CredentialBackedUp) {
		return nil, false
	}
	return o.CredentialBackedUp, true
}

// HasCredentialBackedUp returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasCredentialBackedUp() bool {
	if o != nil && !IsNil(o.CredentialBackedUp) {
		return true
	}

	return false
}

// SetCredentialBackedUp gets a reference to the given bool and assigns it to the CredentialBackedUp field.
func (o *AuthenticationtypesAuthenticationMethod) SetCredentialBackedUp(v bool) {
	o.CredentialBackedUp = &v
}

// GetCredentialDeviceType returns the CredentialDeviceType field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetCredentialDeviceType() string {
	if o == nil || IsNil(o.CredentialDeviceType) {
		var ret string
		return ret
	}
	return *o.CredentialDeviceType
}

// GetCredentialDeviceTypeOk returns a tuple with the CredentialDeviceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetCredentialDeviceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialDeviceType) {
		return nil, false
	}
	return o.CredentialDeviceType, true
}

// HasCredentialDeviceType returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasCredentialDeviceType() bool {
	if o != nil && !IsNil(o.CredentialDeviceType) {
		return true
	}

	return false
}

// SetCredentialDeviceType gets a reference to the given string and assigns it to the CredentialDeviceType field.
func (o *AuthenticationtypesAuthenticationMethod) SetCredentialDeviceType(v string) {
	o.CredentialDeviceType = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *AuthenticationtypesAuthenticationMethod) SetEmail(v string) {
	o.Email = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *AuthenticationtypesAuthenticationMethod) SetId(v string) {
	o.Id = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetKeyId() string {
	if o == nil || IsNil(o.KeyId) {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetKeyIdOk() (*string, bool) {
	if o == nil || IsNil(o.KeyId) {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasKeyId() bool {
	if o != nil && !IsNil(o.KeyId) {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *AuthenticationtypesAuthenticationMethod) SetKeyId(v string) {
	o.KeyId = &v
}

// GetLinkId returns the LinkId field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetLinkId() string {
	if o == nil || IsNil(o.LinkId) {
		var ret string
		return ret
	}
	return *o.LinkId
}

// GetLinkIdOk returns a tuple with the LinkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetLinkIdOk() (*string, bool) {
	if o == nil || IsNil(o.LinkId) {
		return nil, false
	}
	return o.LinkId, true
}

// HasLinkId returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasLinkId() bool {
	if o != nil && !IsNil(o.LinkId) {
		return true
	}

	return false
}

// SetLinkId gets a reference to the given string and assigns it to the LinkId field.
func (o *AuthenticationtypesAuthenticationMethod) SetLinkId(v string) {
	o.LinkId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *AuthenticationtypesAuthenticationMethod) SetName(v string) {
	o.Name = &v
}

// GetPhoneNumber returns the PhoneNumber field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetPhoneNumber() string {
	if o == nil || IsNil(o.PhoneNumber) {
		var ret string
		return ret
	}
	return *o.PhoneNumber
}

// GetPhoneNumberOk returns a tuple with the PhoneNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetPhoneNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PhoneNumber) {
		return nil, false
	}
	return o.PhoneNumber, true
}

// HasPhoneNumber returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasPhoneNumber() bool {
	if o != nil && !IsNil(o.PhoneNumber) {
		return true
	}

	return false
}

// SetPhoneNumber gets a reference to the given string and assigns it to the PhoneNumber field.
func (o *AuthenticationtypesAuthenticationMethod) SetPhoneNumber(v string) {
	o.PhoneNumber = &v
}

// GetPublicKey returns the PublicKey field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetPublicKey() string {
	if o == nil || IsNil(o.PublicKey) {
		var ret string
		return ret
	}
	return *o.PublicKey
}

// GetPublicKeyOk returns a tuple with the PublicKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetPublicKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PublicKey) {
		return nil, false
	}
	return o.PublicKey, true
}

// HasPublicKey returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasPublicKey() bool {
	if o != nil && !IsNil(o.PublicKey) {
		return true
	}

	return false
}

// SetPublicKey gets a reference to the given string and assigns it to the PublicKey field.
func (o *AuthenticationtypesAuthenticationMethod) SetPublicKey(v string) {
	o.PublicKey = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *AuthenticationtypesAuthenticationMethod) SetType(v string) {
	o.Type = &v
}

// GetUserAgent returns the UserAgent field value if set, zero value otherwise.
func (o *AuthenticationtypesAuthenticationMethod) GetUserAgent() string {
	if o == nil || IsNil(o.UserAgent) {
		var ret string
		return ret
	}
	return *o.UserAgent
}

// GetUserAgentOk returns a tuple with the UserAgent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesAuthenticationMethod) GetUserAgentOk() (*string, bool) {
	if o == nil || IsNil(o.UserAgent) {
		return nil, false
	}
	return o.UserAgent, true
}

// HasUserAgent returns a boolean if a field has been set.
func (o *AuthenticationtypesAuthenticationMethod) HasUserAgent() bool {
	if o != nil && !IsNil(o.UserAgent) {
		return true
	}

	return false
}

// SetUserAgent gets a reference to the given string and assigns it to the UserAgent field.
func (o *AuthenticationtypesAuthenticationMethod) SetUserAgent(v string) {
	o.UserAgent = &v
}

func (o AuthenticationtypesAuthenticationMethod) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationtypesAuthenticationMethod) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Confirmed) {
		toSerialize["confirmed"] = o.Confirmed
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CredentialBackedUp) {
		toSerialize["credential_backed_up"] = o.CredentialBackedUp
	}
	if !IsNil(o.CredentialDeviceType) {
		toSerialize["credential_device_type"] = o.CredentialDeviceType
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.KeyId) {
		toSerialize["key_id"] = o.KeyId
	}
	if !IsNil(o.LinkId) {
		toSerialize["link_id"] = o.LinkId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.PhoneNumber) {
		toSerialize["phone_number"] = o.PhoneNumber
	}
	if !IsNil(o.PublicKey) {
		toSerialize["public_key"] = o.PublicKey
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.UserAgent) {
		toSerialize["user_agent"] = o.UserAgent
	}
	return toSerialize, nil
}

type NullableAuthenticationtypesAuthenticationMethod struct {
	value *AuthenticationtypesAuthenticationMethod
	isSet bool
}

func (v NullableAuthenticationtypesAuthenticationMethod) Get() *AuthenticationtypesAuthenticationMethod {
	return v.value
}

func (v *NullableAuthenticationtypesAuthenticationMethod) Set(val *AuthenticationtypesAuthenticationMethod) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationtypesAuthenticationMethod) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationtypesAuthenticationMethod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationtypesAuthenticationMethod(val *AuthenticationtypesAuthenticationMethod) *NullableAuthenticationtypesAuthenticationMethod {
	return &NullableAuthenticationtypesAuthenticationMethod{value: val, isSet: true}
}

func (v NullableAuthenticationtypesAuthenticationMethod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationtypesAuthenticationMethod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


