/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the AuthenticationtypesConnectionConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationtypesConnectionConfig{}

// AuthenticationtypesConnectionConfig Connection Config to be updated
type AuthenticationtypesConnectionConfig struct {
	Auth0 *AuthenticationtypesAuth0 `json:"auth0,omitempty"`
}

// NewAuthenticationtypesConnectionConfig instantiates a new AuthenticationtypesConnectionConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationtypesConnectionConfig() *AuthenticationtypesConnectionConfig {
	this := AuthenticationtypesConnectionConfig{}
	return &this
}

// NewAuthenticationtypesConnectionConfigWithDefaults instantiates a new AuthenticationtypesConnectionConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationtypesConnectionConfigWithDefaults() *AuthenticationtypesConnectionConfig {
	this := AuthenticationtypesConnectionConfig{}
	return &this
}

// GetAuth0 returns the Auth0 field value if set, zero value otherwise.
func (o *AuthenticationtypesConnectionConfig) GetAuth0() AuthenticationtypesAuth0 {
	if o == nil || IsNil(o.Auth0) {
		var ret AuthenticationtypesAuth0
		return ret
	}
	return *o.Auth0
}

// GetAuth0Ok returns a tuple with the Auth0 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationtypesConnectionConfig) GetAuth0Ok() (*AuthenticationtypesAuth0, bool) {
	if o == nil || IsNil(o.Auth0) {
		return nil, false
	}
	return o.Auth0, true
}

// HasAuth0 returns a boolean if a field has been set.
func (o *AuthenticationtypesConnectionConfig) HasAuth0() bool {
	if o != nil && !IsNil(o.Auth0) {
		return true
	}

	return false
}

// SetAuth0 gets a reference to the given AuthenticationtypesAuth0 and assigns it to the Auth0 field.
func (o *AuthenticationtypesConnectionConfig) SetAuth0(v AuthenticationtypesAuth0) {
	o.Auth0 = &v
}

func (o AuthenticationtypesConnectionConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationtypesConnectionConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Auth0) {
		toSerialize["auth0"] = o.Auth0
	}
	return toSerialize, nil
}

type NullableAuthenticationtypesConnectionConfig struct {
	value *AuthenticationtypesConnectionConfig
	isSet bool
}

func (v NullableAuthenticationtypesConnectionConfig) Get() *AuthenticationtypesConnectionConfig {
	return v.value
}

func (v *NullableAuthenticationtypesConnectionConfig) Set(val *AuthenticationtypesConnectionConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationtypesConnectionConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationtypesConnectionConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationtypesConnectionConfig(val *AuthenticationtypesConnectionConfig) *NullableAuthenticationtypesConnectionConfig {
	return &NullableAuthenticationtypesConnectionConfig{value: val, isSet: true}
}

func (v NullableAuthenticationtypesConnectionConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationtypesConnectionConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


