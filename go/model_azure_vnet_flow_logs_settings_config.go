/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the AzureVnetFlowLogsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureVnetFlowLogsSettingsConfig{}

// AzureVnetFlowLogsSettingsConfig Microsoft Azure Vnet Flow Logs settings
type AzureVnetFlowLogsSettingsConfig struct {
	Prefix *string `json:"prefix,omitempty"`
	// The Azure region where the virtual network is located
	Region *string `json:"region,omitempty"`
	// The name of the resource group containing the virtual network
	ResourceGroupName *string `json:"resource_group_name,omitempty"`
	// The Azure storage account URL where flow logs are stored
	StorageAccountUrl *string `json:"storage_account_url,omitempty"`
	// The Azure subscription ID where the virtual network and storage account are located
	SubscriptionId *string `json:"subscription_id,omitempty"`
	// The Azure Entra ID tenant (directory) ID.
	TenantId *string `json:"tenant_id,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
	// The name of the virtual network for which flow logs are being collected
	VirtualNetworkName *string `json:"virtual_network_name,omitempty"`
}

// NewAzureVnetFlowLogsSettingsConfig instantiates a new AzureVnetFlowLogsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureVnetFlowLogsSettingsConfig() *AzureVnetFlowLogsSettingsConfig {
	this := AzureVnetFlowLogsSettingsConfig{}
	return &this
}

// NewAzureVnetFlowLogsSettingsConfigWithDefaults instantiates a new AzureVnetFlowLogsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureVnetFlowLogsSettingsConfigWithDefaults() *AzureVnetFlowLogsSettingsConfig {
	this := AzureVnetFlowLogsSettingsConfig{}
	return &this
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *AzureVnetFlowLogsSettingsConfig) SetPrefix(v string) {
	o.Prefix = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AzureVnetFlowLogsSettingsConfig) SetRegion(v string) {
	o.Region = &v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetResourceGroupName() string {
	if o == nil || IsNil(o.ResourceGroupName) {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroupName) {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasResourceGroupName() bool {
	if o != nil && !IsNil(o.ResourceGroupName) {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *AzureVnetFlowLogsSettingsConfig) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

// GetStorageAccountUrl returns the StorageAccountUrl field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetStorageAccountUrl() string {
	if o == nil || IsNil(o.StorageAccountUrl) {
		var ret string
		return ret
	}
	return *o.StorageAccountUrl
}

// GetStorageAccountUrlOk returns a tuple with the StorageAccountUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetStorageAccountUrlOk() (*string, bool) {
	if o == nil || IsNil(o.StorageAccountUrl) {
		return nil, false
	}
	return o.StorageAccountUrl, true
}

// HasStorageAccountUrl returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasStorageAccountUrl() bool {
	if o != nil && !IsNil(o.StorageAccountUrl) {
		return true
	}

	return false
}

// SetStorageAccountUrl gets a reference to the given string and assigns it to the StorageAccountUrl field.
func (o *AzureVnetFlowLogsSettingsConfig) SetStorageAccountUrl(v string) {
	o.StorageAccountUrl = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *AzureVnetFlowLogsSettingsConfig) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AzureVnetFlowLogsSettingsConfig) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *AzureVnetFlowLogsSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

// GetVirtualNetworkName returns the VirtualNetworkName field value if set, zero value otherwise.
func (o *AzureVnetFlowLogsSettingsConfig) GetVirtualNetworkName() string {
	if o == nil || IsNil(o.VirtualNetworkName) {
		var ret string
		return ret
	}
	return *o.VirtualNetworkName
}

// GetVirtualNetworkNameOk returns a tuple with the VirtualNetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureVnetFlowLogsSettingsConfig) GetVirtualNetworkNameOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualNetworkName) {
		return nil, false
	}
	return o.VirtualNetworkName, true
}

// HasVirtualNetworkName returns a boolean if a field has been set.
func (o *AzureVnetFlowLogsSettingsConfig) HasVirtualNetworkName() bool {
	if o != nil && !IsNil(o.VirtualNetworkName) {
		return true
	}

	return false
}

// SetVirtualNetworkName gets a reference to the given string and assigns it to the VirtualNetworkName field.
func (o *AzureVnetFlowLogsSettingsConfig) SetVirtualNetworkName(v string) {
	o.VirtualNetworkName = &v
}

func (o AzureVnetFlowLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureVnetFlowLogsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Prefix) {
		toSerialize["prefix"] = o.Prefix
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.ResourceGroupName) {
		toSerialize["resource_group_name"] = o.ResourceGroupName
	}
	if !IsNil(o.StorageAccountUrl) {
		toSerialize["storage_account_url"] = o.StorageAccountUrl
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	if !IsNil(o.VirtualNetworkName) {
		toSerialize["virtual_network_name"] = o.VirtualNetworkName
	}
	return toSerialize, nil
}

type NullableAzureVnetFlowLogsSettingsConfig struct {
	value *AzureVnetFlowLogsSettingsConfig
	isSet bool
}

func (v NullableAzureVnetFlowLogsSettingsConfig) Get() *AzureVnetFlowLogsSettingsConfig {
	return v.value
}

func (v *NullableAzureVnetFlowLogsSettingsConfig) Set(val *AzureVnetFlowLogsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureVnetFlowLogsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureVnetFlowLogsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureVnetFlowLogsSettingsConfig(val *AzureVnetFlowLogsSettingsConfig) *NullableAzureVnetFlowLogsSettingsConfig {
	return &NullableAzureVnetFlowLogsSettingsConfig{value: val, isSet: true}
}

func (v NullableAzureVnetFlowLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureVnetFlowLogsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


