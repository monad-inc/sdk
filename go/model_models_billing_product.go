/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsBillingProduct type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsBillingProduct{}

// ModelsBillingProduct struct for ModelsBillingProduct
type ModelsBillingProduct struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	Features []string `json:"features,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	RecurringCostCents *int32 `json:"recurring_cost_cents,omitempty"`
	RecurringFrequency *string `json:"recurring_frequency,omitempty"`
	Slug *string `json:"slug,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	UsageUnit *string `json:"usage_unit,omitempty"`
	UsageUnitCostCents *int32 `json:"usage_unit_cost_cents,omitempty"`
}

// NewModelsBillingProduct instantiates a new ModelsBillingProduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsBillingProduct() *ModelsBillingProduct {
	this := ModelsBillingProduct{}
	return &this
}

// NewModelsBillingProductWithDefaults instantiates a new ModelsBillingProduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsBillingProductWithDefaults() *ModelsBillingProduct {
	this := ModelsBillingProduct{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsBillingProduct) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsBillingProduct) SetDescription(v string) {
	o.Description = &v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetFeatures() []string {
	if o == nil || IsNil(o.Features) {
		var ret []string
		return ret
	}
	return o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetFeaturesOk() ([]string, bool) {
	if o == nil || IsNil(o.Features) {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasFeatures() bool {
	if o != nil && !IsNil(o.Features) {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given []string and assigns it to the Features field.
func (o *ModelsBillingProduct) SetFeatures(v []string) {
	o.Features = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsBillingProduct) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsBillingProduct) SetName(v string) {
	o.Name = &v
}

// GetRecurringCostCents returns the RecurringCostCents field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetRecurringCostCents() int32 {
	if o == nil || IsNil(o.RecurringCostCents) {
		var ret int32
		return ret
	}
	return *o.RecurringCostCents
}

// GetRecurringCostCentsOk returns a tuple with the RecurringCostCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetRecurringCostCentsOk() (*int32, bool) {
	if o == nil || IsNil(o.RecurringCostCents) {
		return nil, false
	}
	return o.RecurringCostCents, true
}

// HasRecurringCostCents returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasRecurringCostCents() bool {
	if o != nil && !IsNil(o.RecurringCostCents) {
		return true
	}

	return false
}

// SetRecurringCostCents gets a reference to the given int32 and assigns it to the RecurringCostCents field.
func (o *ModelsBillingProduct) SetRecurringCostCents(v int32) {
	o.RecurringCostCents = &v
}

// GetRecurringFrequency returns the RecurringFrequency field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetRecurringFrequency() string {
	if o == nil || IsNil(o.RecurringFrequency) {
		var ret string
		return ret
	}
	return *o.RecurringFrequency
}

// GetRecurringFrequencyOk returns a tuple with the RecurringFrequency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetRecurringFrequencyOk() (*string, bool) {
	if o == nil || IsNil(o.RecurringFrequency) {
		return nil, false
	}
	return o.RecurringFrequency, true
}

// HasRecurringFrequency returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasRecurringFrequency() bool {
	if o != nil && !IsNil(o.RecurringFrequency) {
		return true
	}

	return false
}

// SetRecurringFrequency gets a reference to the given string and assigns it to the RecurringFrequency field.
func (o *ModelsBillingProduct) SetRecurringFrequency(v string) {
	o.RecurringFrequency = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *ModelsBillingProduct) SetSlug(v string) {
	o.Slug = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsBillingProduct) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetUsageUnit returns the UsageUnit field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetUsageUnit() string {
	if o == nil || IsNil(o.UsageUnit) {
		var ret string
		return ret
	}
	return *o.UsageUnit
}

// GetUsageUnitOk returns a tuple with the UsageUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetUsageUnitOk() (*string, bool) {
	if o == nil || IsNil(o.UsageUnit) {
		return nil, false
	}
	return o.UsageUnit, true
}

// HasUsageUnit returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasUsageUnit() bool {
	if o != nil && !IsNil(o.UsageUnit) {
		return true
	}

	return false
}

// SetUsageUnit gets a reference to the given string and assigns it to the UsageUnit field.
func (o *ModelsBillingProduct) SetUsageUnit(v string) {
	o.UsageUnit = &v
}

// GetUsageUnitCostCents returns the UsageUnitCostCents field value if set, zero value otherwise.
func (o *ModelsBillingProduct) GetUsageUnitCostCents() int32 {
	if o == nil || IsNil(o.UsageUnitCostCents) {
		var ret int32
		return ret
	}
	return *o.UsageUnitCostCents
}

// GetUsageUnitCostCentsOk returns a tuple with the UsageUnitCostCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsBillingProduct) GetUsageUnitCostCentsOk() (*int32, bool) {
	if o == nil || IsNil(o.UsageUnitCostCents) {
		return nil, false
	}
	return o.UsageUnitCostCents, true
}

// HasUsageUnitCostCents returns a boolean if a field has been set.
func (o *ModelsBillingProduct) HasUsageUnitCostCents() bool {
	if o != nil && !IsNil(o.UsageUnitCostCents) {
		return true
	}

	return false
}

// SetUsageUnitCostCents gets a reference to the given int32 and assigns it to the UsageUnitCostCents field.
func (o *ModelsBillingProduct) SetUsageUnitCostCents(v int32) {
	o.UsageUnitCostCents = &v
}

func (o ModelsBillingProduct) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsBillingProduct) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Features) {
		toSerialize["features"] = o.Features
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RecurringCostCents) {
		toSerialize["recurring_cost_cents"] = o.RecurringCostCents
	}
	if !IsNil(o.RecurringFrequency) {
		toSerialize["recurring_frequency"] = o.RecurringFrequency
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.UsageUnit) {
		toSerialize["usage_unit"] = o.UsageUnit
	}
	if !IsNil(o.UsageUnitCostCents) {
		toSerialize["usage_unit_cost_cents"] = o.UsageUnitCostCents
	}
	return toSerialize, nil
}

type NullableModelsBillingProduct struct {
	value *ModelsBillingProduct
	isSet bool
}

func (v NullableModelsBillingProduct) Get() *ModelsBillingProduct {
	return v.value
}

func (v *NullableModelsBillingProduct) Set(val *ModelsBillingProduct) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsBillingProduct) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsBillingProduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsBillingProduct(val *ModelsBillingProduct) *NullableModelsBillingProduct {
	return &NullableModelsBillingProduct{value: val, isSet: true}
}

func (v NullableModelsBillingProduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsBillingProduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


