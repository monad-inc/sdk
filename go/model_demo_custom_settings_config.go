/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the DemoCustomSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DemoCustomSettingsConfig{}

// DemoCustomSettingsConfig Demo Custom settings
type DemoCustomSettingsConfig struct {
	// A custom template using the functions we provide to generate demo data
	CustomTemplate *string `json:"custom_template,omitempty"`
	// The rate at which to generate records (between 1 and 1000) per second
	Rate *int32 `json:"rate,omitempty"`
}

// NewDemoCustomSettingsConfig instantiates a new DemoCustomSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDemoCustomSettingsConfig() *DemoCustomSettingsConfig {
	this := DemoCustomSettingsConfig{}
	return &this
}

// NewDemoCustomSettingsConfigWithDefaults instantiates a new DemoCustomSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDemoCustomSettingsConfigWithDefaults() *DemoCustomSettingsConfig {
	this := DemoCustomSettingsConfig{}
	return &this
}

// GetCustomTemplate returns the CustomTemplate field value if set, zero value otherwise.
func (o *DemoCustomSettingsConfig) GetCustomTemplate() string {
	if o == nil || IsNil(o.CustomTemplate) {
		var ret string
		return ret
	}
	return *o.CustomTemplate
}

// GetCustomTemplateOk returns a tuple with the CustomTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoCustomSettingsConfig) GetCustomTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.CustomTemplate) {
		return nil, false
	}
	return o.CustomTemplate, true
}

// HasCustomTemplate returns a boolean if a field has been set.
func (o *DemoCustomSettingsConfig) HasCustomTemplate() bool {
	if o != nil && !IsNil(o.CustomTemplate) {
		return true
	}

	return false
}

// SetCustomTemplate gets a reference to the given string and assigns it to the CustomTemplate field.
func (o *DemoCustomSettingsConfig) SetCustomTemplate(v string) {
	o.CustomTemplate = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *DemoCustomSettingsConfig) GetRate() int32 {
	if o == nil || IsNil(o.Rate) {
		var ret int32
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DemoCustomSettingsConfig) GetRateOk() (*int32, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *DemoCustomSettingsConfig) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given int32 and assigns it to the Rate field.
func (o *DemoCustomSettingsConfig) SetRate(v int32) {
	o.Rate = &v
}

func (o DemoCustomSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DemoCustomSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CustomTemplate) {
		toSerialize["custom_template"] = o.CustomTemplate
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	return toSerialize, nil
}

type NullableDemoCustomSettingsConfig struct {
	value *DemoCustomSettingsConfig
	isSet bool
}

func (v NullableDemoCustomSettingsConfig) Get() *DemoCustomSettingsConfig {
	return v.value
}

func (v *NullableDemoCustomSettingsConfig) Set(val *DemoCustomSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDemoCustomSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDemoCustomSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDemoCustomSettingsConfig(val *DemoCustomSettingsConfig) *NullableDemoCustomSettingsConfig {
	return &NullableDemoCustomSettingsConfig{value: val, isSet: true}
}

func (v NullableDemoCustomSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDemoCustomSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


