/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV2GenerateRecordResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2GenerateRecordResponse{}

// RoutesV2GenerateRecordResponse struct for RoutesV2GenerateRecordResponse
type RoutesV2GenerateRecordResponse struct {
	Record []int32 `json:"record,omitempty"`
}

// NewRoutesV2GenerateRecordResponse instantiates a new RoutesV2GenerateRecordResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2GenerateRecordResponse() *RoutesV2GenerateRecordResponse {
	this := RoutesV2GenerateRecordResponse{}
	return &this
}

// NewRoutesV2GenerateRecordResponseWithDefaults instantiates a new RoutesV2GenerateRecordResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2GenerateRecordResponseWithDefaults() *RoutesV2GenerateRecordResponse {
	this := RoutesV2GenerateRecordResponse{}
	return &this
}

// GetRecord returns the Record field value if set, zero value otherwise.
func (o *RoutesV2GenerateRecordResponse) GetRecord() []int32 {
	if o == nil || IsNil(o.Record) {
		var ret []int32
		return ret
	}
	return o.Record
}

// GetRecordOk returns a tuple with the Record field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2GenerateRecordResponse) GetRecordOk() ([]int32, bool) {
	if o == nil || IsNil(o.Record) {
		return nil, false
	}
	return o.Record, true
}

// HasRecord returns a boolean if a field has been set.
func (o *RoutesV2GenerateRecordResponse) HasRecord() bool {
	if o != nil && !IsNil(o.Record) {
		return true
	}

	return false
}

// SetRecord gets a reference to the given []int32 and assigns it to the Record field.
func (o *RoutesV2GenerateRecordResponse) SetRecord(v []int32) {
	o.Record = v
}

func (o RoutesV2GenerateRecordResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2GenerateRecordResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Record) {
		toSerialize["record"] = o.Record
	}
	return toSerialize, nil
}

type NullableRoutesV2GenerateRecordResponse struct {
	value *RoutesV2GenerateRecordResponse
	isSet bool
}

func (v NullableRoutesV2GenerateRecordResponse) Get() *RoutesV2GenerateRecordResponse {
	return v.value
}

func (v *NullableRoutesV2GenerateRecordResponse) Set(val *RoutesV2GenerateRecordResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2GenerateRecordResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2GenerateRecordResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2GenerateRecordResponse(val *RoutesV2GenerateRecordResponse) *NullableRoutesV2GenerateRecordResponse {
	return &NullableRoutesV2GenerateRecordResponse{value: val, isSet: true}
}

func (v NullableRoutesV2GenerateRecordResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2GenerateRecordResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


