/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the SystemlogSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SystemlogSettingsConfig{}

// SystemlogSettingsConfig Okta system log settings
type SystemlogSettingsConfig struct {
	// The URL of the Okta organization
	OrgUrl *string `json:"org_url,omitempty"`
}

// NewSystemlogSettingsConfig instantiates a new SystemlogSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSystemlogSettingsConfig() *SystemlogSettingsConfig {
	this := SystemlogSettingsConfig{}
	return &this
}

// NewSystemlogSettingsConfigWithDefaults instantiates a new SystemlogSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSystemlogSettingsConfigWithDefaults() *SystemlogSettingsConfig {
	this := SystemlogSettingsConfig{}
	return &this
}

// GetOrgUrl returns the OrgUrl field value if set, zero value otherwise.
func (o *SystemlogSettingsConfig) GetOrgUrl() string {
	if o == nil || IsNil(o.OrgUrl) {
		var ret string
		return ret
	}
	return *o.OrgUrl
}

// GetOrgUrlOk returns a tuple with the OrgUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SystemlogSettingsConfig) GetOrgUrlOk() (*string, bool) {
	if o == nil || IsNil(o.OrgUrl) {
		return nil, false
	}
	return o.OrgUrl, true
}

// HasOrgUrl returns a boolean if a field has been set.
func (o *SystemlogSettingsConfig) HasOrgUrl() bool {
	if o != nil && !IsNil(o.OrgUrl) {
		return true
	}

	return false
}

// SetOrgUrl gets a reference to the given string and assigns it to the OrgUrl field.
func (o *SystemlogSettingsConfig) SetOrgUrl(v string) {
	o.OrgUrl = &v
}

func (o SystemlogSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SystemlogSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgUrl) {
		toSerialize["org_url"] = o.OrgUrl
	}
	return toSerialize, nil
}

type NullableSystemlogSettingsConfig struct {
	value *SystemlogSettingsConfig
	isSet bool
}

func (v NullableSystemlogSettingsConfig) Get() *SystemlogSettingsConfig {
	return v.value
}

func (v *NullableSystemlogSettingsConfig) Set(val *SystemlogSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSystemlogSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSystemlogSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSystemlogSettingsConfig(val *SystemlogSettingsConfig) *NullableSystemlogSettingsConfig {
	return &NullableSystemlogSettingsConfig{value: val, isSet: true}
}

func (v NullableSystemlogSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSystemlogSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


