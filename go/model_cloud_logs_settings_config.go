/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the CloudLogsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CloudLogsSettingsConfig{}

// CloudLogsSettingsConfig Google Cloud Logs settings
type CloudLogsSettingsConfig struct {
	// Enables automatic parsing of embedded protocol buffer payloads within the input.
	EnableProtoPayloadParsing *bool `json:"enable_proto_payload_parsing,omitempty"`
	// The filter to apply to the logs.
	Filter *string `json:"filter,omitempty"`
	// The resources to query logs from.
	ResourceNames []string `json:"resource_names,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
}

// NewCloudLogsSettingsConfig instantiates a new CloudLogsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloudLogsSettingsConfig() *CloudLogsSettingsConfig {
	this := CloudLogsSettingsConfig{}
	return &this
}

// NewCloudLogsSettingsConfigWithDefaults instantiates a new CloudLogsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloudLogsSettingsConfigWithDefaults() *CloudLogsSettingsConfig {
	this := CloudLogsSettingsConfig{}
	return &this
}

// GetEnableProtoPayloadParsing returns the EnableProtoPayloadParsing field value if set, zero value otherwise.
func (o *CloudLogsSettingsConfig) GetEnableProtoPayloadParsing() bool {
	if o == nil || IsNil(o.EnableProtoPayloadParsing) {
		var ret bool
		return ret
	}
	return *o.EnableProtoPayloadParsing
}

// GetEnableProtoPayloadParsingOk returns a tuple with the EnableProtoPayloadParsing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLogsSettingsConfig) GetEnableProtoPayloadParsingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnableProtoPayloadParsing) {
		return nil, false
	}
	return o.EnableProtoPayloadParsing, true
}

// HasEnableProtoPayloadParsing returns a boolean if a field has been set.
func (o *CloudLogsSettingsConfig) HasEnableProtoPayloadParsing() bool {
	if o != nil && !IsNil(o.EnableProtoPayloadParsing) {
		return true
	}

	return false
}

// SetEnableProtoPayloadParsing gets a reference to the given bool and assigns it to the EnableProtoPayloadParsing field.
func (o *CloudLogsSettingsConfig) SetEnableProtoPayloadParsing(v bool) {
	o.EnableProtoPayloadParsing = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *CloudLogsSettingsConfig) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLogsSettingsConfig) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *CloudLogsSettingsConfig) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *CloudLogsSettingsConfig) SetFilter(v string) {
	o.Filter = &v
}

// GetResourceNames returns the ResourceNames field value if set, zero value otherwise.
func (o *CloudLogsSettingsConfig) GetResourceNames() []string {
	if o == nil || IsNil(o.ResourceNames) {
		var ret []string
		return ret
	}
	return o.ResourceNames
}

// GetResourceNamesOk returns a tuple with the ResourceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLogsSettingsConfig) GetResourceNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourceNames) {
		return nil, false
	}
	return o.ResourceNames, true
}

// HasResourceNames returns a boolean if a field has been set.
func (o *CloudLogsSettingsConfig) HasResourceNames() bool {
	if o != nil && !IsNil(o.ResourceNames) {
		return true
	}

	return false
}

// SetResourceNames gets a reference to the given []string and assigns it to the ResourceNames field.
func (o *CloudLogsSettingsConfig) SetResourceNames(v []string) {
	o.ResourceNames = v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *CloudLogsSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CloudLogsSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *CloudLogsSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *CloudLogsSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

func (o CloudLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CloudLogsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnableProtoPayloadParsing) {
		toSerialize["enable_proto_payload_parsing"] = o.EnableProtoPayloadParsing
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.ResourceNames) {
		toSerialize["resource_names"] = o.ResourceNames
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	return toSerialize, nil
}

type NullableCloudLogsSettingsConfig struct {
	value *CloudLogsSettingsConfig
	isSet bool
}

func (v NullableCloudLogsSettingsConfig) Get() *CloudLogsSettingsConfig {
	return v.value
}

func (v *NullableCloudLogsSettingsConfig) Set(val *CloudLogsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCloudLogsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCloudLogsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloudLogsSettingsConfig(val *CloudLogsSettingsConfig) *NullableCloudLogsSettingsConfig {
	return &NullableCloudLogsSettingsConfig{value: val, isSet: true}
}

func (v NullableCloudLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloudLogsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


