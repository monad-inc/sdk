/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV3GetFeatureFlagResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV3GetFeatureFlagResponse{}

// RoutesV3GetFeatureFlagResponse struct for RoutesV3GetFeatureFlagResponse
type RoutesV3GetFeatureFlagResponse struct {
	User []FlagsmithFlag `json:"user,omitempty"`
}

// NewRoutesV3GetFeatureFlagResponse instantiates a new RoutesV3GetFeatureFlagResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV3GetFeatureFlagResponse() *RoutesV3GetFeatureFlagResponse {
	this := RoutesV3GetFeatureFlagResponse{}
	return &this
}

// NewRoutesV3GetFeatureFlagResponseWithDefaults instantiates a new RoutesV3GetFeatureFlagResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV3GetFeatureFlagResponseWithDefaults() *RoutesV3GetFeatureFlagResponse {
	this := RoutesV3GetFeatureFlagResponse{}
	return &this
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *RoutesV3GetFeatureFlagResponse) GetUser() []FlagsmithFlag {
	if o == nil || IsNil(o.User) {
		var ret []FlagsmithFlag
		return ret
	}
	return o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV3GetFeatureFlagResponse) GetUserOk() ([]FlagsmithFlag, bool) {
	if o == nil || IsNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *RoutesV3GetFeatureFlagResponse) HasUser() bool {
	if o != nil && !IsNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given []FlagsmithFlag and assigns it to the User field.
func (o *RoutesV3GetFeatureFlagResponse) SetUser(v []FlagsmithFlag) {
	o.User = v
}

func (o RoutesV3GetFeatureFlagResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV3GetFeatureFlagResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableRoutesV3GetFeatureFlagResponse struct {
	value *RoutesV3GetFeatureFlagResponse
	isSet bool
}

func (v NullableRoutesV3GetFeatureFlagResponse) Get() *RoutesV3GetFeatureFlagResponse {
	return v.value
}

func (v *NullableRoutesV3GetFeatureFlagResponse) Set(val *RoutesV3GetFeatureFlagResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV3GetFeatureFlagResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV3GetFeatureFlagResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV3GetFeatureFlagResponse(val *RoutesV3GetFeatureFlagResponse) *NullableRoutesV3GetFeatureFlagResponse {
	return &NullableRoutesV3GetFeatureFlagResponse{value: val, isSet: true}
}

func (v NullableRoutesV3GetFeatureFlagResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV3GetFeatureFlagResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


