/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the EventsSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventsSecretsConfig{}

// EventsSecretsConfig Twilio Events secrets
type EventsSecretsConfig struct {
	TwilioAccountSid *ModelsSecret `json:"twilio_account_sid,omitempty"`
	TwilioAuthToken *ModelsSecret `json:"twilio_auth_token,omitempty"`
}

// NewEventsSecretsConfig instantiates a new EventsSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsSecretsConfig() *EventsSecretsConfig {
	this := EventsSecretsConfig{}
	return &this
}

// NewEventsSecretsConfigWithDefaults instantiates a new EventsSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsSecretsConfigWithDefaults() *EventsSecretsConfig {
	this := EventsSecretsConfig{}
	return &this
}

// GetTwilioAccountSid returns the TwilioAccountSid field value if set, zero value otherwise.
func (o *EventsSecretsConfig) GetTwilioAccountSid() ModelsSecret {
	if o == nil || IsNil(o.TwilioAccountSid) {
		var ret ModelsSecret
		return ret
	}
	return *o.TwilioAccountSid
}

// GetTwilioAccountSidOk returns a tuple with the TwilioAccountSid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsSecretsConfig) GetTwilioAccountSidOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.TwilioAccountSid) {
		return nil, false
	}
	return o.TwilioAccountSid, true
}

// HasTwilioAccountSid returns a boolean if a field has been set.
func (o *EventsSecretsConfig) HasTwilioAccountSid() bool {
	if o != nil && !IsNil(o.TwilioAccountSid) {
		return true
	}

	return false
}

// SetTwilioAccountSid gets a reference to the given ModelsSecret and assigns it to the TwilioAccountSid field.
func (o *EventsSecretsConfig) SetTwilioAccountSid(v ModelsSecret) {
	o.TwilioAccountSid = &v
}

// GetTwilioAuthToken returns the TwilioAuthToken field value if set, zero value otherwise.
func (o *EventsSecretsConfig) GetTwilioAuthToken() ModelsSecret {
	if o == nil || IsNil(o.TwilioAuthToken) {
		var ret ModelsSecret
		return ret
	}
	return *o.TwilioAuthToken
}

// GetTwilioAuthTokenOk returns a tuple with the TwilioAuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsSecretsConfig) GetTwilioAuthTokenOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.TwilioAuthToken) {
		return nil, false
	}
	return o.TwilioAuthToken, true
}

// HasTwilioAuthToken returns a boolean if a field has been set.
func (o *EventsSecretsConfig) HasTwilioAuthToken() bool {
	if o != nil && !IsNil(o.TwilioAuthToken) {
		return true
	}

	return false
}

// SetTwilioAuthToken gets a reference to the given ModelsSecret and assigns it to the TwilioAuthToken field.
func (o *EventsSecretsConfig) SetTwilioAuthToken(v ModelsSecret) {
	o.TwilioAuthToken = &v
}

func (o EventsSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventsSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TwilioAccountSid) {
		toSerialize["twilio_account_sid"] = o.TwilioAccountSid
	}
	if !IsNil(o.TwilioAuthToken) {
		toSerialize["twilio_auth_token"] = o.TwilioAuthToken
	}
	return toSerialize, nil
}

type NullableEventsSecretsConfig struct {
	value *EventsSecretsConfig
	isSet bool
}

func (v NullableEventsSecretsConfig) Get() *EventsSecretsConfig {
	return v.value
}

func (v *NullableEventsSecretsConfig) Set(val *EventsSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsSecretsConfig(val *EventsSecretsConfig) *NullableEventsSecretsConfig {
	return &NullableEventsSecretsConfig{value: val, isSet: true}
}

func (v NullableEventsSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


