/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the CriblHttpSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CriblHttpSecretsConfig{}

// CriblHttpSecretsConfig Cribl HTTP Output Secrets
type CriblHttpSecretsConfig struct {
	// The authentication token value you've set for your HTTP Source. This token is used to authenticate requests to your Cribl endpoint.
	AuthToken *string `json:"auth_token,omitempty"`
}

// NewCriblHttpSecretsConfig instantiates a new CriblHttpSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCriblHttpSecretsConfig() *CriblHttpSecretsConfig {
	this := CriblHttpSecretsConfig{}
	return &this
}

// NewCriblHttpSecretsConfigWithDefaults instantiates a new CriblHttpSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCriblHttpSecretsConfigWithDefaults() *CriblHttpSecretsConfig {
	this := CriblHttpSecretsConfig{}
	return &this
}

// GetAuthToken returns the AuthToken field value if set, zero value otherwise.
func (o *CriblHttpSecretsConfig) GetAuthToken() string {
	if o == nil || IsNil(o.AuthToken) {
		var ret string
		return ret
	}
	return *o.AuthToken
}

// GetAuthTokenOk returns a tuple with the AuthToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CriblHttpSecretsConfig) GetAuthTokenOk() (*string, bool) {
	if o == nil || IsNil(o.AuthToken) {
		return nil, false
	}
	return o.AuthToken, true
}

// HasAuthToken returns a boolean if a field has been set.
func (o *CriblHttpSecretsConfig) HasAuthToken() bool {
	if o != nil && !IsNil(o.AuthToken) {
		return true
	}

	return false
}

// SetAuthToken gets a reference to the given string and assigns it to the AuthToken field.
func (o *CriblHttpSecretsConfig) SetAuthToken(v string) {
	o.AuthToken = &v
}

func (o CriblHttpSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CriblHttpSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthToken) {
		toSerialize["auth_token"] = o.AuthToken
	}
	return toSerialize, nil
}

type NullableCriblHttpSecretsConfig struct {
	value *CriblHttpSecretsConfig
	isSet bool
}

func (v NullableCriblHttpSecretsConfig) Get() *CriblHttpSecretsConfig {
	return v.value
}

func (v *NullableCriblHttpSecretsConfig) Set(val *CriblHttpSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCriblHttpSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCriblHttpSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCriblHttpSecretsConfig(val *CriblHttpSecretsConfig) *NullableCriblHttpSecretsConfig {
	return &NullableCriblHttpSecretsConfig{value: val, isSet: true}
}

func (v NullableCriblHttpSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCriblHttpSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


