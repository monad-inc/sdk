/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsOrganizationList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsOrganizationList{}

// ModelsOrganizationList struct for ModelsOrganizationList
type ModelsOrganizationList struct {
	Organizations []GithubComMonadIncCorePkgTypesModelsOrganization `json:"organizations,omitempty"`
	Pagination *ModelsPagination `json:"pagination,omitempty"`
}

// NewModelsOrganizationList instantiates a new ModelsOrganizationList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsOrganizationList() *ModelsOrganizationList {
	this := ModelsOrganizationList{}
	return &this
}

// NewModelsOrganizationListWithDefaults instantiates a new ModelsOrganizationList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsOrganizationListWithDefaults() *ModelsOrganizationList {
	this := ModelsOrganizationList{}
	return &this
}

// GetOrganizations returns the Organizations field value if set, zero value otherwise.
func (o *ModelsOrganizationList) GetOrganizations() []GithubComMonadIncCorePkgTypesModelsOrganization {
	if o == nil || IsNil(o.Organizations) {
		var ret []GithubComMonadIncCorePkgTypesModelsOrganization
		return ret
	}
	return o.Organizations
}

// GetOrganizationsOk returns a tuple with the Organizations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrganizationList) GetOrganizationsOk() ([]GithubComMonadIncCorePkgTypesModelsOrganization, bool) {
	if o == nil || IsNil(o.Organizations) {
		return nil, false
	}
	return o.Organizations, true
}

// HasOrganizations returns a boolean if a field has been set.
func (o *ModelsOrganizationList) HasOrganizations() bool {
	if o != nil && !IsNil(o.Organizations) {
		return true
	}

	return false
}

// SetOrganizations gets a reference to the given []GithubComMonadIncCorePkgTypesModelsOrganization and assigns it to the Organizations field.
func (o *ModelsOrganizationList) SetOrganizations(v []GithubComMonadIncCorePkgTypesModelsOrganization) {
	o.Organizations = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ModelsOrganizationList) GetPagination() ModelsPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ModelsPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsOrganizationList) GetPaginationOk() (*ModelsPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ModelsOrganizationList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ModelsPagination and assigns it to the Pagination field.
func (o *ModelsOrganizationList) SetPagination(v ModelsPagination) {
	o.Pagination = &v
}

func (o ModelsOrganizationList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsOrganizationList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Organizations) {
		toSerialize["organizations"] = o.Organizations
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableModelsOrganizationList struct {
	value *ModelsOrganizationList
	isSet bool
}

func (v NullableModelsOrganizationList) Get() *ModelsOrganizationList {
	return v.value
}

func (v *NullableModelsOrganizationList) Set(val *ModelsOrganizationList) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsOrganizationList) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsOrganizationList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsOrganizationList(val *ModelsOrganizationList) *NullableModelsOrganizationList {
	return &NullableModelsOrganizationList{value: val, isSet: true}
}

func (v NullableModelsOrganizationList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsOrganizationList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


