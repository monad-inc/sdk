/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV3MFAStatusResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV3MFAStatusResponse{}

// RoutesV3MFAStatusResponse struct for RoutesV3MFAStatusResponse
type RoutesV3MFAStatusResponse struct {
	Enabled *bool `json:"enabled,omitempty"`
	Methods []AuthenticationtypesAuthenticationMethod `json:"methods,omitempty"`
}

// NewRoutesV3MFAStatusResponse instantiates a new RoutesV3MFAStatusResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV3MFAStatusResponse() *RoutesV3MFAStatusResponse {
	this := RoutesV3MFAStatusResponse{}
	return &this
}

// NewRoutesV3MFAStatusResponseWithDefaults instantiates a new RoutesV3MFAStatusResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV3MFAStatusResponseWithDefaults() *RoutesV3MFAStatusResponse {
	this := RoutesV3MFAStatusResponse{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *RoutesV3MFAStatusResponse) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV3MFAStatusResponse) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *RoutesV3MFAStatusResponse) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *RoutesV3MFAStatusResponse) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetMethods returns the Methods field value if set, zero value otherwise.
func (o *RoutesV3MFAStatusResponse) GetMethods() []AuthenticationtypesAuthenticationMethod {
	if o == nil || IsNil(o.Methods) {
		var ret []AuthenticationtypesAuthenticationMethod
		return ret
	}
	return o.Methods
}

// GetMethodsOk returns a tuple with the Methods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV3MFAStatusResponse) GetMethodsOk() ([]AuthenticationtypesAuthenticationMethod, bool) {
	if o == nil || IsNil(o.Methods) {
		return nil, false
	}
	return o.Methods, true
}

// HasMethods returns a boolean if a field has been set.
func (o *RoutesV3MFAStatusResponse) HasMethods() bool {
	if o != nil && !IsNil(o.Methods) {
		return true
	}

	return false
}

// SetMethods gets a reference to the given []AuthenticationtypesAuthenticationMethod and assigns it to the Methods field.
func (o *RoutesV3MFAStatusResponse) SetMethods(v []AuthenticationtypesAuthenticationMethod) {
	o.Methods = v
}

func (o RoutesV3MFAStatusResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV3MFAStatusResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Methods) {
		toSerialize["methods"] = o.Methods
	}
	return toSerialize, nil
}

type NullableRoutesV3MFAStatusResponse struct {
	value *RoutesV3MFAStatusResponse
	isSet bool
}

func (v NullableRoutesV3MFAStatusResponse) Get() *RoutesV3MFAStatusResponse {
	return v.value
}

func (v *NullableRoutesV3MFAStatusResponse) Set(val *RoutesV3MFAStatusResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV3MFAStatusResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV3MFAStatusResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV3MFAStatusResponse(val *RoutesV3MFAStatusResponse) *NullableRoutesV3MFAStatusResponse {
	return &NullableRoutesV3MFAStatusResponse{value: val, isSet: true}
}

func (v NullableRoutesV3MFAStatusResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV3MFAStatusResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


