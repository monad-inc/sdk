/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the SecretsmanagerSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecretsmanagerSettingsConfig{}

// SecretsmanagerSettingsConfig struct for SecretsmanagerSettingsConfig
type SecretsmanagerSettingsConfig struct {
	// Cron expression for scheduling the input
	Cron *string `json:"cron,omitempty"`
	// Filters for returned secrets
	Filters []GithubComAwsAwsSdkGoV2ServiceSecretsmanagerTypesFilter `json:"filters,omitempty"`
	// Whether or not to include secrets scheduled for deletion
	IncludePlannedDeletion *bool `json:"include_planned_deletion,omitempty"`
	// URL of the organization
	Region *string `json:"region,omitempty"`
	// The ID of the secret to describe
	RoleArn *string `json:"role_arn,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
}

// NewSecretsmanagerSettingsConfig instantiates a new SecretsmanagerSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretsmanagerSettingsConfig() *SecretsmanagerSettingsConfig {
	this := SecretsmanagerSettingsConfig{}
	return &this
}

// NewSecretsmanagerSettingsConfigWithDefaults instantiates a new SecretsmanagerSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretsmanagerSettingsConfigWithDefaults() *SecretsmanagerSettingsConfig {
	this := SecretsmanagerSettingsConfig{}
	return &this
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *SecretsmanagerSettingsConfig) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsmanagerSettingsConfig) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *SecretsmanagerSettingsConfig) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *SecretsmanagerSettingsConfig) SetCron(v string) {
	o.Cron = &v
}

// GetFilters returns the Filters field value if set, zero value otherwise.
func (o *SecretsmanagerSettingsConfig) GetFilters() []GithubComAwsAwsSdkGoV2ServiceSecretsmanagerTypesFilter {
	if o == nil || IsNil(o.Filters) {
		var ret []GithubComAwsAwsSdkGoV2ServiceSecretsmanagerTypesFilter
		return ret
	}
	return o.Filters
}

// GetFiltersOk returns a tuple with the Filters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsmanagerSettingsConfig) GetFiltersOk() ([]GithubComAwsAwsSdkGoV2ServiceSecretsmanagerTypesFilter, bool) {
	if o == nil || IsNil(o.Filters) {
		return nil, false
	}
	return o.Filters, true
}

// HasFilters returns a boolean if a field has been set.
func (o *SecretsmanagerSettingsConfig) HasFilters() bool {
	if o != nil && !IsNil(o.Filters) {
		return true
	}

	return false
}

// SetFilters gets a reference to the given []GithubComAwsAwsSdkGoV2ServiceSecretsmanagerTypesFilter and assigns it to the Filters field.
func (o *SecretsmanagerSettingsConfig) SetFilters(v []GithubComAwsAwsSdkGoV2ServiceSecretsmanagerTypesFilter) {
	o.Filters = v
}

// GetIncludePlannedDeletion returns the IncludePlannedDeletion field value if set, zero value otherwise.
func (o *SecretsmanagerSettingsConfig) GetIncludePlannedDeletion() bool {
	if o == nil || IsNil(o.IncludePlannedDeletion) {
		var ret bool
		return ret
	}
	return *o.IncludePlannedDeletion
}

// GetIncludePlannedDeletionOk returns a tuple with the IncludePlannedDeletion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsmanagerSettingsConfig) GetIncludePlannedDeletionOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludePlannedDeletion) {
		return nil, false
	}
	return o.IncludePlannedDeletion, true
}

// HasIncludePlannedDeletion returns a boolean if a field has been set.
func (o *SecretsmanagerSettingsConfig) HasIncludePlannedDeletion() bool {
	if o != nil && !IsNil(o.IncludePlannedDeletion) {
		return true
	}

	return false
}

// SetIncludePlannedDeletion gets a reference to the given bool and assigns it to the IncludePlannedDeletion field.
func (o *SecretsmanagerSettingsConfig) SetIncludePlannedDeletion(v bool) {
	o.IncludePlannedDeletion = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *SecretsmanagerSettingsConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsmanagerSettingsConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *SecretsmanagerSettingsConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *SecretsmanagerSettingsConfig) SetRegion(v string) {
	o.Region = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *SecretsmanagerSettingsConfig) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsmanagerSettingsConfig) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *SecretsmanagerSettingsConfig) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *SecretsmanagerSettingsConfig) SetRoleArn(v string) {
	o.RoleArn = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *SecretsmanagerSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecretsmanagerSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *SecretsmanagerSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *SecretsmanagerSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

func (o SecretsmanagerSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecretsmanagerSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.Filters) {
		toSerialize["filters"] = o.Filters
	}
	if !IsNil(o.IncludePlannedDeletion) {
		toSerialize["include_planned_deletion"] = o.IncludePlannedDeletion
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	return toSerialize, nil
}

type NullableSecretsmanagerSettingsConfig struct {
	value *SecretsmanagerSettingsConfig
	isSet bool
}

func (v NullableSecretsmanagerSettingsConfig) Get() *SecretsmanagerSettingsConfig {
	return v.value
}

func (v *NullableSecretsmanagerSettingsConfig) Set(val *SecretsmanagerSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretsmanagerSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretsmanagerSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretsmanagerSettingsConfig(val *SecretsmanagerSettingsConfig) *NullableSecretsmanagerSettingsConfig {
	return &NullableSecretsmanagerSettingsConfig{value: val, isSet: true}
}

func (v NullableSecretsmanagerSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretsmanagerSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


