/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutesV2PipelineRequestEdge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2PipelineRequestEdge{}

// RoutesV2PipelineRequestEdge struct for RoutesV2PipelineRequestEdge
type RoutesV2PipelineRequestEdge struct {
	Conditions *ModelsPipelineEdgeConditions `json:"conditions,omitempty"`
	Description *string `json:"description,omitempty"`
	FromNodeInstanceId string `json:"from_node_instance_id"`
	Name *string `json:"name,omitempty"`
	ToNodeInstanceId string `json:"to_node_instance_id"`
}

type _RoutesV2PipelineRequestEdge RoutesV2PipelineRequestEdge

// NewRoutesV2PipelineRequestEdge instantiates a new RoutesV2PipelineRequestEdge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2PipelineRequestEdge(fromNodeInstanceId string, toNodeInstanceId string) *RoutesV2PipelineRequestEdge {
	this := RoutesV2PipelineRequestEdge{}
	this.FromNodeInstanceId = fromNodeInstanceId
	this.ToNodeInstanceId = toNodeInstanceId
	return &this
}

// NewRoutesV2PipelineRequestEdgeWithDefaults instantiates a new RoutesV2PipelineRequestEdge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2PipelineRequestEdgeWithDefaults() *RoutesV2PipelineRequestEdge {
	this := RoutesV2PipelineRequestEdge{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *RoutesV2PipelineRequestEdge) GetConditions() ModelsPipelineEdgeConditions {
	if o == nil || IsNil(o.Conditions) {
		var ret ModelsPipelineEdgeConditions
		return ret
	}
	return *o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestEdge) GetConditionsOk() (*ModelsPipelineEdgeConditions, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *RoutesV2PipelineRequestEdge) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given ModelsPipelineEdgeConditions and assigns it to the Conditions field.
func (o *RoutesV2PipelineRequestEdge) SetConditions(v ModelsPipelineEdgeConditions) {
	o.Conditions = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RoutesV2PipelineRequestEdge) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestEdge) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RoutesV2PipelineRequestEdge) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RoutesV2PipelineRequestEdge) SetDescription(v string) {
	o.Description = &v
}

// GetFromNodeInstanceId returns the FromNodeInstanceId field value
func (o *RoutesV2PipelineRequestEdge) GetFromNodeInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromNodeInstanceId
}

// GetFromNodeInstanceIdOk returns a tuple with the FromNodeInstanceId field value
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestEdge) GetFromNodeInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromNodeInstanceId, true
}

// SetFromNodeInstanceId sets field value
func (o *RoutesV2PipelineRequestEdge) SetFromNodeInstanceId(v string) {
	o.FromNodeInstanceId = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RoutesV2PipelineRequestEdge) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestEdge) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RoutesV2PipelineRequestEdge) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RoutesV2PipelineRequestEdge) SetName(v string) {
	o.Name = &v
}

// GetToNodeInstanceId returns the ToNodeInstanceId field value
func (o *RoutesV2PipelineRequestEdge) GetToNodeInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToNodeInstanceId
}

// GetToNodeInstanceIdOk returns a tuple with the ToNodeInstanceId field value
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestEdge) GetToNodeInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToNodeInstanceId, true
}

// SetToNodeInstanceId sets field value
func (o *RoutesV2PipelineRequestEdge) SetToNodeInstanceId(v string) {
	o.ToNodeInstanceId = v
}

func (o RoutesV2PipelineRequestEdge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2PipelineRequestEdge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["from_node_instance_id"] = o.FromNodeInstanceId
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	toSerialize["to_node_instance_id"] = o.ToNodeInstanceId
	return toSerialize, nil
}

func (o *RoutesV2PipelineRequestEdge) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"from_node_instance_id",
		"to_node_instance_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutesV2PipelineRequestEdge := _RoutesV2PipelineRequestEdge{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutesV2PipelineRequestEdge)

	if err != nil {
		return err
	}

	*o = RoutesV2PipelineRequestEdge(varRoutesV2PipelineRequestEdge)

	return err
}

type NullableRoutesV2PipelineRequestEdge struct {
	value *RoutesV2PipelineRequestEdge
	isSet bool
}

func (v NullableRoutesV2PipelineRequestEdge) Get() *RoutesV2PipelineRequestEdge {
	return v.value
}

func (v *NullableRoutesV2PipelineRequestEdge) Set(val *RoutesV2PipelineRequestEdge) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2PipelineRequestEdge) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2PipelineRequestEdge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2PipelineRequestEdge(val *RoutesV2PipelineRequestEdge) *NullableRoutesV2PipelineRequestEdge {
	return &NullableRoutesV2PipelineRequestEdge{value: val, isSet: true}
}

func (v NullableRoutesV2PipelineRequestEdge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2PipelineRequestEdge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


