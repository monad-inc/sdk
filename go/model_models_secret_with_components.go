/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsSecretWithComponents type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSecretWithComponents{}

// ModelsSecretWithComponents struct for ModelsSecretWithComponents
type ModelsSecretWithComponents struct {
	// When the secret was created
	CreatedAt *string `json:"created_at,omitempty"`
	// The user set Description of the secret
	Description *string `json:"description,omitempty"`
	// The ID of the secret
	Id *string `json:"id,omitempty"`
	Inputs []ModelsComponentReference `json:"inputs,omitempty"`
	// The user set Name of the secret
	Name *string `json:"name,omitempty"`
	// The OrganizationID the secret belongs to
	OrganizationId *string `json:"organization_id,omitempty"`
	Outputs []ModelsComponentReference `json:"outputs,omitempty"`
	// When the secret was updated
	UpdatedAt *string `json:"updated_at,omitempty"`
	// The value of the secret. This will never be returned to the client but can be used to set new values when used in a request payload.
	Value *string `json:"value,omitempty"`
}

// NewModelsSecretWithComponents instantiates a new ModelsSecretWithComponents object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSecretWithComponents() *ModelsSecretWithComponents {
	this := ModelsSecretWithComponents{}
	return &this
}

// NewModelsSecretWithComponentsWithDefaults instantiates a new ModelsSecretWithComponents object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSecretWithComponentsWithDefaults() *ModelsSecretWithComponents {
	this := ModelsSecretWithComponents{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsSecretWithComponents) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsSecretWithComponents) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsSecretWithComponents) SetId(v string) {
	o.Id = &v
}

// GetInputs returns the Inputs field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetInputs() []ModelsComponentReference {
	if o == nil || IsNil(o.Inputs) {
		var ret []ModelsComponentReference
		return ret
	}
	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetInputsOk() ([]ModelsComponentReference, bool) {
	if o == nil || IsNil(o.Inputs) {
		return nil, false
	}
	return o.Inputs, true
}

// HasInputs returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasInputs() bool {
	if o != nil && !IsNil(o.Inputs) {
		return true
	}

	return false
}

// SetInputs gets a reference to the given []ModelsComponentReference and assigns it to the Inputs field.
func (o *ModelsSecretWithComponents) SetInputs(v []ModelsComponentReference) {
	o.Inputs = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsSecretWithComponents) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsSecretWithComponents) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetOutputs() []ModelsComponentReference {
	if o == nil || IsNil(o.Outputs) {
		var ret []ModelsComponentReference
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetOutputsOk() ([]ModelsComponentReference, bool) {
	if o == nil || IsNil(o.Outputs) {
		return nil, false
	}
	return o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasOutputs() bool {
	if o != nil && !IsNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given []ModelsComponentReference and assigns it to the Outputs field.
func (o *ModelsSecretWithComponents) SetOutputs(v []ModelsComponentReference) {
	o.Outputs = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsSecretWithComponents) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModelsSecretWithComponents) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponents) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModelsSecretWithComponents) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ModelsSecretWithComponents) SetValue(v string) {
	o.Value = &v
}

func (o ModelsSecretWithComponents) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSecretWithComponents) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Inputs) {
		toSerialize["inputs"] = o.Inputs
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.Outputs) {
		toSerialize["outputs"] = o.Outputs
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableModelsSecretWithComponents struct {
	value *ModelsSecretWithComponents
	isSet bool
}

func (v NullableModelsSecretWithComponents) Get() *ModelsSecretWithComponents {
	return v.value
}

func (v *NullableModelsSecretWithComponents) Set(val *ModelsSecretWithComponents) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSecretWithComponents) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSecretWithComponents) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSecretWithComponents(val *ModelsSecretWithComponents) *NullableModelsSecretWithComponents {
	return &NullableModelsSecretWithComponents{value: val, isSet: true}
}

func (v NullableModelsSecretWithComponents) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSecretWithComponents) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


