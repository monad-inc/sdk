/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV2ApplyTransformationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2ApplyTransformationRequest{}

// RoutesV2ApplyTransformationRequest struct for RoutesV2ApplyTransformationRequest
type RoutesV2ApplyTransformationRequest struct {
	Config *ModelsTransformConfig `json:"config,omitempty"`
	Record []int32 `json:"record,omitempty"`
}

// NewRoutesV2ApplyTransformationRequest instantiates a new RoutesV2ApplyTransformationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2ApplyTransformationRequest() *RoutesV2ApplyTransformationRequest {
	this := RoutesV2ApplyTransformationRequest{}
	return &this
}

// NewRoutesV2ApplyTransformationRequestWithDefaults instantiates a new RoutesV2ApplyTransformationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2ApplyTransformationRequestWithDefaults() *RoutesV2ApplyTransformationRequest {
	this := RoutesV2ApplyTransformationRequest{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *RoutesV2ApplyTransformationRequest) GetConfig() ModelsTransformConfig {
	if o == nil || IsNil(o.Config) {
		var ret ModelsTransformConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2ApplyTransformationRequest) GetConfigOk() (*ModelsTransformConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *RoutesV2ApplyTransformationRequest) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ModelsTransformConfig and assigns it to the Config field.
func (o *RoutesV2ApplyTransformationRequest) SetConfig(v ModelsTransformConfig) {
	o.Config = &v
}

// GetRecord returns the Record field value if set, zero value otherwise.
func (o *RoutesV2ApplyTransformationRequest) GetRecord() []int32 {
	if o == nil || IsNil(o.Record) {
		var ret []int32
		return ret
	}
	return o.Record
}

// GetRecordOk returns a tuple with the Record field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2ApplyTransformationRequest) GetRecordOk() ([]int32, bool) {
	if o == nil || IsNil(o.Record) {
		return nil, false
	}
	return o.Record, true
}

// HasRecord returns a boolean if a field has been set.
func (o *RoutesV2ApplyTransformationRequest) HasRecord() bool {
	if o != nil && !IsNil(o.Record) {
		return true
	}

	return false
}

// SetRecord gets a reference to the given []int32 and assigns it to the Record field.
func (o *RoutesV2ApplyTransformationRequest) SetRecord(v []int32) {
	o.Record = v
}

func (o RoutesV2ApplyTransformationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2ApplyTransformationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Record) {
		toSerialize["record"] = o.Record
	}
	return toSerialize, nil
}

type NullableRoutesV2ApplyTransformationRequest struct {
	value *RoutesV2ApplyTransformationRequest
	isSet bool
}

func (v NullableRoutesV2ApplyTransformationRequest) Get() *RoutesV2ApplyTransformationRequest {
	return v.value
}

func (v *NullableRoutesV2ApplyTransformationRequest) Set(val *RoutesV2ApplyTransformationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2ApplyTransformationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2ApplyTransformationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2ApplyTransformationRequest(val *RoutesV2ApplyTransformationRequest) *NullableRoutesV2ApplyTransformationRequest {
	return &NullableRoutesV2ApplyTransformationRequest{value: val, isSet: true}
}

func (v NullableRoutesV2ApplyTransformationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2ApplyTransformationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


