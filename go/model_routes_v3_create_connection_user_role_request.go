/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutesV3CreateConnectionUserRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV3CreateConnectionUserRoleRequest{}

// RoutesV3CreateConnectionUserRoleRequest struct for RoutesV3CreateConnectionUserRoleRequest
type RoutesV3CreateConnectionUserRoleRequest struct {
	// Email of the user
	UserEmail string `json:"user_email"`
}

type _RoutesV3CreateConnectionUserRoleRequest RoutesV3CreateConnectionUserRoleRequest

// NewRoutesV3CreateConnectionUserRoleRequest instantiates a new RoutesV3CreateConnectionUserRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV3CreateConnectionUserRoleRequest(userEmail string) *RoutesV3CreateConnectionUserRoleRequest {
	this := RoutesV3CreateConnectionUserRoleRequest{}
	this.UserEmail = userEmail
	return &this
}

// NewRoutesV3CreateConnectionUserRoleRequestWithDefaults instantiates a new RoutesV3CreateConnectionUserRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV3CreateConnectionUserRoleRequestWithDefaults() *RoutesV3CreateConnectionUserRoleRequest {
	this := RoutesV3CreateConnectionUserRoleRequest{}
	return &this
}

// GetUserEmail returns the UserEmail field value
func (o *RoutesV3CreateConnectionUserRoleRequest) GetUserEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserEmail
}

// GetUserEmailOk returns a tuple with the UserEmail field value
// and a boolean to check if the value has been set.
func (o *RoutesV3CreateConnectionUserRoleRequest) GetUserEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserEmail, true
}

// SetUserEmail sets field value
func (o *RoutesV3CreateConnectionUserRoleRequest) SetUserEmail(v string) {
	o.UserEmail = v
}

func (o RoutesV3CreateConnectionUserRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV3CreateConnectionUserRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["user_email"] = o.UserEmail
	return toSerialize, nil
}

func (o *RoutesV3CreateConnectionUserRoleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"user_email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutesV3CreateConnectionUserRoleRequest := _RoutesV3CreateConnectionUserRoleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutesV3CreateConnectionUserRoleRequest)

	if err != nil {
		return err
	}

	*o = RoutesV3CreateConnectionUserRoleRequest(varRoutesV3CreateConnectionUserRoleRequest)

	return err
}

type NullableRoutesV3CreateConnectionUserRoleRequest struct {
	value *RoutesV3CreateConnectionUserRoleRequest
	isSet bool
}

func (v NullableRoutesV3CreateConnectionUserRoleRequest) Get() *RoutesV3CreateConnectionUserRoleRequest {
	return v.value
}

func (v *NullableRoutesV3CreateConnectionUserRoleRequest) Set(val *RoutesV3CreateConnectionUserRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV3CreateConnectionUserRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV3CreateConnectionUserRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV3CreateConnectionUserRoleRequest(val *RoutesV3CreateConnectionUserRoleRequest) *NullableRoutesV3CreateConnectionUserRoleRequest {
	return &NullableRoutesV3CreateConnectionUserRoleRequest{value: val, isSet: true}
}

func (v NullableRoutesV3CreateConnectionUserRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV3CreateConnectionUserRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


