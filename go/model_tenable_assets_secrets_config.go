/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the TenableAssetsSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TenableAssetsSecretsConfig{}

// TenableAssetsSecretsConfig Tenable assets secrets
type TenableAssetsSecretsConfig struct {
	AccessKey *ModelsSecret `json:"access_key,omitempty"`
	SecretKey *ModelsSecret `json:"secret_key,omitempty"`
}

// NewTenableAssetsSecretsConfig instantiates a new TenableAssetsSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTenableAssetsSecretsConfig() *TenableAssetsSecretsConfig {
	this := TenableAssetsSecretsConfig{}
	return &this
}

// NewTenableAssetsSecretsConfigWithDefaults instantiates a new TenableAssetsSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTenableAssetsSecretsConfigWithDefaults() *TenableAssetsSecretsConfig {
	this := TenableAssetsSecretsConfig{}
	return &this
}

// GetAccessKey returns the AccessKey field value if set, zero value otherwise.
func (o *TenableAssetsSecretsConfig) GetAccessKey() ModelsSecret {
	if o == nil || IsNil(o.AccessKey) {
		var ret ModelsSecret
		return ret
	}
	return *o.AccessKey
}

// GetAccessKeyOk returns a tuple with the AccessKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenableAssetsSecretsConfig) GetAccessKeyOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.AccessKey) {
		return nil, false
	}
	return o.AccessKey, true
}

// HasAccessKey returns a boolean if a field has been set.
func (o *TenableAssetsSecretsConfig) HasAccessKey() bool {
	if o != nil && !IsNil(o.AccessKey) {
		return true
	}

	return false
}

// SetAccessKey gets a reference to the given ModelsSecret and assigns it to the AccessKey field.
func (o *TenableAssetsSecretsConfig) SetAccessKey(v ModelsSecret) {
	o.AccessKey = &v
}

// GetSecretKey returns the SecretKey field value if set, zero value otherwise.
func (o *TenableAssetsSecretsConfig) GetSecretKey() ModelsSecret {
	if o == nil || IsNil(o.SecretKey) {
		var ret ModelsSecret
		return ret
	}
	return *o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TenableAssetsSecretsConfig) GetSecretKeyOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.SecretKey) {
		return nil, false
	}
	return o.SecretKey, true
}

// HasSecretKey returns a boolean if a field has been set.
func (o *TenableAssetsSecretsConfig) HasSecretKey() bool {
	if o != nil && !IsNil(o.SecretKey) {
		return true
	}

	return false
}

// SetSecretKey gets a reference to the given ModelsSecret and assigns it to the SecretKey field.
func (o *TenableAssetsSecretsConfig) SetSecretKey(v ModelsSecret) {
	o.SecretKey = &v
}

func (o TenableAssetsSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TenableAssetsSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessKey) {
		toSerialize["access_key"] = o.AccessKey
	}
	if !IsNil(o.SecretKey) {
		toSerialize["secret_key"] = o.SecretKey
	}
	return toSerialize, nil
}

type NullableTenableAssetsSecretsConfig struct {
	value *TenableAssetsSecretsConfig
	isSet bool
}

func (v NullableTenableAssetsSecretsConfig) Get() *TenableAssetsSecretsConfig {
	return v.value
}

func (v *NullableTenableAssetsSecretsConfig) Set(val *TenableAssetsSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableTenableAssetsSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableTenableAssetsSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTenableAssetsSecretsConfig(val *TenableAssetsSecretsConfig) *NullableTenableAssetsSecretsConfig {
	return &NullableTenableAssetsSecretsConfig{value: val, isSet: true}
}

func (v NullableTenableAssetsSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTenableAssetsSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


