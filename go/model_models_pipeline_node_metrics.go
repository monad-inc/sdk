/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsPipelineNodeMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPipelineNodeMetrics{}

// ModelsPipelineNodeMetrics struct for ModelsPipelineNodeMetrics
type ModelsPipelineNodeMetrics struct {
	Metric *string `json:"metric,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	NodeSlug *string `json:"node_slug,omitempty"`
	PipelineId *string `json:"pipeline_id,omitempty"`
	Values []ModelsPipelineNodeMetricsValue `json:"values,omitempty"`
}

// NewModelsPipelineNodeMetrics instantiates a new ModelsPipelineNodeMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPipelineNodeMetrics() *ModelsPipelineNodeMetrics {
	this := ModelsPipelineNodeMetrics{}
	return &this
}

// NewModelsPipelineNodeMetricsWithDefaults instantiates a new ModelsPipelineNodeMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPipelineNodeMetricsWithDefaults() *ModelsPipelineNodeMetrics {
	this := ModelsPipelineNodeMetrics{}
	return &this
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *ModelsPipelineNodeMetrics) GetMetric() string {
	if o == nil || IsNil(o.Metric) {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineNodeMetrics) GetMetricOk() (*string, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *ModelsPipelineNodeMetrics) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *ModelsPipelineNodeMetrics) SetMetric(v string) {
	o.Metric = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *ModelsPipelineNodeMetrics) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineNodeMetrics) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *ModelsPipelineNodeMetrics) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *ModelsPipelineNodeMetrics) SetNodeId(v string) {
	o.NodeId = &v
}

// GetNodeSlug returns the NodeSlug field value if set, zero value otherwise.
func (o *ModelsPipelineNodeMetrics) GetNodeSlug() string {
	if o == nil || IsNil(o.NodeSlug) {
		var ret string
		return ret
	}
	return *o.NodeSlug
}

// GetNodeSlugOk returns a tuple with the NodeSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineNodeMetrics) GetNodeSlugOk() (*string, bool) {
	if o == nil || IsNil(o.NodeSlug) {
		return nil, false
	}
	return o.NodeSlug, true
}

// HasNodeSlug returns a boolean if a field has been set.
func (o *ModelsPipelineNodeMetrics) HasNodeSlug() bool {
	if o != nil && !IsNil(o.NodeSlug) {
		return true
	}

	return false
}

// SetNodeSlug gets a reference to the given string and assigns it to the NodeSlug field.
func (o *ModelsPipelineNodeMetrics) SetNodeSlug(v string) {
	o.NodeSlug = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *ModelsPipelineNodeMetrics) GetPipelineId() string {
	if o == nil || IsNil(o.PipelineId) {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineNodeMetrics) GetPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *ModelsPipelineNodeMetrics) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *ModelsPipelineNodeMetrics) SetPipelineId(v string) {
	o.PipelineId = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ModelsPipelineNodeMetrics) GetValues() []ModelsPipelineNodeMetricsValue {
	if o == nil || IsNil(o.Values) {
		var ret []ModelsPipelineNodeMetricsValue
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineNodeMetrics) GetValuesOk() ([]ModelsPipelineNodeMetricsValue, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ModelsPipelineNodeMetrics) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []ModelsPipelineNodeMetricsValue and assigns it to the Values field.
func (o *ModelsPipelineNodeMetrics) SetValues(v []ModelsPipelineNodeMetricsValue) {
	o.Values = v
}

func (o ModelsPipelineNodeMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPipelineNodeMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.NodeSlug) {
		toSerialize["node_slug"] = o.NodeSlug
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableModelsPipelineNodeMetrics struct {
	value *ModelsPipelineNodeMetrics
	isSet bool
}

func (v NullableModelsPipelineNodeMetrics) Get() *ModelsPipelineNodeMetrics {
	return v.value
}

func (v *NullableModelsPipelineNodeMetrics) Set(val *ModelsPipelineNodeMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPipelineNodeMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPipelineNodeMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPipelineNodeMetrics(val *ModelsPipelineNodeMetrics) *NullableModelsPipelineNodeMetrics {
	return &NullableModelsPipelineNodeMetrics{value: val, isSet: true}
}

func (v NullableModelsPipelineNodeMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPipelineNodeMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


