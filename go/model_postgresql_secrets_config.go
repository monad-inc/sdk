/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the PostgresqlSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostgresqlSecretsConfig{}

// PostgresqlSecretsConfig struct for PostgresqlSecretsConfig
type PostgresqlSecretsConfig struct {
	ConnectionString *ModelsSecret `json:"connection_string,omitempty"`
	Password *ModelsSecret `json:"password,omitempty"`
}

// NewPostgresqlSecretsConfig instantiates a new PostgresqlSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostgresqlSecretsConfig() *PostgresqlSecretsConfig {
	this := PostgresqlSecretsConfig{}
	return &this
}

// NewPostgresqlSecretsConfigWithDefaults instantiates a new PostgresqlSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostgresqlSecretsConfigWithDefaults() *PostgresqlSecretsConfig {
	this := PostgresqlSecretsConfig{}
	return &this
}

// GetConnectionString returns the ConnectionString field value if set, zero value otherwise.
func (o *PostgresqlSecretsConfig) GetConnectionString() ModelsSecret {
	if o == nil || IsNil(o.ConnectionString) {
		var ret ModelsSecret
		return ret
	}
	return *o.ConnectionString
}

// GetConnectionStringOk returns a tuple with the ConnectionString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlSecretsConfig) GetConnectionStringOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.ConnectionString) {
		return nil, false
	}
	return o.ConnectionString, true
}

// HasConnectionString returns a boolean if a field has been set.
func (o *PostgresqlSecretsConfig) HasConnectionString() bool {
	if o != nil && !IsNil(o.ConnectionString) {
		return true
	}

	return false
}

// SetConnectionString gets a reference to the given ModelsSecret and assigns it to the ConnectionString field.
func (o *PostgresqlSecretsConfig) SetConnectionString(v ModelsSecret) {
	o.ConnectionString = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *PostgresqlSecretsConfig) GetPassword() ModelsSecret {
	if o == nil || IsNil(o.Password) {
		var ret ModelsSecret
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PostgresqlSecretsConfig) GetPasswordOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *PostgresqlSecretsConfig) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given ModelsSecret and assigns it to the Password field.
func (o *PostgresqlSecretsConfig) SetPassword(v ModelsSecret) {
	o.Password = &v
}

func (o PostgresqlSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostgresqlSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConnectionString) {
		toSerialize["connection_string"] = o.ConnectionString
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullablePostgresqlSecretsConfig struct {
	value *PostgresqlSecretsConfig
	isSet bool
}

func (v NullablePostgresqlSecretsConfig) Get() *PostgresqlSecretsConfig {
	return v.value
}

func (v *NullablePostgresqlSecretsConfig) Set(val *PostgresqlSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePostgresqlSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePostgresqlSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostgresqlSecretsConfig(val *PostgresqlSecretsConfig) *NullablePostgresqlSecretsConfig {
	return &NullablePostgresqlSecretsConfig{value: val, isSet: true}
}

func (v NullablePostgresqlSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostgresqlSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


