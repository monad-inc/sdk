/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV2MetricsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2MetricsResponse{}

// RoutesV2MetricsResponse struct for RoutesV2MetricsResponse
type RoutesV2MetricsResponse struct {
	EgressBytes []RoutesV2PipelineMetric `json:"egress_bytes,omitempty"`
	IngressBytes []RoutesV2PipelineMetric `json:"ingress_bytes,omitempty"`
}

// NewRoutesV2MetricsResponse instantiates a new RoutesV2MetricsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2MetricsResponse() *RoutesV2MetricsResponse {
	this := RoutesV2MetricsResponse{}
	return &this
}

// NewRoutesV2MetricsResponseWithDefaults instantiates a new RoutesV2MetricsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2MetricsResponseWithDefaults() *RoutesV2MetricsResponse {
	this := RoutesV2MetricsResponse{}
	return &this
}

// GetEgressBytes returns the EgressBytes field value if set, zero value otherwise.
func (o *RoutesV2MetricsResponse) GetEgressBytes() []RoutesV2PipelineMetric {
	if o == nil || IsNil(o.EgressBytes) {
		var ret []RoutesV2PipelineMetric
		return ret
	}
	return o.EgressBytes
}

// GetEgressBytesOk returns a tuple with the EgressBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2MetricsResponse) GetEgressBytesOk() ([]RoutesV2PipelineMetric, bool) {
	if o == nil || IsNil(o.EgressBytes) {
		return nil, false
	}
	return o.EgressBytes, true
}

// HasEgressBytes returns a boolean if a field has been set.
func (o *RoutesV2MetricsResponse) HasEgressBytes() bool {
	if o != nil && !IsNil(o.EgressBytes) {
		return true
	}

	return false
}

// SetEgressBytes gets a reference to the given []RoutesV2PipelineMetric and assigns it to the EgressBytes field.
func (o *RoutesV2MetricsResponse) SetEgressBytes(v []RoutesV2PipelineMetric) {
	o.EgressBytes = v
}

// GetIngressBytes returns the IngressBytes field value if set, zero value otherwise.
func (o *RoutesV2MetricsResponse) GetIngressBytes() []RoutesV2PipelineMetric {
	if o == nil || IsNil(o.IngressBytes) {
		var ret []RoutesV2PipelineMetric
		return ret
	}
	return o.IngressBytes
}

// GetIngressBytesOk returns a tuple with the IngressBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2MetricsResponse) GetIngressBytesOk() ([]RoutesV2PipelineMetric, bool) {
	if o == nil || IsNil(o.IngressBytes) {
		return nil, false
	}
	return o.IngressBytes, true
}

// HasIngressBytes returns a boolean if a field has been set.
func (o *RoutesV2MetricsResponse) HasIngressBytes() bool {
	if o != nil && !IsNil(o.IngressBytes) {
		return true
	}

	return false
}

// SetIngressBytes gets a reference to the given []RoutesV2PipelineMetric and assigns it to the IngressBytes field.
func (o *RoutesV2MetricsResponse) SetIngressBytes(v []RoutesV2PipelineMetric) {
	o.IngressBytes = v
}

func (o RoutesV2MetricsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2MetricsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EgressBytes) {
		toSerialize["egress_bytes"] = o.EgressBytes
	}
	if !IsNil(o.IngressBytes) {
		toSerialize["ingress_bytes"] = o.IngressBytes
	}
	return toSerialize, nil
}

type NullableRoutesV2MetricsResponse struct {
	value *RoutesV2MetricsResponse
	isSet bool
}

func (v NullableRoutesV2MetricsResponse) Get() *RoutesV2MetricsResponse {
	return v.value
}

func (v *NullableRoutesV2MetricsResponse) Set(val *RoutesV2MetricsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2MetricsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2MetricsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2MetricsResponse(val *RoutesV2MetricsResponse) *NullableRoutesV2MetricsResponse {
	return &NullableRoutesV2MetricsResponse{value: val, isSet: true}
}

func (v NullableRoutesV2MetricsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2MetricsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


