/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV3TransformOperation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV3TransformOperation{}

// RoutesV3TransformOperation struct for RoutesV3TransformOperation
type RoutesV3TransformOperation struct {
	Arguments map[string]interface{} `json:"arguments,omitempty"`
	Operation *string `json:"operation,omitempty"`
}

// NewRoutesV3TransformOperation instantiates a new RoutesV3TransformOperation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV3TransformOperation() *RoutesV3TransformOperation {
	this := RoutesV3TransformOperation{}
	return &this
}

// NewRoutesV3TransformOperationWithDefaults instantiates a new RoutesV3TransformOperation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV3TransformOperationWithDefaults() *RoutesV3TransformOperation {
	this := RoutesV3TransformOperation{}
	return &this
}

// GetArguments returns the Arguments field value if set, zero value otherwise.
func (o *RoutesV3TransformOperation) GetArguments() map[string]interface{} {
	if o == nil || IsNil(o.Arguments) {
		var ret map[string]interface{}
		return ret
	}
	return o.Arguments
}

// GetArgumentsOk returns a tuple with the Arguments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV3TransformOperation) GetArgumentsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Arguments) {
		return map[string]interface{}{}, false
	}
	return o.Arguments, true
}

// HasArguments returns a boolean if a field has been set.
func (o *RoutesV3TransformOperation) HasArguments() bool {
	if o != nil && !IsNil(o.Arguments) {
		return true
	}

	return false
}

// SetArguments gets a reference to the given map[string]interface{} and assigns it to the Arguments field.
func (o *RoutesV3TransformOperation) SetArguments(v map[string]interface{}) {
	o.Arguments = v
}

// GetOperation returns the Operation field value if set, zero value otherwise.
func (o *RoutesV3TransformOperation) GetOperation() string {
	if o == nil || IsNil(o.Operation) {
		var ret string
		return ret
	}
	return *o.Operation
}

// GetOperationOk returns a tuple with the Operation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV3TransformOperation) GetOperationOk() (*string, bool) {
	if o == nil || IsNil(o.Operation) {
		return nil, false
	}
	return o.Operation, true
}

// HasOperation returns a boolean if a field has been set.
func (o *RoutesV3TransformOperation) HasOperation() bool {
	if o != nil && !IsNil(o.Operation) {
		return true
	}

	return false
}

// SetOperation gets a reference to the given string and assigns it to the Operation field.
func (o *RoutesV3TransformOperation) SetOperation(v string) {
	o.Operation = &v
}

func (o RoutesV3TransformOperation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV3TransformOperation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Arguments) {
		toSerialize["arguments"] = o.Arguments
	}
	if !IsNil(o.Operation) {
		toSerialize["operation"] = o.Operation
	}
	return toSerialize, nil
}

type NullableRoutesV3TransformOperation struct {
	value *RoutesV3TransformOperation
	isSet bool
}

func (v NullableRoutesV3TransformOperation) Get() *RoutesV3TransformOperation {
	return v.value
}

func (v *NullableRoutesV3TransformOperation) Set(val *RoutesV3TransformOperation) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV3TransformOperation) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV3TransformOperation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV3TransformOperation(val *RoutesV3TransformOperation) *NullableRoutesV3TransformOperation {
	return &NullableRoutesV3TransformOperation{value: val, isSet: true}
}

func (v NullableRoutesV3TransformOperation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV3TransformOperation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


