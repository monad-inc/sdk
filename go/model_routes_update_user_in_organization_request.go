/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesUpdateUserInOrganizationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesUpdateUserInOrganizationRequest{}

// RoutesUpdateUserInOrganizationRequest struct for RoutesUpdateUserInOrganizationRequest
type RoutesUpdateUserInOrganizationRequest struct {
	RoleId *string `json:"role_id,omitempty"`
}

// NewRoutesUpdateUserInOrganizationRequest instantiates a new RoutesUpdateUserInOrganizationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesUpdateUserInOrganizationRequest() *RoutesUpdateUserInOrganizationRequest {
	this := RoutesUpdateUserInOrganizationRequest{}
	return &this
}

// NewRoutesUpdateUserInOrganizationRequestWithDefaults instantiates a new RoutesUpdateUserInOrganizationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesUpdateUserInOrganizationRequestWithDefaults() *RoutesUpdateUserInOrganizationRequest {
	this := RoutesUpdateUserInOrganizationRequest{}
	return &this
}

// GetRoleId returns the RoleId field value if set, zero value otherwise.
func (o *RoutesUpdateUserInOrganizationRequest) GetRoleId() string {
	if o == nil || IsNil(o.RoleId) {
		var ret string
		return ret
	}
	return *o.RoleId
}

// GetRoleIdOk returns a tuple with the RoleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesUpdateUserInOrganizationRequest) GetRoleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RoleId) {
		return nil, false
	}
	return o.RoleId, true
}

// HasRoleId returns a boolean if a field has been set.
func (o *RoutesUpdateUserInOrganizationRequest) HasRoleId() bool {
	if o != nil && !IsNil(o.RoleId) {
		return true
	}

	return false
}

// SetRoleId gets a reference to the given string and assigns it to the RoleId field.
func (o *RoutesUpdateUserInOrganizationRequest) SetRoleId(v string) {
	o.RoleId = &v
}

func (o RoutesUpdateUserInOrganizationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesUpdateUserInOrganizationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RoleId) {
		toSerialize["role_id"] = o.RoleId
	}
	return toSerialize, nil
}

type NullableRoutesUpdateUserInOrganizationRequest struct {
	value *RoutesUpdateUserInOrganizationRequest
	isSet bool
}

func (v NullableRoutesUpdateUserInOrganizationRequest) Get() *RoutesUpdateUserInOrganizationRequest {
	return v.value
}

func (v *NullableRoutesUpdateUserInOrganizationRequest) Set(val *RoutesUpdateUserInOrganizationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesUpdateUserInOrganizationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesUpdateUserInOrganizationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesUpdateUserInOrganizationRequest(val *RoutesUpdateUserInOrganizationRequest) *NullableRoutesUpdateUserInOrganizationRequest {
	return &NullableRoutesUpdateUserInOrganizationRequest{value: val, isSet: true}
}

func (v NullableRoutesUpdateUserInOrganizationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesUpdateUserInOrganizationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


