/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the CognitoUsersFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CognitoUsersFilter{}

// CognitoUsersFilter Optional filter for listing users
type CognitoUsersFilter struct {
	Attribute *string `json:"attribute,omitempty"`
	Operator *string `json:"operator,omitempty"`
	Value *string `json:"value,omitempty"`
}

// NewCognitoUsersFilter instantiates a new CognitoUsersFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCognitoUsersFilter() *CognitoUsersFilter {
	this := CognitoUsersFilter{}
	return &this
}

// NewCognitoUsersFilterWithDefaults instantiates a new CognitoUsersFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCognitoUsersFilterWithDefaults() *CognitoUsersFilter {
	this := CognitoUsersFilter{}
	return &this
}

// GetAttribute returns the Attribute field value if set, zero value otherwise.
func (o *CognitoUsersFilter) GetAttribute() string {
	if o == nil || IsNil(o.Attribute) {
		var ret string
		return ret
	}
	return *o.Attribute
}

// GetAttributeOk returns a tuple with the Attribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CognitoUsersFilter) GetAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.Attribute) {
		return nil, false
	}
	return o.Attribute, true
}

// HasAttribute returns a boolean if a field has been set.
func (o *CognitoUsersFilter) HasAttribute() bool {
	if o != nil && !IsNil(o.Attribute) {
		return true
	}

	return false
}

// SetAttribute gets a reference to the given string and assigns it to the Attribute field.
func (o *CognitoUsersFilter) SetAttribute(v string) {
	o.Attribute = &v
}

// GetOperator returns the Operator field value if set, zero value otherwise.
func (o *CognitoUsersFilter) GetOperator() string {
	if o == nil || IsNil(o.Operator) {
		var ret string
		return ret
	}
	return *o.Operator
}

// GetOperatorOk returns a tuple with the Operator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CognitoUsersFilter) GetOperatorOk() (*string, bool) {
	if o == nil || IsNil(o.Operator) {
		return nil, false
	}
	return o.Operator, true
}

// HasOperator returns a boolean if a field has been set.
func (o *CognitoUsersFilter) HasOperator() bool {
	if o != nil && !IsNil(o.Operator) {
		return true
	}

	return false
}

// SetOperator gets a reference to the given string and assigns it to the Operator field.
func (o *CognitoUsersFilter) SetOperator(v string) {
	o.Operator = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CognitoUsersFilter) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CognitoUsersFilter) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CognitoUsersFilter) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CognitoUsersFilter) SetValue(v string) {
	o.Value = &v
}

func (o CognitoUsersFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CognitoUsersFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attribute) {
		toSerialize["attribute"] = o.Attribute
	}
	if !IsNil(o.Operator) {
		toSerialize["operator"] = o.Operator
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableCognitoUsersFilter struct {
	value *CognitoUsersFilter
	isSet bool
}

func (v NullableCognitoUsersFilter) Get() *CognitoUsersFilter {
	return v.value
}

func (v *NullableCognitoUsersFilter) Set(val *CognitoUsersFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableCognitoUsersFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableCognitoUsersFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCognitoUsersFilter(val *CognitoUsersFilter) *NullableCognitoUsersFilter {
	return &NullableCognitoUsersFilter{value: val, isSet: true}
}

func (v NullableCognitoUsersFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCognitoUsersFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


