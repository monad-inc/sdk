/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the IndividualAlertsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndividualAlertsSettingsConfig{}

// IndividualAlertsSettingsConfig Clumio Alerts settings
type IndividualAlertsSettingsConfig struct {
	// Filter by alert type (e.g., policy_violated, tag_conflict)
	AlertType *string `json:"alert_type,omitempty"`
	// Embed related resources in the data returned (e.g., read-consolidated-alert)
	Embed *string `json:"embed,omitempty"`
	// Filter by primary entity type (e.g., aws_ebs_volume, vmware_vm)
	PrimaryEntityType *string `json:"primary_entity_type,omitempty"`
	// Filter by primary entity value (contains search)
	PrimaryEntityValue *string `json:"primary_entity_value,omitempty"`
	// The region associated with your Clumio account
	Region *string `json:"region,omitempty"`
	// Filter by alert severity (error, warning)
	Severity *string `json:"severity,omitempty"`
	// Filter by alert status (active, cleared)
	Status *string `json:"status,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
}

// NewIndividualAlertsSettingsConfig instantiates a new IndividualAlertsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndividualAlertsSettingsConfig() *IndividualAlertsSettingsConfig {
	this := IndividualAlertsSettingsConfig{}
	return &this
}

// NewIndividualAlertsSettingsConfigWithDefaults instantiates a new IndividualAlertsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndividualAlertsSettingsConfigWithDefaults() *IndividualAlertsSettingsConfig {
	this := IndividualAlertsSettingsConfig{}
	return &this
}

// GetAlertType returns the AlertType field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetAlertType() string {
	if o == nil || IsNil(o.AlertType) {
		var ret string
		return ret
	}
	return *o.AlertType
}

// GetAlertTypeOk returns a tuple with the AlertType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetAlertTypeOk() (*string, bool) {
	if o == nil || IsNil(o.AlertType) {
		return nil, false
	}
	return o.AlertType, true
}

// HasAlertType returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasAlertType() bool {
	if o != nil && !IsNil(o.AlertType) {
		return true
	}

	return false
}

// SetAlertType gets a reference to the given string and assigns it to the AlertType field.
func (o *IndividualAlertsSettingsConfig) SetAlertType(v string) {
	o.AlertType = &v
}

// GetEmbed returns the Embed field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetEmbed() string {
	if o == nil || IsNil(o.Embed) {
		var ret string
		return ret
	}
	return *o.Embed
}

// GetEmbedOk returns a tuple with the Embed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetEmbedOk() (*string, bool) {
	if o == nil || IsNil(o.Embed) {
		return nil, false
	}
	return o.Embed, true
}

// HasEmbed returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasEmbed() bool {
	if o != nil && !IsNil(o.Embed) {
		return true
	}

	return false
}

// SetEmbed gets a reference to the given string and assigns it to the Embed field.
func (o *IndividualAlertsSettingsConfig) SetEmbed(v string) {
	o.Embed = &v
}

// GetPrimaryEntityType returns the PrimaryEntityType field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetPrimaryEntityType() string {
	if o == nil || IsNil(o.PrimaryEntityType) {
		var ret string
		return ret
	}
	return *o.PrimaryEntityType
}

// GetPrimaryEntityTypeOk returns a tuple with the PrimaryEntityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetPrimaryEntityTypeOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryEntityType) {
		return nil, false
	}
	return o.PrimaryEntityType, true
}

// HasPrimaryEntityType returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasPrimaryEntityType() bool {
	if o != nil && !IsNil(o.PrimaryEntityType) {
		return true
	}

	return false
}

// SetPrimaryEntityType gets a reference to the given string and assigns it to the PrimaryEntityType field.
func (o *IndividualAlertsSettingsConfig) SetPrimaryEntityType(v string) {
	o.PrimaryEntityType = &v
}

// GetPrimaryEntityValue returns the PrimaryEntityValue field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetPrimaryEntityValue() string {
	if o == nil || IsNil(o.PrimaryEntityValue) {
		var ret string
		return ret
	}
	return *o.PrimaryEntityValue
}

// GetPrimaryEntityValueOk returns a tuple with the PrimaryEntityValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetPrimaryEntityValueOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryEntityValue) {
		return nil, false
	}
	return o.PrimaryEntityValue, true
}

// HasPrimaryEntityValue returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasPrimaryEntityValue() bool {
	if o != nil && !IsNil(o.PrimaryEntityValue) {
		return true
	}

	return false
}

// SetPrimaryEntityValue gets a reference to the given string and assigns it to the PrimaryEntityValue field.
func (o *IndividualAlertsSettingsConfig) SetPrimaryEntityValue(v string) {
	o.PrimaryEntityValue = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *IndividualAlertsSettingsConfig) SetRegion(v string) {
	o.Region = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *IndividualAlertsSettingsConfig) SetSeverity(v string) {
	o.Severity = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *IndividualAlertsSettingsConfig) SetStatus(v string) {
	o.Status = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *IndividualAlertsSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IndividualAlertsSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *IndividualAlertsSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *IndividualAlertsSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

func (o IndividualAlertsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndividualAlertsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AlertType) {
		toSerialize["alert_type"] = o.AlertType
	}
	if !IsNil(o.Embed) {
		toSerialize["embed"] = o.Embed
	}
	if !IsNil(o.PrimaryEntityType) {
		toSerialize["primary_entity_type"] = o.PrimaryEntityType
	}
	if !IsNil(o.PrimaryEntityValue) {
		toSerialize["primary_entity_value"] = o.PrimaryEntityValue
	}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	return toSerialize, nil
}

type NullableIndividualAlertsSettingsConfig struct {
	value *IndividualAlertsSettingsConfig
	isSet bool
}

func (v NullableIndividualAlertsSettingsConfig) Get() *IndividualAlertsSettingsConfig {
	return v.value
}

func (v *NullableIndividualAlertsSettingsConfig) Set(val *IndividualAlertsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableIndividualAlertsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableIndividualAlertsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndividualAlertsSettingsConfig(val *IndividualAlertsSettingsConfig) *NullableIndividualAlertsSettingsConfig {
	return &NullableIndividualAlertsSettingsConfig{value: val, isSet: true}
}

func (v NullableIndividualAlertsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndividualAlertsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


