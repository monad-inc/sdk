/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsSecretWithComponentsList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSecretWithComponentsList{}

// ModelsSecretWithComponentsList struct for ModelsSecretWithComponentsList
type ModelsSecretWithComponentsList struct {
	Pagination *ModelsPagination `json:"pagination,omitempty"`
	Secrets []ModelsSecretWithComponents `json:"secrets,omitempty"`
}

// NewModelsSecretWithComponentsList instantiates a new ModelsSecretWithComponentsList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSecretWithComponentsList() *ModelsSecretWithComponentsList {
	this := ModelsSecretWithComponentsList{}
	return &this
}

// NewModelsSecretWithComponentsListWithDefaults instantiates a new ModelsSecretWithComponentsList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSecretWithComponentsListWithDefaults() *ModelsSecretWithComponentsList {
	this := ModelsSecretWithComponentsList{}
	return &this
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ModelsSecretWithComponentsList) GetPagination() ModelsPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ModelsPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponentsList) GetPaginationOk() (*ModelsPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ModelsSecretWithComponentsList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ModelsPagination and assigns it to the Pagination field.
func (o *ModelsSecretWithComponentsList) SetPagination(v ModelsPagination) {
	o.Pagination = &v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *ModelsSecretWithComponentsList) GetSecrets() []ModelsSecretWithComponents {
	if o == nil || IsNil(o.Secrets) {
		var ret []ModelsSecretWithComponents
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecretWithComponentsList) GetSecretsOk() ([]ModelsSecretWithComponents, bool) {
	if o == nil || IsNil(o.Secrets) {
		return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *ModelsSecretWithComponentsList) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given []ModelsSecretWithComponents and assigns it to the Secrets field.
func (o *ModelsSecretWithComponentsList) SetSecrets(v []ModelsSecretWithComponents) {
	o.Secrets = v
}

func (o ModelsSecretWithComponentsList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSecretWithComponentsList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	return toSerialize, nil
}

type NullableModelsSecretWithComponentsList struct {
	value *ModelsSecretWithComponentsList
	isSet bool
}

func (v NullableModelsSecretWithComponentsList) Get() *ModelsSecretWithComponentsList {
	return v.value
}

func (v *NullableModelsSecretWithComponentsList) Set(val *ModelsSecretWithComponentsList) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSecretWithComponentsList) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSecretWithComponentsList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSecretWithComponentsList(val *ModelsSecretWithComponentsList) *NullableModelsSecretWithComponentsList {
	return &NullableModelsSecretWithComponentsList{value: val, isSet: true}
}

func (v NullableModelsSecretWithComponentsList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSecretWithComponentsList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


