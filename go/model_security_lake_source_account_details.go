/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the SecurityLakeSourceAccountDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityLakeSourceAccountDetails{}

// SecurityLakeSourceAccountDetails Details about the source AWS account and region for Security Lake
type SecurityLakeSourceAccountDetails struct {
	// Source AWS Account ID
	SourceAccountId *string `json:"source_account_id,omitempty"`
	// Source AWS Region
	SourceRegion *string `json:"source_region,omitempty"`
}

// NewSecurityLakeSourceAccountDetails instantiates a new SecurityLakeSourceAccountDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityLakeSourceAccountDetails() *SecurityLakeSourceAccountDetails {
	this := SecurityLakeSourceAccountDetails{}
	return &this
}

// NewSecurityLakeSourceAccountDetailsWithDefaults instantiates a new SecurityLakeSourceAccountDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityLakeSourceAccountDetailsWithDefaults() *SecurityLakeSourceAccountDetails {
	this := SecurityLakeSourceAccountDetails{}
	return &this
}

// GetSourceAccountId returns the SourceAccountId field value if set, zero value otherwise.
func (o *SecurityLakeSourceAccountDetails) GetSourceAccountId() string {
	if o == nil || IsNil(o.SourceAccountId) {
		var ret string
		return ret
	}
	return *o.SourceAccountId
}

// GetSourceAccountIdOk returns a tuple with the SourceAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityLakeSourceAccountDetails) GetSourceAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.SourceAccountId) {
		return nil, false
	}
	return o.SourceAccountId, true
}

// HasSourceAccountId returns a boolean if a field has been set.
func (o *SecurityLakeSourceAccountDetails) HasSourceAccountId() bool {
	if o != nil && !IsNil(o.SourceAccountId) {
		return true
	}

	return false
}

// SetSourceAccountId gets a reference to the given string and assigns it to the SourceAccountId field.
func (o *SecurityLakeSourceAccountDetails) SetSourceAccountId(v string) {
	o.SourceAccountId = &v
}

// GetSourceRegion returns the SourceRegion field value if set, zero value otherwise.
func (o *SecurityLakeSourceAccountDetails) GetSourceRegion() string {
	if o == nil || IsNil(o.SourceRegion) {
		var ret string
		return ret
	}
	return *o.SourceRegion
}

// GetSourceRegionOk returns a tuple with the SourceRegion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecurityLakeSourceAccountDetails) GetSourceRegionOk() (*string, bool) {
	if o == nil || IsNil(o.SourceRegion) {
		return nil, false
	}
	return o.SourceRegion, true
}

// HasSourceRegion returns a boolean if a field has been set.
func (o *SecurityLakeSourceAccountDetails) HasSourceRegion() bool {
	if o != nil && !IsNil(o.SourceRegion) {
		return true
	}

	return false
}

// SetSourceRegion gets a reference to the given string and assigns it to the SourceRegion field.
func (o *SecurityLakeSourceAccountDetails) SetSourceRegion(v string) {
	o.SourceRegion = &v
}

func (o SecurityLakeSourceAccountDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityLakeSourceAccountDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SourceAccountId) {
		toSerialize["source_account_id"] = o.SourceAccountId
	}
	if !IsNil(o.SourceRegion) {
		toSerialize["source_region"] = o.SourceRegion
	}
	return toSerialize, nil
}

type NullableSecurityLakeSourceAccountDetails struct {
	value *SecurityLakeSourceAccountDetails
	isSet bool
}

func (v NullableSecurityLakeSourceAccountDetails) Get() *SecurityLakeSourceAccountDetails {
	return v.value
}

func (v *NullableSecurityLakeSourceAccountDetails) Set(val *SecurityLakeSourceAccountDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityLakeSourceAccountDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityLakeSourceAccountDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityLakeSourceAccountDetails(val *SecurityLakeSourceAccountDetails) *NullableSecurityLakeSourceAccountDetails {
	return &NullableSecurityLakeSourceAccountDetails{value: val, isSet: true}
}

func (v NullableSecurityLakeSourceAccountDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityLakeSourceAccountDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


