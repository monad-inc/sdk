/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// SecretProcessesorOutputConfigSecrets - struct for SecretProcessesorOutputConfigSecrets
type SecretProcessesorOutputConfigSecrets struct {
	BigquerySecretsConfig *BigquerySecretsConfig
	CriblHttpSecretsConfig *CriblHttpSecretsConfig
	ElasticsearchSecretsConfig *ElasticsearchSecretsConfig
	HttpSecretsConfig *HttpSecretsConfig
	NextGenSiemSecretsConfig *NextGenSiemSecretsConfig
	ObjectStorageSecretsConfig *ObjectStorageSecretsConfig
	OpensearchSecretsConfig *OpensearchSecretsConfig
	PagerdutySecretsConfig *PagerdutySecretsConfig
	PostgresqlSecretsConfig *PostgresqlSecretsConfig
	SentinelSecretsConfig *SentinelSecretsConfig
	SnowflakeOutputSecretsConfig *SnowflakeOutputSecretsConfig
	SplunkSecretsConfig *SplunkSecretsConfig
	SumologicSecretsConfig *SumologicSecretsConfig
	MapmapOfStringAny *map[string]interface{}
}

// BigquerySecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns BigquerySecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func BigquerySecretsConfigAsSecretProcessesorOutputConfigSecrets(v *BigquerySecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		BigquerySecretsConfig: v,
	}
}

// CriblHttpSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns CriblHttpSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func CriblHttpSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *CriblHttpSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		CriblHttpSecretsConfig: v,
	}
}

// ElasticsearchSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns ElasticsearchSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func ElasticsearchSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *ElasticsearchSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		ElasticsearchSecretsConfig: v,
	}
}

// HttpSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns HttpSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func HttpSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *HttpSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		HttpSecretsConfig: v,
	}
}

// NextGenSiemSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns NextGenSiemSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func NextGenSiemSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *NextGenSiemSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		NextGenSiemSecretsConfig: v,
	}
}

// ObjectStorageSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns ObjectStorageSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func ObjectStorageSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *ObjectStorageSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		ObjectStorageSecretsConfig: v,
	}
}

// OpensearchSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns OpensearchSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func OpensearchSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *OpensearchSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		OpensearchSecretsConfig: v,
	}
}

// PagerdutySecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns PagerdutySecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func PagerdutySecretsConfigAsSecretProcessesorOutputConfigSecrets(v *PagerdutySecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		PagerdutySecretsConfig: v,
	}
}

// PostgresqlSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns PostgresqlSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func PostgresqlSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *PostgresqlSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		PostgresqlSecretsConfig: v,
	}
}

// SentinelSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns SentinelSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func SentinelSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *SentinelSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		SentinelSecretsConfig: v,
	}
}

// SnowflakeOutputSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns SnowflakeOutputSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func SnowflakeOutputSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *SnowflakeOutputSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		SnowflakeOutputSecretsConfig: v,
	}
}

// SplunkSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns SplunkSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func SplunkSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *SplunkSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		SplunkSecretsConfig: v,
	}
}

// SumologicSecretsConfigAsSecretProcessesorOutputConfigSecrets is a convenience function that returns SumologicSecretsConfig wrapped in SecretProcessesorOutputConfigSecrets
func SumologicSecretsConfigAsSecretProcessesorOutputConfigSecrets(v *SumologicSecretsConfig) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		SumologicSecretsConfig: v,
	}
}

// map[string]interface{}AsSecretProcessesorOutputConfigSecrets is a convenience function that returns map[string]interface{} wrapped in SecretProcessesorOutputConfigSecrets
func MapmapOfStringAnyAsSecretProcessesorOutputConfigSecrets(v *map[string]interface{}) SecretProcessesorOutputConfigSecrets {
	return SecretProcessesorOutputConfigSecrets{
		MapmapOfStringAny: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SecretProcessesorOutputConfigSecrets) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into BigquerySecretsConfig
	err = newStrictDecoder(data).Decode(&dst.BigquerySecretsConfig)
	if err == nil {
		jsonBigquerySecretsConfig, _ := json.Marshal(dst.BigquerySecretsConfig)
		if string(jsonBigquerySecretsConfig) == "{}" { // empty struct
			dst.BigquerySecretsConfig = nil
		} else {
			if err = validator.Validate(dst.BigquerySecretsConfig); err != nil {
				dst.BigquerySecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.BigquerySecretsConfig = nil
	}

	// try to unmarshal data into CriblHttpSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.CriblHttpSecretsConfig)
	if err == nil {
		jsonCriblHttpSecretsConfig, _ := json.Marshal(dst.CriblHttpSecretsConfig)
		if string(jsonCriblHttpSecretsConfig) == "{}" { // empty struct
			dst.CriblHttpSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.CriblHttpSecretsConfig); err != nil {
				dst.CriblHttpSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CriblHttpSecretsConfig = nil
	}

	// try to unmarshal data into ElasticsearchSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.ElasticsearchSecretsConfig)
	if err == nil {
		jsonElasticsearchSecretsConfig, _ := json.Marshal(dst.ElasticsearchSecretsConfig)
		if string(jsonElasticsearchSecretsConfig) == "{}" { // empty struct
			dst.ElasticsearchSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.ElasticsearchSecretsConfig); err != nil {
				dst.ElasticsearchSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.ElasticsearchSecretsConfig = nil
	}

	// try to unmarshal data into HttpSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.HttpSecretsConfig)
	if err == nil {
		jsonHttpSecretsConfig, _ := json.Marshal(dst.HttpSecretsConfig)
		if string(jsonHttpSecretsConfig) == "{}" { // empty struct
			dst.HttpSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.HttpSecretsConfig); err != nil {
				dst.HttpSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.HttpSecretsConfig = nil
	}

	// try to unmarshal data into NextGenSiemSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.NextGenSiemSecretsConfig)
	if err == nil {
		jsonNextGenSiemSecretsConfig, _ := json.Marshal(dst.NextGenSiemSecretsConfig)
		if string(jsonNextGenSiemSecretsConfig) == "{}" { // empty struct
			dst.NextGenSiemSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.NextGenSiemSecretsConfig); err != nil {
				dst.NextGenSiemSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.NextGenSiemSecretsConfig = nil
	}

	// try to unmarshal data into ObjectStorageSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.ObjectStorageSecretsConfig)
	if err == nil {
		jsonObjectStorageSecretsConfig, _ := json.Marshal(dst.ObjectStorageSecretsConfig)
		if string(jsonObjectStorageSecretsConfig) == "{}" { // empty struct
			dst.ObjectStorageSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.ObjectStorageSecretsConfig); err != nil {
				dst.ObjectStorageSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.ObjectStorageSecretsConfig = nil
	}

	// try to unmarshal data into OpensearchSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.OpensearchSecretsConfig)
	if err == nil {
		jsonOpensearchSecretsConfig, _ := json.Marshal(dst.OpensearchSecretsConfig)
		if string(jsonOpensearchSecretsConfig) == "{}" { // empty struct
			dst.OpensearchSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.OpensearchSecretsConfig); err != nil {
				dst.OpensearchSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.OpensearchSecretsConfig = nil
	}

	// try to unmarshal data into PagerdutySecretsConfig
	err = newStrictDecoder(data).Decode(&dst.PagerdutySecretsConfig)
	if err == nil {
		jsonPagerdutySecretsConfig, _ := json.Marshal(dst.PagerdutySecretsConfig)
		if string(jsonPagerdutySecretsConfig) == "{}" { // empty struct
			dst.PagerdutySecretsConfig = nil
		} else {
			if err = validator.Validate(dst.PagerdutySecretsConfig); err != nil {
				dst.PagerdutySecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.PagerdutySecretsConfig = nil
	}

	// try to unmarshal data into PostgresqlSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.PostgresqlSecretsConfig)
	if err == nil {
		jsonPostgresqlSecretsConfig, _ := json.Marshal(dst.PostgresqlSecretsConfig)
		if string(jsonPostgresqlSecretsConfig) == "{}" { // empty struct
			dst.PostgresqlSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.PostgresqlSecretsConfig); err != nil {
				dst.PostgresqlSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.PostgresqlSecretsConfig = nil
	}

	// try to unmarshal data into SentinelSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.SentinelSecretsConfig)
	if err == nil {
		jsonSentinelSecretsConfig, _ := json.Marshal(dst.SentinelSecretsConfig)
		if string(jsonSentinelSecretsConfig) == "{}" { // empty struct
			dst.SentinelSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.SentinelSecretsConfig); err != nil {
				dst.SentinelSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SentinelSecretsConfig = nil
	}

	// try to unmarshal data into SnowflakeOutputSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.SnowflakeOutputSecretsConfig)
	if err == nil {
		jsonSnowflakeOutputSecretsConfig, _ := json.Marshal(dst.SnowflakeOutputSecretsConfig)
		if string(jsonSnowflakeOutputSecretsConfig) == "{}" { // empty struct
			dst.SnowflakeOutputSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.SnowflakeOutputSecretsConfig); err != nil {
				dst.SnowflakeOutputSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SnowflakeOutputSecretsConfig = nil
	}

	// try to unmarshal data into SplunkSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.SplunkSecretsConfig)
	if err == nil {
		jsonSplunkSecretsConfig, _ := json.Marshal(dst.SplunkSecretsConfig)
		if string(jsonSplunkSecretsConfig) == "{}" { // empty struct
			dst.SplunkSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.SplunkSecretsConfig); err != nil {
				dst.SplunkSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SplunkSecretsConfig = nil
	}

	// try to unmarshal data into SumologicSecretsConfig
	err = newStrictDecoder(data).Decode(&dst.SumologicSecretsConfig)
	if err == nil {
		jsonSumologicSecretsConfig, _ := json.Marshal(dst.SumologicSecretsConfig)
		if string(jsonSumologicSecretsConfig) == "{}" { // empty struct
			dst.SumologicSecretsConfig = nil
		} else {
			if err = validator.Validate(dst.SumologicSecretsConfig); err != nil {
				dst.SumologicSecretsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SumologicSecretsConfig = nil
	}

	// try to unmarshal data into MapmapOfStringAny
	err = newStrictDecoder(data).Decode(&dst.MapmapOfStringAny)
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			if err = validator.Validate(dst.MapmapOfStringAny); err != nil {
				dst.MapmapOfStringAny = nil
			} else {
				match++
			}
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.BigquerySecretsConfig = nil
		dst.CriblHttpSecretsConfig = nil
		dst.ElasticsearchSecretsConfig = nil
		dst.HttpSecretsConfig = nil
		dst.NextGenSiemSecretsConfig = nil
		dst.ObjectStorageSecretsConfig = nil
		dst.OpensearchSecretsConfig = nil
		dst.PagerdutySecretsConfig = nil
		dst.PostgresqlSecretsConfig = nil
		dst.SentinelSecretsConfig = nil
		dst.SnowflakeOutputSecretsConfig = nil
		dst.SplunkSecretsConfig = nil
		dst.SumologicSecretsConfig = nil
		dst.MapmapOfStringAny = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SecretProcessesorOutputConfigSecrets)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SecretProcessesorOutputConfigSecrets)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SecretProcessesorOutputConfigSecrets) MarshalJSON() ([]byte, error) {
	if src.BigquerySecretsConfig != nil {
		return json.Marshal(&src.BigquerySecretsConfig)
	}

	if src.CriblHttpSecretsConfig != nil {
		return json.Marshal(&src.CriblHttpSecretsConfig)
	}

	if src.ElasticsearchSecretsConfig != nil {
		return json.Marshal(&src.ElasticsearchSecretsConfig)
	}

	if src.HttpSecretsConfig != nil {
		return json.Marshal(&src.HttpSecretsConfig)
	}

	if src.NextGenSiemSecretsConfig != nil {
		return json.Marshal(&src.NextGenSiemSecretsConfig)
	}

	if src.ObjectStorageSecretsConfig != nil {
		return json.Marshal(&src.ObjectStorageSecretsConfig)
	}

	if src.OpensearchSecretsConfig != nil {
		return json.Marshal(&src.OpensearchSecretsConfig)
	}

	if src.PagerdutySecretsConfig != nil {
		return json.Marshal(&src.PagerdutySecretsConfig)
	}

	if src.PostgresqlSecretsConfig != nil {
		return json.Marshal(&src.PostgresqlSecretsConfig)
	}

	if src.SentinelSecretsConfig != nil {
		return json.Marshal(&src.SentinelSecretsConfig)
	}

	if src.SnowflakeOutputSecretsConfig != nil {
		return json.Marshal(&src.SnowflakeOutputSecretsConfig)
	}

	if src.SplunkSecretsConfig != nil {
		return json.Marshal(&src.SplunkSecretsConfig)
	}

	if src.SumologicSecretsConfig != nil {
		return json.Marshal(&src.SumologicSecretsConfig)
	}

	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SecretProcessesorOutputConfigSecrets) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.BigquerySecretsConfig != nil {
		return obj.BigquerySecretsConfig
	}

	if obj.CriblHttpSecretsConfig != nil {
		return obj.CriblHttpSecretsConfig
	}

	if obj.ElasticsearchSecretsConfig != nil {
		return obj.ElasticsearchSecretsConfig
	}

	if obj.HttpSecretsConfig != nil {
		return obj.HttpSecretsConfig
	}

	if obj.NextGenSiemSecretsConfig != nil {
		return obj.NextGenSiemSecretsConfig
	}

	if obj.ObjectStorageSecretsConfig != nil {
		return obj.ObjectStorageSecretsConfig
	}

	if obj.OpensearchSecretsConfig != nil {
		return obj.OpensearchSecretsConfig
	}

	if obj.PagerdutySecretsConfig != nil {
		return obj.PagerdutySecretsConfig
	}

	if obj.PostgresqlSecretsConfig != nil {
		return obj.PostgresqlSecretsConfig
	}

	if obj.SentinelSecretsConfig != nil {
		return obj.SentinelSecretsConfig
	}

	if obj.SnowflakeOutputSecretsConfig != nil {
		return obj.SnowflakeOutputSecretsConfig
	}

	if obj.SplunkSecretsConfig != nil {
		return obj.SplunkSecretsConfig
	}

	if obj.SumologicSecretsConfig != nil {
		return obj.SumologicSecretsConfig
	}

	if obj.MapmapOfStringAny != nil {
		return obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj SecretProcessesorOutputConfigSecrets) GetActualInstanceValue() (interface{}) {
	if obj.BigquerySecretsConfig != nil {
		return *obj.BigquerySecretsConfig
	}

	if obj.CriblHttpSecretsConfig != nil {
		return *obj.CriblHttpSecretsConfig
	}

	if obj.ElasticsearchSecretsConfig != nil {
		return *obj.ElasticsearchSecretsConfig
	}

	if obj.HttpSecretsConfig != nil {
		return *obj.HttpSecretsConfig
	}

	if obj.NextGenSiemSecretsConfig != nil {
		return *obj.NextGenSiemSecretsConfig
	}

	if obj.ObjectStorageSecretsConfig != nil {
		return *obj.ObjectStorageSecretsConfig
	}

	if obj.OpensearchSecretsConfig != nil {
		return *obj.OpensearchSecretsConfig
	}

	if obj.PagerdutySecretsConfig != nil {
		return *obj.PagerdutySecretsConfig
	}

	if obj.PostgresqlSecretsConfig != nil {
		return *obj.PostgresqlSecretsConfig
	}

	if obj.SentinelSecretsConfig != nil {
		return *obj.SentinelSecretsConfig
	}

	if obj.SnowflakeOutputSecretsConfig != nil {
		return *obj.SnowflakeOutputSecretsConfig
	}

	if obj.SplunkSecretsConfig != nil {
		return *obj.SplunkSecretsConfig
	}

	if obj.SumologicSecretsConfig != nil {
		return *obj.SumologicSecretsConfig
	}

	if obj.MapmapOfStringAny != nil {
		return *obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

type NullableSecretProcessesorOutputConfigSecrets struct {
	value *SecretProcessesorOutputConfigSecrets
	isSet bool
}

func (v NullableSecretProcessesorOutputConfigSecrets) Get() *SecretProcessesorOutputConfigSecrets {
	return v.value
}

func (v *NullableSecretProcessesorOutputConfigSecrets) Set(val *SecretProcessesorOutputConfigSecrets) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretProcessesorOutputConfigSecrets) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretProcessesorOutputConfigSecrets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretProcessesorOutputConfigSecrets(val *SecretProcessesorOutputConfigSecrets) *NullableSecretProcessesorOutputConfigSecrets {
	return &NullableSecretProcessesorOutputConfigSecrets{value: val, isSet: true}
}

func (v NullableSecretProcessesorOutputConfigSecrets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretProcessesorOutputConfigSecrets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


