/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV2ApplyTransformationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2ApplyTransformationResponse{}

// RoutesV2ApplyTransformationResponse struct for RoutesV2ApplyTransformationResponse
type RoutesV2ApplyTransformationResponse struct {
	Records [][]int32 `json:"records,omitempty"`
}

// NewRoutesV2ApplyTransformationResponse instantiates a new RoutesV2ApplyTransformationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2ApplyTransformationResponse() *RoutesV2ApplyTransformationResponse {
	this := RoutesV2ApplyTransformationResponse{}
	return &this
}

// NewRoutesV2ApplyTransformationResponseWithDefaults instantiates a new RoutesV2ApplyTransformationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2ApplyTransformationResponseWithDefaults() *RoutesV2ApplyTransformationResponse {
	this := RoutesV2ApplyTransformationResponse{}
	return &this
}

// GetRecords returns the Records field value if set, zero value otherwise.
func (o *RoutesV2ApplyTransformationResponse) GetRecords() [][]int32 {
	if o == nil || IsNil(o.Records) {
		var ret [][]int32
		return ret
	}
	return o.Records
}

// GetRecordsOk returns a tuple with the Records field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2ApplyTransformationResponse) GetRecordsOk() ([][]int32, bool) {
	if o == nil || IsNil(o.Records) {
		return nil, false
	}
	return o.Records, true
}

// HasRecords returns a boolean if a field has been set.
func (o *RoutesV2ApplyTransformationResponse) HasRecords() bool {
	if o != nil && !IsNil(o.Records) {
		return true
	}

	return false
}

// SetRecords gets a reference to the given [][]int32 and assigns it to the Records field.
func (o *RoutesV2ApplyTransformationResponse) SetRecords(v [][]int32) {
	o.Records = v
}

func (o RoutesV2ApplyTransformationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2ApplyTransformationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Records) {
		toSerialize["records"] = o.Records
	}
	return toSerialize, nil
}

type NullableRoutesV2ApplyTransformationResponse struct {
	value *RoutesV2ApplyTransformationResponse
	isSet bool
}

func (v NullableRoutesV2ApplyTransformationResponse) Get() *RoutesV2ApplyTransformationResponse {
	return v.value
}

func (v *NullableRoutesV2ApplyTransformationResponse) Set(val *RoutesV2ApplyTransformationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2ApplyTransformationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2ApplyTransformationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2ApplyTransformationResponse(val *RoutesV2ApplyTransformationResponse) *NullableRoutesV2ApplyTransformationResponse {
	return &NullableRoutesV2ApplyTransformationResponse{value: val, isSet: true}
}

func (v NullableRoutesV2ApplyTransformationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2ApplyTransformationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


