/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsUserAuthProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsUserAuthProvider{}

// ModelsUserAuthProvider struct for ModelsUserAuthProvider
type ModelsUserAuthProvider struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Id *string `json:"id,omitempty"`
	Provider *string `json:"provider,omitempty"`
	ProviderId *string `json:"provider_id,omitempty"`
	UserId *string `json:"user_id,omitempty"`
}

// NewModelsUserAuthProvider instantiates a new ModelsUserAuthProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsUserAuthProvider() *ModelsUserAuthProvider {
	this := ModelsUserAuthProvider{}
	return &this
}

// NewModelsUserAuthProviderWithDefaults instantiates a new ModelsUserAuthProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsUserAuthProviderWithDefaults() *ModelsUserAuthProvider {
	this := ModelsUserAuthProvider{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsUserAuthProvider) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserAuthProvider) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsUserAuthProvider) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsUserAuthProvider) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsUserAuthProvider) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserAuthProvider) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsUserAuthProvider) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsUserAuthProvider) SetId(v string) {
	o.Id = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ModelsUserAuthProvider) GetProvider() string {
	if o == nil || IsNil(o.Provider) {
		var ret string
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserAuthProvider) GetProviderOk() (*string, bool) {
	if o == nil || IsNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ModelsUserAuthProvider) HasProvider() bool {
	if o != nil && !IsNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given string and assigns it to the Provider field.
func (o *ModelsUserAuthProvider) SetProvider(v string) {
	o.Provider = &v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise.
func (o *ModelsUserAuthProvider) GetProviderId() string {
	if o == nil || IsNil(o.ProviderId) {
		var ret string
		return ret
	}
	return *o.ProviderId
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserAuthProvider) GetProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProviderId) {
		return nil, false
	}
	return o.ProviderId, true
}

// HasProviderId returns a boolean if a field has been set.
func (o *ModelsUserAuthProvider) HasProviderId() bool {
	if o != nil && !IsNil(o.ProviderId) {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given string and assigns it to the ProviderId field.
func (o *ModelsUserAuthProvider) SetProviderId(v string) {
	o.ProviderId = &v
}

// GetUserId returns the UserId field value if set, zero value otherwise.
func (o *ModelsUserAuthProvider) GetUserId() string {
	if o == nil || IsNil(o.UserId) {
		var ret string
		return ret
	}
	return *o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsUserAuthProvider) GetUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.UserId) {
		return nil, false
	}
	return o.UserId, true
}

// HasUserId returns a boolean if a field has been set.
func (o *ModelsUserAuthProvider) HasUserId() bool {
	if o != nil && !IsNil(o.UserId) {
		return true
	}

	return false
}

// SetUserId gets a reference to the given string and assigns it to the UserId field.
func (o *ModelsUserAuthProvider) SetUserId(v string) {
	o.UserId = &v
}

func (o ModelsUserAuthProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsUserAuthProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Provider) {
		toSerialize["provider"] = o.Provider
	}
	if !IsNil(o.ProviderId) {
		toSerialize["provider_id"] = o.ProviderId
	}
	if !IsNil(o.UserId) {
		toSerialize["user_id"] = o.UserId
	}
	return toSerialize, nil
}

type NullableModelsUserAuthProvider struct {
	value *ModelsUserAuthProvider
	isSet bool
}

func (v NullableModelsUserAuthProvider) Get() *ModelsUserAuthProvider {
	return v.value
}

func (v *NullableModelsUserAuthProvider) Set(val *ModelsUserAuthProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsUserAuthProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsUserAuthProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsUserAuthProvider(val *ModelsUserAuthProvider) *NullableModelsUserAuthProvider {
	return &NullableModelsUserAuthProvider{value: val, isSet: true}
}

func (v NullableModelsUserAuthProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsUserAuthProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


