/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the BigquerySecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BigquerySecretsConfig{}

// BigquerySecretsConfig BigQuery Output Secrets
type BigquerySecretsConfig struct {
	Credentials *ModelsSecret `json:"credentials,omitempty"`
}

// NewBigquerySecretsConfig instantiates a new BigquerySecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBigquerySecretsConfig() *BigquerySecretsConfig {
	this := BigquerySecretsConfig{}
	return &this
}

// NewBigquerySecretsConfigWithDefaults instantiates a new BigquerySecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBigquerySecretsConfigWithDefaults() *BigquerySecretsConfig {
	this := BigquerySecretsConfig{}
	return &this
}

// GetCredentials returns the Credentials field value if set, zero value otherwise.
func (o *BigquerySecretsConfig) GetCredentials() ModelsSecret {
	if o == nil || IsNil(o.Credentials) {
		var ret ModelsSecret
		return ret
	}
	return *o.Credentials
}

// GetCredentialsOk returns a tuple with the Credentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BigquerySecretsConfig) GetCredentialsOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.Credentials) {
		return nil, false
	}
	return o.Credentials, true
}

// HasCredentials returns a boolean if a field has been set.
func (o *BigquerySecretsConfig) HasCredentials() bool {
	if o != nil && !IsNil(o.Credentials) {
		return true
	}

	return false
}

// SetCredentials gets a reference to the given ModelsSecret and assigns it to the Credentials field.
func (o *BigquerySecretsConfig) SetCredentials(v ModelsSecret) {
	o.Credentials = &v
}

func (o BigquerySecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BigquerySecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Credentials) {
		toSerialize["credentials"] = o.Credentials
	}
	return toSerialize, nil
}

type NullableBigquerySecretsConfig struct {
	value *BigquerySecretsConfig
	isSet bool
}

func (v NullableBigquerySecretsConfig) Get() *BigquerySecretsConfig {
	return v.value
}

func (v *NullableBigquerySecretsConfig) Set(val *BigquerySecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBigquerySecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBigquerySecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBigquerySecretsConfig(val *BigquerySecretsConfig) *NullableBigquerySecretsConfig {
	return &NullableBigquerySecretsConfig{value: val, isSet: true}
}

func (v NullableBigquerySecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBigquerySecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


