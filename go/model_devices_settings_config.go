/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the DevicesSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevicesSettingsConfig{}

// DevicesSettingsConfig Tailscale Devices settings
type DevicesSettingsConfig struct {
	// Cron expression for scheduling the input
	Cron *string `json:"cron,omitempty"`
	FieldOption *string `json:"field_option,omitempty"`
	// The tailnet organization name. Defaults to \"-\" to reference the default organization.
	OrganizationId *string `json:"organization_id,omitempty"`
}

// NewDevicesSettingsConfig instantiates a new DevicesSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevicesSettingsConfig() *DevicesSettingsConfig {
	this := DevicesSettingsConfig{}
	return &this
}

// NewDevicesSettingsConfigWithDefaults instantiates a new DevicesSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevicesSettingsConfigWithDefaults() *DevicesSettingsConfig {
	this := DevicesSettingsConfig{}
	return &this
}

// GetCron returns the Cron field value if set, zero value otherwise.
func (o *DevicesSettingsConfig) GetCron() string {
	if o == nil || IsNil(o.Cron) {
		var ret string
		return ret
	}
	return *o.Cron
}

// GetCronOk returns a tuple with the Cron field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesSettingsConfig) GetCronOk() (*string, bool) {
	if o == nil || IsNil(o.Cron) {
		return nil, false
	}
	return o.Cron, true
}

// HasCron returns a boolean if a field has been set.
func (o *DevicesSettingsConfig) HasCron() bool {
	if o != nil && !IsNil(o.Cron) {
		return true
	}

	return false
}

// SetCron gets a reference to the given string and assigns it to the Cron field.
func (o *DevicesSettingsConfig) SetCron(v string) {
	o.Cron = &v
}

// GetFieldOption returns the FieldOption field value if set, zero value otherwise.
func (o *DevicesSettingsConfig) GetFieldOption() string {
	if o == nil || IsNil(o.FieldOption) {
		var ret string
		return ret
	}
	return *o.FieldOption
}

// GetFieldOptionOk returns a tuple with the FieldOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesSettingsConfig) GetFieldOptionOk() (*string, bool) {
	if o == nil || IsNil(o.FieldOption) {
		return nil, false
	}
	return o.FieldOption, true
}

// HasFieldOption returns a boolean if a field has been set.
func (o *DevicesSettingsConfig) HasFieldOption() bool {
	if o != nil && !IsNil(o.FieldOption) {
		return true
	}

	return false
}

// SetFieldOption gets a reference to the given string and assigns it to the FieldOption field.
func (o *DevicesSettingsConfig) SetFieldOption(v string) {
	o.FieldOption = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *DevicesSettingsConfig) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevicesSettingsConfig) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *DevicesSettingsConfig) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *DevicesSettingsConfig) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

func (o DevicesSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevicesSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cron) {
		toSerialize["cron"] = o.Cron
	}
	if !IsNil(o.FieldOption) {
		toSerialize["field_option"] = o.FieldOption
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	return toSerialize, nil
}

type NullableDevicesSettingsConfig struct {
	value *DevicesSettingsConfig
	isSet bool
}

func (v NullableDevicesSettingsConfig) Get() *DevicesSettingsConfig {
	return v.value
}

func (v *NullableDevicesSettingsConfig) Set(val *DevicesSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableDevicesSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableDevicesSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevicesSettingsConfig(val *DevicesSettingsConfig) *NullableDevicesSettingsConfig {
	return &NullableDevicesSettingsConfig{value: val, isSet: true}
}

func (v NullableDevicesSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevicesSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


