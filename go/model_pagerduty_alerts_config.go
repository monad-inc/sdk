/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the PagerdutyAlertsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PagerdutyAlertsConfig{}

// PagerdutyAlertsConfig AlertsConfig contains configuration options that apply only when EventType is set to 'alert'
type PagerdutyAlertsConfig struct {
	// Class defines the class/type of the event based on the input source. Defaults to an empty value.
	Class *string `json:"class,omitempty"`
	// A cluster or grouping of sources. For example, sources \\\"prod-datapipe-02\\\" and \\\"prod-datapipe-03\\\" might both be part of \\\"prod-datapipe\\\". Applicable if event type is set to alerts. Defaults to an empty value.
	Group *string `json:"group,omitempty"`
	// Indicates the severity of the impact to the affected system. Applicable for you if event type is set to alerts. Defaults to 'critical'.
	Severity *string `json:"severity,omitempty"`
}

// NewPagerdutyAlertsConfig instantiates a new PagerdutyAlertsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagerdutyAlertsConfig() *PagerdutyAlertsConfig {
	this := PagerdutyAlertsConfig{}
	return &this
}

// NewPagerdutyAlertsConfigWithDefaults instantiates a new PagerdutyAlertsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagerdutyAlertsConfigWithDefaults() *PagerdutyAlertsConfig {
	this := PagerdutyAlertsConfig{}
	return &this
}

// GetClass returns the Class field value if set, zero value otherwise.
func (o *PagerdutyAlertsConfig) GetClass() string {
	if o == nil || IsNil(o.Class) {
		var ret string
		return ret
	}
	return *o.Class
}

// GetClassOk returns a tuple with the Class field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerdutyAlertsConfig) GetClassOk() (*string, bool) {
	if o == nil || IsNil(o.Class) {
		return nil, false
	}
	return o.Class, true
}

// HasClass returns a boolean if a field has been set.
func (o *PagerdutyAlertsConfig) HasClass() bool {
	if o != nil && !IsNil(o.Class) {
		return true
	}

	return false
}

// SetClass gets a reference to the given string and assigns it to the Class field.
func (o *PagerdutyAlertsConfig) SetClass(v string) {
	o.Class = &v
}

// GetGroup returns the Group field value if set, zero value otherwise.
func (o *PagerdutyAlertsConfig) GetGroup() string {
	if o == nil || IsNil(o.Group) {
		var ret string
		return ret
	}
	return *o.Group
}

// GetGroupOk returns a tuple with the Group field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerdutyAlertsConfig) GetGroupOk() (*string, bool) {
	if o == nil || IsNil(o.Group) {
		return nil, false
	}
	return o.Group, true
}

// HasGroup returns a boolean if a field has been set.
func (o *PagerdutyAlertsConfig) HasGroup() bool {
	if o != nil && !IsNil(o.Group) {
		return true
	}

	return false
}

// SetGroup gets a reference to the given string and assigns it to the Group field.
func (o *PagerdutyAlertsConfig) SetGroup(v string) {
	o.Group = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *PagerdutyAlertsConfig) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagerdutyAlertsConfig) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *PagerdutyAlertsConfig) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *PagerdutyAlertsConfig) SetSeverity(v string) {
	o.Severity = &v
}

func (o PagerdutyAlertsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PagerdutyAlertsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Class) {
		toSerialize["class"] = o.Class
	}
	if !IsNil(o.Group) {
		toSerialize["group"] = o.Group
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	return toSerialize, nil
}

type NullablePagerdutyAlertsConfig struct {
	value *PagerdutyAlertsConfig
	isSet bool
}

func (v NullablePagerdutyAlertsConfig) Get() *PagerdutyAlertsConfig {
	return v.value
}

func (v *NullablePagerdutyAlertsConfig) Set(val *PagerdutyAlertsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullablePagerdutyAlertsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullablePagerdutyAlertsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagerdutyAlertsConfig(val *PagerdutyAlertsConfig) *NullablePagerdutyAlertsConfig {
	return &NullablePagerdutyAlertsConfig{value: val, isSet: true}
}

func (v NullablePagerdutyAlertsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagerdutyAlertsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


