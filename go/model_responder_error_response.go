/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ResponderErrorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResponderErrorResponse{}

// ResponderErrorResponse struct for ResponderErrorResponse
type ResponderErrorResponse struct {
	AdditionalDetails interface{} `json:"additional_details,omitempty"`
	Code *int32 `json:"code,omitempty"`
	Error *string `json:"error,omitempty"`
}

// NewResponderErrorResponse instantiates a new ResponderErrorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponderErrorResponse() *ResponderErrorResponse {
	this := ResponderErrorResponse{}
	return &this
}

// NewResponderErrorResponseWithDefaults instantiates a new ResponderErrorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponderErrorResponseWithDefaults() *ResponderErrorResponse {
	this := ResponderErrorResponse{}
	return &this
}

// GetAdditionalDetails returns the AdditionalDetails field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ResponderErrorResponse) GetAdditionalDetails() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.AdditionalDetails
}

// GetAdditionalDetailsOk returns a tuple with the AdditionalDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ResponderErrorResponse) GetAdditionalDetailsOk() (*interface{}, bool) {
	if o == nil || IsNil(o.AdditionalDetails) {
		return nil, false
	}
	return &o.AdditionalDetails, true
}

// HasAdditionalDetails returns a boolean if a field has been set.
func (o *ResponderErrorResponse) HasAdditionalDetails() bool {
	if o != nil && !IsNil(o.AdditionalDetails) {
		return true
	}

	return false
}

// SetAdditionalDetails gets a reference to the given interface{} and assigns it to the AdditionalDetails field.
func (o *ResponderErrorResponse) SetAdditionalDetails(v interface{}) {
	o.AdditionalDetails = v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ResponderErrorResponse) GetCode() int32 {
	if o == nil || IsNil(o.Code) {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponderErrorResponse) GetCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.Code) {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ResponderErrorResponse) HasCode() bool {
	if o != nil && !IsNil(o.Code) {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *ResponderErrorResponse) SetCode(v int32) {
	o.Code = &v
}

// GetError returns the Error field value if set, zero value otherwise.
func (o *ResponderErrorResponse) GetError() string {
	if o == nil || IsNil(o.Error) {
		var ret string
		return ret
	}
	return *o.Error
}

// GetErrorOk returns a tuple with the Error field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponderErrorResponse) GetErrorOk() (*string, bool) {
	if o == nil || IsNil(o.Error) {
		return nil, false
	}
	return o.Error, true
}

// HasError returns a boolean if a field has been set.
func (o *ResponderErrorResponse) HasError() bool {
	if o != nil && !IsNil(o.Error) {
		return true
	}

	return false
}

// SetError gets a reference to the given string and assigns it to the Error field.
func (o *ResponderErrorResponse) SetError(v string) {
	o.Error = &v
}

func (o ResponderErrorResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResponderErrorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.AdditionalDetails != nil {
		toSerialize["additional_details"] = o.AdditionalDetails
	}
	if !IsNil(o.Code) {
		toSerialize["code"] = o.Code
	}
	if !IsNil(o.Error) {
		toSerialize["error"] = o.Error
	}
	return toSerialize, nil
}

type NullableResponderErrorResponse struct {
	value *ResponderErrorResponse
	isSet bool
}

func (v NullableResponderErrorResponse) Get() *ResponderErrorResponse {
	return v.value
}

func (v *NullableResponderErrorResponse) Set(val *ResponderErrorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableResponderErrorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableResponderErrorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponderErrorResponse(val *ResponderErrorResponse) *NullableResponderErrorResponse {
	return &NullableResponderErrorResponse{value: val, isSet: true}
}

func (v NullableResponderErrorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponderErrorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


