/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the LogAnalyticsQuerySettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LogAnalyticsQuerySettingsConfig{}

// LogAnalyticsQuerySettingsConfig Microsoft Log Analytics Query settings
type LogAnalyticsQuerySettingsConfig struct {
	// The query to run against the Log Analytics workspace
	Query *string `json:"query,omitempty"`
	// The tenant ID of the Azure AD application
	TenantId *string `json:"tenant_id,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
	// The workspace ID of the Log Analytics workspace
	WorkspaceId *string `json:"workspace_id,omitempty"`
}

// NewLogAnalyticsQuerySettingsConfig instantiates a new LogAnalyticsQuerySettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLogAnalyticsQuerySettingsConfig() *LogAnalyticsQuerySettingsConfig {
	this := LogAnalyticsQuerySettingsConfig{}
	return &this
}

// NewLogAnalyticsQuerySettingsConfigWithDefaults instantiates a new LogAnalyticsQuerySettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLogAnalyticsQuerySettingsConfigWithDefaults() *LogAnalyticsQuerySettingsConfig {
	this := LogAnalyticsQuerySettingsConfig{}
	return &this
}

// GetQuery returns the Query field value if set, zero value otherwise.
func (o *LogAnalyticsQuerySettingsConfig) GetQuery() string {
	if o == nil || IsNil(o.Query) {
		var ret string
		return ret
	}
	return *o.Query
}

// GetQueryOk returns a tuple with the Query field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogAnalyticsQuerySettingsConfig) GetQueryOk() (*string, bool) {
	if o == nil || IsNil(o.Query) {
		return nil, false
	}
	return o.Query, true
}

// HasQuery returns a boolean if a field has been set.
func (o *LogAnalyticsQuerySettingsConfig) HasQuery() bool {
	if o != nil && !IsNil(o.Query) {
		return true
	}

	return false
}

// SetQuery gets a reference to the given string and assigns it to the Query field.
func (o *LogAnalyticsQuerySettingsConfig) SetQuery(v string) {
	o.Query = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *LogAnalyticsQuerySettingsConfig) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogAnalyticsQuerySettingsConfig) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *LogAnalyticsQuerySettingsConfig) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *LogAnalyticsQuerySettingsConfig) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *LogAnalyticsQuerySettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogAnalyticsQuerySettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *LogAnalyticsQuerySettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *LogAnalyticsQuerySettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

// GetWorkspaceId returns the WorkspaceId field value if set, zero value otherwise.
func (o *LogAnalyticsQuerySettingsConfig) GetWorkspaceId() string {
	if o == nil || IsNil(o.WorkspaceId) {
		var ret string
		return ret
	}
	return *o.WorkspaceId
}

// GetWorkspaceIdOk returns a tuple with the WorkspaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LogAnalyticsQuerySettingsConfig) GetWorkspaceIdOk() (*string, bool) {
	if o == nil || IsNil(o.WorkspaceId) {
		return nil, false
	}
	return o.WorkspaceId, true
}

// HasWorkspaceId returns a boolean if a field has been set.
func (o *LogAnalyticsQuerySettingsConfig) HasWorkspaceId() bool {
	if o != nil && !IsNil(o.WorkspaceId) {
		return true
	}

	return false
}

// SetWorkspaceId gets a reference to the given string and assigns it to the WorkspaceId field.
func (o *LogAnalyticsQuerySettingsConfig) SetWorkspaceId(v string) {
	o.WorkspaceId = &v
}

func (o LogAnalyticsQuerySettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LogAnalyticsQuerySettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Query) {
		toSerialize["query"] = o.Query
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	if !IsNil(o.WorkspaceId) {
		toSerialize["workspace_id"] = o.WorkspaceId
	}
	return toSerialize, nil
}

type NullableLogAnalyticsQuerySettingsConfig struct {
	value *LogAnalyticsQuerySettingsConfig
	isSet bool
}

func (v NullableLogAnalyticsQuerySettingsConfig) Get() *LogAnalyticsQuerySettingsConfig {
	return v.value
}

func (v *NullableLogAnalyticsQuerySettingsConfig) Set(val *LogAnalyticsQuerySettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableLogAnalyticsQuerySettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableLogAnalyticsQuerySettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLogAnalyticsQuerySettingsConfig(val *LogAnalyticsQuerySettingsConfig) *NullableLogAnalyticsQuerySettingsConfig {
	return &NullableLogAnalyticsQuerySettingsConfig{value: val, isSet: true}
}

func (v NullableLogAnalyticsQuerySettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLogAnalyticsQuerySettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


