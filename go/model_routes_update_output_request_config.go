/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesUpdateOutputRequestConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesUpdateOutputRequestConfig{}

// RoutesUpdateOutputRequestConfig struct for RoutesUpdateOutputRequestConfig
type RoutesUpdateOutputRequestConfig struct {
	Secrets map[string]interface{} `json:"secrets,omitempty"`
	Settings map[string]interface{} `json:"settings,omitempty"`
}

// NewRoutesUpdateOutputRequestConfig instantiates a new RoutesUpdateOutputRequestConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesUpdateOutputRequestConfig() *RoutesUpdateOutputRequestConfig {
	this := RoutesUpdateOutputRequestConfig{}
	return &this
}

// NewRoutesUpdateOutputRequestConfigWithDefaults instantiates a new RoutesUpdateOutputRequestConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesUpdateOutputRequestConfigWithDefaults() *RoutesUpdateOutputRequestConfig {
	this := RoutesUpdateOutputRequestConfig{}
	return &this
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *RoutesUpdateOutputRequestConfig) GetSecrets() map[string]interface{} {
	if o == nil || IsNil(o.Secrets) {
		var ret map[string]interface{}
		return ret
	}
	return o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesUpdateOutputRequestConfig) GetSecretsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Secrets) {
		return map[string]interface{}{}, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *RoutesUpdateOutputRequestConfig) HasSecrets() bool {
	if o != nil && !IsNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given map[string]interface{} and assigns it to the Secrets field.
func (o *RoutesUpdateOutputRequestConfig) SetSecrets(v map[string]interface{}) {
	o.Secrets = v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *RoutesUpdateOutputRequestConfig) GetSettings() map[string]interface{} {
	if o == nil || IsNil(o.Settings) {
		var ret map[string]interface{}
		return ret
	}
	return o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesUpdateOutputRequestConfig) GetSettingsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Settings) {
		return map[string]interface{}{}, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *RoutesUpdateOutputRequestConfig) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given map[string]interface{} and assigns it to the Settings field.
func (o *RoutesUpdateOutputRequestConfig) SetSettings(v map[string]interface{}) {
	o.Settings = v
}

func (o RoutesUpdateOutputRequestConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesUpdateOutputRequestConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableRoutesUpdateOutputRequestConfig struct {
	value *RoutesUpdateOutputRequestConfig
	isSet bool
}

func (v NullableRoutesUpdateOutputRequestConfig) Get() *RoutesUpdateOutputRequestConfig {
	return v.value
}

func (v *NullableRoutesUpdateOutputRequestConfig) Set(val *RoutesUpdateOutputRequestConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesUpdateOutputRequestConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesUpdateOutputRequestConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesUpdateOutputRequestConfig(val *RoutesUpdateOutputRequestConfig) *NullableRoutesUpdateOutputRequestConfig {
	return &NullableRoutesUpdateOutputRequestConfig{value: val, isSet: true}
}

func (v NullableRoutesUpdateOutputRequestConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesUpdateOutputRequestConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


