/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the CommunityEditionSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommunityEditionSettingsConfig{}

// CommunityEditionSettingsConfig GreyNoise Community Edition settings
type CommunityEditionSettingsConfig struct {
	// DestinationPath is the path where the GreyNoise data will be stored
	DestinationPath *string `json:"destination_path,omitempty"`
	// ErrorOnRateLimit determines if rate limiting should cause an error (true) or return custom response (false)
	ErrorOnRateLimit *bool `json:"error_on_rate_limit,omitempty"`
	// IPFieldPath is the path to the IP address field in the record
	IpFieldPath *string `json:"ip_field_path,omitempty"`
	// NoMatchResponse is the value to add when no match is found
	NoMatchResponse *string `json:"no_match_response,omitempty"`
	// RateLimitResponse is the value to add when rate limited
	RateLimitResponse *string `json:"rate_limit_response,omitempty"`
}

// NewCommunityEditionSettingsConfig instantiates a new CommunityEditionSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommunityEditionSettingsConfig() *CommunityEditionSettingsConfig {
	this := CommunityEditionSettingsConfig{}
	return &this
}

// NewCommunityEditionSettingsConfigWithDefaults instantiates a new CommunityEditionSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommunityEditionSettingsConfigWithDefaults() *CommunityEditionSettingsConfig {
	this := CommunityEditionSettingsConfig{}
	return &this
}

// GetDestinationPath returns the DestinationPath field value if set, zero value otherwise.
func (o *CommunityEditionSettingsConfig) GetDestinationPath() string {
	if o == nil || IsNil(o.DestinationPath) {
		var ret string
		return ret
	}
	return *o.DestinationPath
}

// GetDestinationPathOk returns a tuple with the DestinationPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunityEditionSettingsConfig) GetDestinationPathOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationPath) {
		return nil, false
	}
	return o.DestinationPath, true
}

// HasDestinationPath returns a boolean if a field has been set.
func (o *CommunityEditionSettingsConfig) HasDestinationPath() bool {
	if o != nil && !IsNil(o.DestinationPath) {
		return true
	}

	return false
}

// SetDestinationPath gets a reference to the given string and assigns it to the DestinationPath field.
func (o *CommunityEditionSettingsConfig) SetDestinationPath(v string) {
	o.DestinationPath = &v
}

// GetErrorOnRateLimit returns the ErrorOnRateLimit field value if set, zero value otherwise.
func (o *CommunityEditionSettingsConfig) GetErrorOnRateLimit() bool {
	if o == nil || IsNil(o.ErrorOnRateLimit) {
		var ret bool
		return ret
	}
	return *o.ErrorOnRateLimit
}

// GetErrorOnRateLimitOk returns a tuple with the ErrorOnRateLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunityEditionSettingsConfig) GetErrorOnRateLimitOk() (*bool, bool) {
	if o == nil || IsNil(o.ErrorOnRateLimit) {
		return nil, false
	}
	return o.ErrorOnRateLimit, true
}

// HasErrorOnRateLimit returns a boolean if a field has been set.
func (o *CommunityEditionSettingsConfig) HasErrorOnRateLimit() bool {
	if o != nil && !IsNil(o.ErrorOnRateLimit) {
		return true
	}

	return false
}

// SetErrorOnRateLimit gets a reference to the given bool and assigns it to the ErrorOnRateLimit field.
func (o *CommunityEditionSettingsConfig) SetErrorOnRateLimit(v bool) {
	o.ErrorOnRateLimit = &v
}

// GetIpFieldPath returns the IpFieldPath field value if set, zero value otherwise.
func (o *CommunityEditionSettingsConfig) GetIpFieldPath() string {
	if o == nil || IsNil(o.IpFieldPath) {
		var ret string
		return ret
	}
	return *o.IpFieldPath
}

// GetIpFieldPathOk returns a tuple with the IpFieldPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunityEditionSettingsConfig) GetIpFieldPathOk() (*string, bool) {
	if o == nil || IsNil(o.IpFieldPath) {
		return nil, false
	}
	return o.IpFieldPath, true
}

// HasIpFieldPath returns a boolean if a field has been set.
func (o *CommunityEditionSettingsConfig) HasIpFieldPath() bool {
	if o != nil && !IsNil(o.IpFieldPath) {
		return true
	}

	return false
}

// SetIpFieldPath gets a reference to the given string and assigns it to the IpFieldPath field.
func (o *CommunityEditionSettingsConfig) SetIpFieldPath(v string) {
	o.IpFieldPath = &v
}

// GetNoMatchResponse returns the NoMatchResponse field value if set, zero value otherwise.
func (o *CommunityEditionSettingsConfig) GetNoMatchResponse() string {
	if o == nil || IsNil(o.NoMatchResponse) {
		var ret string
		return ret
	}
	return *o.NoMatchResponse
}

// GetNoMatchResponseOk returns a tuple with the NoMatchResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunityEditionSettingsConfig) GetNoMatchResponseOk() (*string, bool) {
	if o == nil || IsNil(o.NoMatchResponse) {
		return nil, false
	}
	return o.NoMatchResponse, true
}

// HasNoMatchResponse returns a boolean if a field has been set.
func (o *CommunityEditionSettingsConfig) HasNoMatchResponse() bool {
	if o != nil && !IsNil(o.NoMatchResponse) {
		return true
	}

	return false
}

// SetNoMatchResponse gets a reference to the given string and assigns it to the NoMatchResponse field.
func (o *CommunityEditionSettingsConfig) SetNoMatchResponse(v string) {
	o.NoMatchResponse = &v
}

// GetRateLimitResponse returns the RateLimitResponse field value if set, zero value otherwise.
func (o *CommunityEditionSettingsConfig) GetRateLimitResponse() string {
	if o == nil || IsNil(o.RateLimitResponse) {
		var ret string
		return ret
	}
	return *o.RateLimitResponse
}

// GetRateLimitResponseOk returns a tuple with the RateLimitResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommunityEditionSettingsConfig) GetRateLimitResponseOk() (*string, bool) {
	if o == nil || IsNil(o.RateLimitResponse) {
		return nil, false
	}
	return o.RateLimitResponse, true
}

// HasRateLimitResponse returns a boolean if a field has been set.
func (o *CommunityEditionSettingsConfig) HasRateLimitResponse() bool {
	if o != nil && !IsNil(o.RateLimitResponse) {
		return true
	}

	return false
}

// SetRateLimitResponse gets a reference to the given string and assigns it to the RateLimitResponse field.
func (o *CommunityEditionSettingsConfig) SetRateLimitResponse(v string) {
	o.RateLimitResponse = &v
}

func (o CommunityEditionSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommunityEditionSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationPath) {
		toSerialize["destination_path"] = o.DestinationPath
	}
	if !IsNil(o.ErrorOnRateLimit) {
		toSerialize["error_on_rate_limit"] = o.ErrorOnRateLimit
	}
	if !IsNil(o.IpFieldPath) {
		toSerialize["ip_field_path"] = o.IpFieldPath
	}
	if !IsNil(o.NoMatchResponse) {
		toSerialize["no_match_response"] = o.NoMatchResponse
	}
	if !IsNil(o.RateLimitResponse) {
		toSerialize["rate_limit_response"] = o.RateLimitResponse
	}
	return toSerialize, nil
}

type NullableCommunityEditionSettingsConfig struct {
	value *CommunityEditionSettingsConfig
	isSet bool
}

func (v NullableCommunityEditionSettingsConfig) Get() *CommunityEditionSettingsConfig {
	return v.value
}

func (v *NullableCommunityEditionSettingsConfig) Set(val *CommunityEditionSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableCommunityEditionSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableCommunityEditionSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommunityEditionSettingsConfig(val *CommunityEditionSettingsConfig) *NullableCommunityEditionSettingsConfig {
	return &NullableCommunityEditionSettingsConfig{value: val, isSet: true}
}

func (v NullableCommunityEditionSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommunityEditionSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


