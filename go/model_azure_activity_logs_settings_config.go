/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the AzureActivityLogsSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AzureActivityLogsSettingsConfig{}

// AzureActivityLogsSettingsConfig Microsoft Azure Activity Logs settings
type AzureActivityLogsSettingsConfig struct {
	// The correlation ID of the log
	CorrelationId *string `json:"correlation_id,omitempty"`
	// The name of the resource group
	ResourceGroupName *string `json:"resource_group_name,omitempty"`
	// The provider of the resource
	ResourceProvider *string `json:"resource_provider,omitempty"`
	// The URI of the resource
	ResourceUri *string `json:"resource_uri,omitempty"`
	// The subscription ID of the Azure subscription
	SubscriptionId *string `json:"subscription_id,omitempty"`
	// The tenant ID of the Azure AD application
	TenantId *string `json:"tenant_id,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
}

// NewAzureActivityLogsSettingsConfig instantiates a new AzureActivityLogsSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAzureActivityLogsSettingsConfig() *AzureActivityLogsSettingsConfig {
	this := AzureActivityLogsSettingsConfig{}
	return &this
}

// NewAzureActivityLogsSettingsConfigWithDefaults instantiates a new AzureActivityLogsSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAzureActivityLogsSettingsConfigWithDefaults() *AzureActivityLogsSettingsConfig {
	this := AzureActivityLogsSettingsConfig{}
	return &this
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *AzureActivityLogsSettingsConfig) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureActivityLogsSettingsConfig) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *AzureActivityLogsSettingsConfig) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *AzureActivityLogsSettingsConfig) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetResourceGroupName returns the ResourceGroupName field value if set, zero value otherwise.
func (o *AzureActivityLogsSettingsConfig) GetResourceGroupName() string {
	if o == nil || IsNil(o.ResourceGroupName) {
		var ret string
		return ret
	}
	return *o.ResourceGroupName
}

// GetResourceGroupNameOk returns a tuple with the ResourceGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureActivityLogsSettingsConfig) GetResourceGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceGroupName) {
		return nil, false
	}
	return o.ResourceGroupName, true
}

// HasResourceGroupName returns a boolean if a field has been set.
func (o *AzureActivityLogsSettingsConfig) HasResourceGroupName() bool {
	if o != nil && !IsNil(o.ResourceGroupName) {
		return true
	}

	return false
}

// SetResourceGroupName gets a reference to the given string and assigns it to the ResourceGroupName field.
func (o *AzureActivityLogsSettingsConfig) SetResourceGroupName(v string) {
	o.ResourceGroupName = &v
}

// GetResourceProvider returns the ResourceProvider field value if set, zero value otherwise.
func (o *AzureActivityLogsSettingsConfig) GetResourceProvider() string {
	if o == nil || IsNil(o.ResourceProvider) {
		var ret string
		return ret
	}
	return *o.ResourceProvider
}

// GetResourceProviderOk returns a tuple with the ResourceProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureActivityLogsSettingsConfig) GetResourceProviderOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceProvider) {
		return nil, false
	}
	return o.ResourceProvider, true
}

// HasResourceProvider returns a boolean if a field has been set.
func (o *AzureActivityLogsSettingsConfig) HasResourceProvider() bool {
	if o != nil && !IsNil(o.ResourceProvider) {
		return true
	}

	return false
}

// SetResourceProvider gets a reference to the given string and assigns it to the ResourceProvider field.
func (o *AzureActivityLogsSettingsConfig) SetResourceProvider(v string) {
	o.ResourceProvider = &v
}

// GetResourceUri returns the ResourceUri field value if set, zero value otherwise.
func (o *AzureActivityLogsSettingsConfig) GetResourceUri() string {
	if o == nil || IsNil(o.ResourceUri) {
		var ret string
		return ret
	}
	return *o.ResourceUri
}

// GetResourceUriOk returns a tuple with the ResourceUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureActivityLogsSettingsConfig) GetResourceUriOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceUri) {
		return nil, false
	}
	return o.ResourceUri, true
}

// HasResourceUri returns a boolean if a field has been set.
func (o *AzureActivityLogsSettingsConfig) HasResourceUri() bool {
	if o != nil && !IsNil(o.ResourceUri) {
		return true
	}

	return false
}

// SetResourceUri gets a reference to the given string and assigns it to the ResourceUri field.
func (o *AzureActivityLogsSettingsConfig) SetResourceUri(v string) {
	o.ResourceUri = &v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *AzureActivityLogsSettingsConfig) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureActivityLogsSettingsConfig) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *AzureActivityLogsSettingsConfig) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *AzureActivityLogsSettingsConfig) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *AzureActivityLogsSettingsConfig) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureActivityLogsSettingsConfig) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *AzureActivityLogsSettingsConfig) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *AzureActivityLogsSettingsConfig) SetTenantId(v string) {
	o.TenantId = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *AzureActivityLogsSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AzureActivityLogsSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *AzureActivityLogsSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *AzureActivityLogsSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

func (o AzureActivityLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AzureActivityLogsSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlation_id"] = o.CorrelationId
	}
	if !IsNil(o.ResourceGroupName) {
		toSerialize["resource_group_name"] = o.ResourceGroupName
	}
	if !IsNil(o.ResourceProvider) {
		toSerialize["resource_provider"] = o.ResourceProvider
	}
	if !IsNil(o.ResourceUri) {
		toSerialize["resource_uri"] = o.ResourceUri
	}
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscription_id"] = o.SubscriptionId
	}
	if !IsNil(o.TenantId) {
		toSerialize["tenant_id"] = o.TenantId
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	return toSerialize, nil
}

type NullableAzureActivityLogsSettingsConfig struct {
	value *AzureActivityLogsSettingsConfig
	isSet bool
}

func (v NullableAzureActivityLogsSettingsConfig) Get() *AzureActivityLogsSettingsConfig {
	return v.value
}

func (v *NullableAzureActivityLogsSettingsConfig) Set(val *AzureActivityLogsSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAzureActivityLogsSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAzureActivityLogsSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAzureActivityLogsSettingsConfig(val *AzureActivityLogsSettingsConfig) *NullableAzureActivityLogsSettingsConfig {
	return &NullableAzureActivityLogsSettingsConfig{value: val, isSet: true}
}

func (v NullableAzureActivityLogsSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAzureActivityLogsSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


