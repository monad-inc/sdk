/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the FullScansSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullScansSettingsConfig{}

// FullScansSettingsConfig Socket Full Scans settings
type FullScansSettingsConfig struct {
	// Cron expression for scheduling the input
	OrgSlug *string `json:"org_slug,omitempty"`
	// A repository slug to filter full-scans by.
	Repo *string `json:"repo,omitempty"`
	// Generate synthetic demo data instead of connecting to the real data source.
	UseSyntheticData *bool `json:"use_synthetic_data,omitempty"`
}

// NewFullScansSettingsConfig instantiates a new FullScansSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullScansSettingsConfig() *FullScansSettingsConfig {
	this := FullScansSettingsConfig{}
	return &this
}

// NewFullScansSettingsConfigWithDefaults instantiates a new FullScansSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullScansSettingsConfigWithDefaults() *FullScansSettingsConfig {
	this := FullScansSettingsConfig{}
	return &this
}

// GetOrgSlug returns the OrgSlug field value if set, zero value otherwise.
func (o *FullScansSettingsConfig) GetOrgSlug() string {
	if o == nil || IsNil(o.OrgSlug) {
		var ret string
		return ret
	}
	return *o.OrgSlug
}

// GetOrgSlugOk returns a tuple with the OrgSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullScansSettingsConfig) GetOrgSlugOk() (*string, bool) {
	if o == nil || IsNil(o.OrgSlug) {
		return nil, false
	}
	return o.OrgSlug, true
}

// HasOrgSlug returns a boolean if a field has been set.
func (o *FullScansSettingsConfig) HasOrgSlug() bool {
	if o != nil && !IsNil(o.OrgSlug) {
		return true
	}

	return false
}

// SetOrgSlug gets a reference to the given string and assigns it to the OrgSlug field.
func (o *FullScansSettingsConfig) SetOrgSlug(v string) {
	o.OrgSlug = &v
}

// GetRepo returns the Repo field value if set, zero value otherwise.
func (o *FullScansSettingsConfig) GetRepo() string {
	if o == nil || IsNil(o.Repo) {
		var ret string
		return ret
	}
	return *o.Repo
}

// GetRepoOk returns a tuple with the Repo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullScansSettingsConfig) GetRepoOk() (*string, bool) {
	if o == nil || IsNil(o.Repo) {
		return nil, false
	}
	return o.Repo, true
}

// HasRepo returns a boolean if a field has been set.
func (o *FullScansSettingsConfig) HasRepo() bool {
	if o != nil && !IsNil(o.Repo) {
		return true
	}

	return false
}

// SetRepo gets a reference to the given string and assigns it to the Repo field.
func (o *FullScansSettingsConfig) SetRepo(v string) {
	o.Repo = &v
}

// GetUseSyntheticData returns the UseSyntheticData field value if set, zero value otherwise.
func (o *FullScansSettingsConfig) GetUseSyntheticData() bool {
	if o == nil || IsNil(o.UseSyntheticData) {
		var ret bool
		return ret
	}
	return *o.UseSyntheticData
}

// GetUseSyntheticDataOk returns a tuple with the UseSyntheticData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullScansSettingsConfig) GetUseSyntheticDataOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSyntheticData) {
		return nil, false
	}
	return o.UseSyntheticData, true
}

// HasUseSyntheticData returns a boolean if a field has been set.
func (o *FullScansSettingsConfig) HasUseSyntheticData() bool {
	if o != nil && !IsNil(o.UseSyntheticData) {
		return true
	}

	return false
}

// SetUseSyntheticData gets a reference to the given bool and assigns it to the UseSyntheticData field.
func (o *FullScansSettingsConfig) SetUseSyntheticData(v bool) {
	o.UseSyntheticData = &v
}

func (o FullScansSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullScansSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OrgSlug) {
		toSerialize["org_slug"] = o.OrgSlug
	}
	if !IsNil(o.Repo) {
		toSerialize["repo"] = o.Repo
	}
	if !IsNil(o.UseSyntheticData) {
		toSerialize["use_synthetic_data"] = o.UseSyntheticData
	}
	return toSerialize, nil
}

type NullableFullScansSettingsConfig struct {
	value *FullScansSettingsConfig
	isSet bool
}

func (v NullableFullScansSettingsConfig) Get() *FullScansSettingsConfig {
	return v.value
}

func (v *NullableFullScansSettingsConfig) Set(val *FullScansSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFullScansSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFullScansSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullScansSettingsConfig(val *FullScansSettingsConfig) *NullableFullScansSettingsConfig {
	return &NullableFullScansSettingsConfig{value: val, isSet: true}
}

func (v NullableFullScansSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullScansSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


