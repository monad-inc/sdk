/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsQuota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsQuota{}

// ModelsQuota struct for ModelsQuota
type ModelsQuota struct {
	Action *string `json:"action,omitempty"`
	BillingAccountId *string `json:"billing_account_id,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	CurrentUsage *int32 `json:"current_usage,omitempty"`
	CurrentUsageUpdatedAt *string `json:"current_usage_updated_at,omitempty"`
	EndAt *string `json:"end_at,omitempty"`
	Id *string `json:"id,omitempty"`
	LimitAmount *int32 `json:"limit_amount,omitempty"`
	LimitType *string `json:"limit_type,omitempty"`
	LimitUnit *string `json:"limit_unit,omitempty"`
	Name *string `json:"name,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	StartAt *string `json:"start_at,omitempty"`
	Timeframe *string `json:"timeframe,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewModelsQuota instantiates a new ModelsQuota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsQuota() *ModelsQuota {
	this := ModelsQuota{}
	return &this
}

// NewModelsQuotaWithDefaults instantiates a new ModelsQuota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsQuotaWithDefaults() *ModelsQuota {
	this := ModelsQuota{}
	return &this
}

// GetAction returns the Action field value if set, zero value otherwise.
func (o *ModelsQuota) GetAction() string {
	if o == nil || IsNil(o.Action) {
		var ret string
		return ret
	}
	return *o.Action
}

// GetActionOk returns a tuple with the Action field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetActionOk() (*string, bool) {
	if o == nil || IsNil(o.Action) {
		return nil, false
	}
	return o.Action, true
}

// HasAction returns a boolean if a field has been set.
func (o *ModelsQuota) HasAction() bool {
	if o != nil && !IsNil(o.Action) {
		return true
	}

	return false
}

// SetAction gets a reference to the given string and assigns it to the Action field.
func (o *ModelsQuota) SetAction(v string) {
	o.Action = &v
}

// GetBillingAccountId returns the BillingAccountId field value if set, zero value otherwise.
func (o *ModelsQuota) GetBillingAccountId() string {
	if o == nil || IsNil(o.BillingAccountId) {
		var ret string
		return ret
	}
	return *o.BillingAccountId
}

// GetBillingAccountIdOk returns a tuple with the BillingAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetBillingAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BillingAccountId) {
		return nil, false
	}
	return o.BillingAccountId, true
}

// HasBillingAccountId returns a boolean if a field has been set.
func (o *ModelsQuota) HasBillingAccountId() bool {
	if o != nil && !IsNil(o.BillingAccountId) {
		return true
	}

	return false
}

// SetBillingAccountId gets a reference to the given string and assigns it to the BillingAccountId field.
func (o *ModelsQuota) SetBillingAccountId(v string) {
	o.BillingAccountId = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ModelsQuota) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ModelsQuota) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ModelsQuota) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetCurrentUsage returns the CurrentUsage field value if set, zero value otherwise.
func (o *ModelsQuota) GetCurrentUsage() int32 {
	if o == nil || IsNil(o.CurrentUsage) {
		var ret int32
		return ret
	}
	return *o.CurrentUsage
}

// GetCurrentUsageOk returns a tuple with the CurrentUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetCurrentUsageOk() (*int32, bool) {
	if o == nil || IsNil(o.CurrentUsage) {
		return nil, false
	}
	return o.CurrentUsage, true
}

// HasCurrentUsage returns a boolean if a field has been set.
func (o *ModelsQuota) HasCurrentUsage() bool {
	if o != nil && !IsNil(o.CurrentUsage) {
		return true
	}

	return false
}

// SetCurrentUsage gets a reference to the given int32 and assigns it to the CurrentUsage field.
func (o *ModelsQuota) SetCurrentUsage(v int32) {
	o.CurrentUsage = &v
}

// GetCurrentUsageUpdatedAt returns the CurrentUsageUpdatedAt field value if set, zero value otherwise.
func (o *ModelsQuota) GetCurrentUsageUpdatedAt() string {
	if o == nil || IsNil(o.CurrentUsageUpdatedAt) {
		var ret string
		return ret
	}
	return *o.CurrentUsageUpdatedAt
}

// GetCurrentUsageUpdatedAtOk returns a tuple with the CurrentUsageUpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetCurrentUsageUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CurrentUsageUpdatedAt) {
		return nil, false
	}
	return o.CurrentUsageUpdatedAt, true
}

// HasCurrentUsageUpdatedAt returns a boolean if a field has been set.
func (o *ModelsQuota) HasCurrentUsageUpdatedAt() bool {
	if o != nil && !IsNil(o.CurrentUsageUpdatedAt) {
		return true
	}

	return false
}

// SetCurrentUsageUpdatedAt gets a reference to the given string and assigns it to the CurrentUsageUpdatedAt field.
func (o *ModelsQuota) SetCurrentUsageUpdatedAt(v string) {
	o.CurrentUsageUpdatedAt = &v
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *ModelsQuota) GetEndAt() string {
	if o == nil || IsNil(o.EndAt) {
		var ret string
		return ret
	}
	return *o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetEndAtOk() (*string, bool) {
	if o == nil || IsNil(o.EndAt) {
		return nil, false
	}
	return o.EndAt, true
}

// HasEndAt returns a boolean if a field has been set.
func (o *ModelsQuota) HasEndAt() bool {
	if o != nil && !IsNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given string and assigns it to the EndAt field.
func (o *ModelsQuota) SetEndAt(v string) {
	o.EndAt = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsQuota) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsQuota) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ModelsQuota) SetId(v string) {
	o.Id = &v
}

// GetLimitAmount returns the LimitAmount field value if set, zero value otherwise.
func (o *ModelsQuota) GetLimitAmount() int32 {
	if o == nil || IsNil(o.LimitAmount) {
		var ret int32
		return ret
	}
	return *o.LimitAmount
}

// GetLimitAmountOk returns a tuple with the LimitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetLimitAmountOk() (*int32, bool) {
	if o == nil || IsNil(o.LimitAmount) {
		return nil, false
	}
	return o.LimitAmount, true
}

// HasLimitAmount returns a boolean if a field has been set.
func (o *ModelsQuota) HasLimitAmount() bool {
	if o != nil && !IsNil(o.LimitAmount) {
		return true
	}

	return false
}

// SetLimitAmount gets a reference to the given int32 and assigns it to the LimitAmount field.
func (o *ModelsQuota) SetLimitAmount(v int32) {
	o.LimitAmount = &v
}

// GetLimitType returns the LimitType field value if set, zero value otherwise.
func (o *ModelsQuota) GetLimitType() string {
	if o == nil || IsNil(o.LimitType) {
		var ret string
		return ret
	}
	return *o.LimitType
}

// GetLimitTypeOk returns a tuple with the LimitType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetLimitTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LimitType) {
		return nil, false
	}
	return o.LimitType, true
}

// HasLimitType returns a boolean if a field has been set.
func (o *ModelsQuota) HasLimitType() bool {
	if o != nil && !IsNil(o.LimitType) {
		return true
	}

	return false
}

// SetLimitType gets a reference to the given string and assigns it to the LimitType field.
func (o *ModelsQuota) SetLimitType(v string) {
	o.LimitType = &v
}

// GetLimitUnit returns the LimitUnit field value if set, zero value otherwise.
func (o *ModelsQuota) GetLimitUnit() string {
	if o == nil || IsNil(o.LimitUnit) {
		var ret string
		return ret
	}
	return *o.LimitUnit
}

// GetLimitUnitOk returns a tuple with the LimitUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetLimitUnitOk() (*string, bool) {
	if o == nil || IsNil(o.LimitUnit) {
		return nil, false
	}
	return o.LimitUnit, true
}

// HasLimitUnit returns a boolean if a field has been set.
func (o *ModelsQuota) HasLimitUnit() bool {
	if o != nil && !IsNil(o.LimitUnit) {
		return true
	}

	return false
}

// SetLimitUnit gets a reference to the given string and assigns it to the LimitUnit field.
func (o *ModelsQuota) SetLimitUnit(v string) {
	o.LimitUnit = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsQuota) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsQuota) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsQuota) SetName(v string) {
	o.Name = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsQuota) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsQuota) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsQuota) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *ModelsQuota) GetStartAt() string {
	if o == nil || IsNil(o.StartAt) {
		var ret string
		return ret
	}
	return *o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetStartAtOk() (*string, bool) {
	if o == nil || IsNil(o.StartAt) {
		return nil, false
	}
	return o.StartAt, true
}

// HasStartAt returns a boolean if a field has been set.
func (o *ModelsQuota) HasStartAt() bool {
	if o != nil && !IsNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given string and assigns it to the StartAt field.
func (o *ModelsQuota) SetStartAt(v string) {
	o.StartAt = &v
}

// GetTimeframe returns the Timeframe field value if set, zero value otherwise.
func (o *ModelsQuota) GetTimeframe() string {
	if o == nil || IsNil(o.Timeframe) {
		var ret string
		return ret
	}
	return *o.Timeframe
}

// GetTimeframeOk returns a tuple with the Timeframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetTimeframeOk() (*string, bool) {
	if o == nil || IsNil(o.Timeframe) {
		return nil, false
	}
	return o.Timeframe, true
}

// HasTimeframe returns a boolean if a field has been set.
func (o *ModelsQuota) HasTimeframe() bool {
	if o != nil && !IsNil(o.Timeframe) {
		return true
	}

	return false
}

// SetTimeframe gets a reference to the given string and assigns it to the Timeframe field.
func (o *ModelsQuota) SetTimeframe(v string) {
	o.Timeframe = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *ModelsQuota) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQuota) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *ModelsQuota) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *ModelsQuota) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o ModelsQuota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsQuota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Action) {
		toSerialize["action"] = o.Action
	}
	if !IsNil(o.BillingAccountId) {
		toSerialize["billing_account_id"] = o.BillingAccountId
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.CurrentUsage) {
		toSerialize["current_usage"] = o.CurrentUsage
	}
	if !IsNil(o.CurrentUsageUpdatedAt) {
		toSerialize["current_usage_updated_at"] = o.CurrentUsageUpdatedAt
	}
	if !IsNil(o.EndAt) {
		toSerialize["end_at"] = o.EndAt
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.LimitAmount) {
		toSerialize["limit_amount"] = o.LimitAmount
	}
	if !IsNil(o.LimitType) {
		toSerialize["limit_type"] = o.LimitType
	}
	if !IsNil(o.LimitUnit) {
		toSerialize["limit_unit"] = o.LimitUnit
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.StartAt) {
		toSerialize["start_at"] = o.StartAt
	}
	if !IsNil(o.Timeframe) {
		toSerialize["timeframe"] = o.Timeframe
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableModelsQuota struct {
	value *ModelsQuota
	isSet bool
}

func (v NullableModelsQuota) Get() *ModelsQuota {
	return v.value
}

func (v *NullableModelsQuota) Set(val *ModelsQuota) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsQuota(val *ModelsQuota) *NullableModelsQuota {
	return &NullableModelsQuota{value: val, isSet: true}
}

func (v NullableModelsQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


