/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the AwsGuarddutySettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AwsGuarddutySettingsConfig{}

// AwsGuarddutySettingsConfig AWS Guardduty settings
type AwsGuarddutySettingsConfig struct {
	// The AWS region where GuardDuty is enabled.
	Region *string `json:"region,omitempty"`
	// The ARN of the IAM role to assume for accessing GuardDuty.
	RoleArn *string `json:"role_arn,omitempty"`
	// Filter findings by severity levels.
	Severity *string `json:"severity,omitempty"`
}

// NewAwsGuarddutySettingsConfig instantiates a new AwsGuarddutySettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAwsGuarddutySettingsConfig() *AwsGuarddutySettingsConfig {
	this := AwsGuarddutySettingsConfig{}
	return &this
}

// NewAwsGuarddutySettingsConfigWithDefaults instantiates a new AwsGuarddutySettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAwsGuarddutySettingsConfigWithDefaults() *AwsGuarddutySettingsConfig {
	this := AwsGuarddutySettingsConfig{}
	return &this
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *AwsGuarddutySettingsConfig) GetRegion() string {
	if o == nil || IsNil(o.Region) {
		var ret string
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsGuarddutySettingsConfig) GetRegionOk() (*string, bool) {
	if o == nil || IsNil(o.Region) {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *AwsGuarddutySettingsConfig) HasRegion() bool {
	if o != nil && !IsNil(o.Region) {
		return true
	}

	return false
}

// SetRegion gets a reference to the given string and assigns it to the Region field.
func (o *AwsGuarddutySettingsConfig) SetRegion(v string) {
	o.Region = &v
}

// GetRoleArn returns the RoleArn field value if set, zero value otherwise.
func (o *AwsGuarddutySettingsConfig) GetRoleArn() string {
	if o == nil || IsNil(o.RoleArn) {
		var ret string
		return ret
	}
	return *o.RoleArn
}

// GetRoleArnOk returns a tuple with the RoleArn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsGuarddutySettingsConfig) GetRoleArnOk() (*string, bool) {
	if o == nil || IsNil(o.RoleArn) {
		return nil, false
	}
	return o.RoleArn, true
}

// HasRoleArn returns a boolean if a field has been set.
func (o *AwsGuarddutySettingsConfig) HasRoleArn() bool {
	if o != nil && !IsNil(o.RoleArn) {
		return true
	}

	return false
}

// SetRoleArn gets a reference to the given string and assigns it to the RoleArn field.
func (o *AwsGuarddutySettingsConfig) SetRoleArn(v string) {
	o.RoleArn = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *AwsGuarddutySettingsConfig) GetSeverity() string {
	if o == nil || IsNil(o.Severity) {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AwsGuarddutySettingsConfig) GetSeverityOk() (*string, bool) {
	if o == nil || IsNil(o.Severity) {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *AwsGuarddutySettingsConfig) HasSeverity() bool {
	if o != nil && !IsNil(o.Severity) {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *AwsGuarddutySettingsConfig) SetSeverity(v string) {
	o.Severity = &v
}

func (o AwsGuarddutySettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AwsGuarddutySettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Region) {
		toSerialize["region"] = o.Region
	}
	if !IsNil(o.RoleArn) {
		toSerialize["role_arn"] = o.RoleArn
	}
	if !IsNil(o.Severity) {
		toSerialize["severity"] = o.Severity
	}
	return toSerialize, nil
}

type NullableAwsGuarddutySettingsConfig struct {
	value *AwsGuarddutySettingsConfig
	isSet bool
}

func (v NullableAwsGuarddutySettingsConfig) Get() *AwsGuarddutySettingsConfig {
	return v.value
}

func (v *NullableAwsGuarddutySettingsConfig) Set(val *AwsGuarddutySettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableAwsGuarddutySettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableAwsGuarddutySettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAwsGuarddutySettingsConfig(val *AwsGuarddutySettingsConfig) *NullableAwsGuarddutySettingsConfig {
	return &NullableAwsGuarddutySettingsConfig{value: val, isSet: true}
}

func (v NullableAwsGuarddutySettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAwsGuarddutySettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


