/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the UsersSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UsersSecretsConfig{}

// UsersSecretsConfig Google Workspace Users secrets
type UsersSecretsConfig struct {
	// JSON credentials to authenticate with Google Cloud.
	CredentialsJson *string `json:"credentials_json,omitempty"`
	// Google Workspace Customer ID. If you use your google workspace customer ID you will pull data on all users in all domains of your Google Workspace account. This should be set if Domain is not set.
	CustomerId *string `json:"customer_id,omitempty"`
	// Domain name your users belong to. If you use a google workspace domain you will only pull user data for users that belong to that domain. This should be set if CustomerID is not set
	Domain *string `json:"domain,omitempty"`
}

// NewUsersSecretsConfig instantiates a new UsersSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersSecretsConfig() *UsersSecretsConfig {
	this := UsersSecretsConfig{}
	return &this
}

// NewUsersSecretsConfigWithDefaults instantiates a new UsersSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersSecretsConfigWithDefaults() *UsersSecretsConfig {
	this := UsersSecretsConfig{}
	return &this
}

// GetCredentialsJson returns the CredentialsJson field value if set, zero value otherwise.
func (o *UsersSecretsConfig) GetCredentialsJson() string {
	if o == nil || IsNil(o.CredentialsJson) {
		var ret string
		return ret
	}
	return *o.CredentialsJson
}

// GetCredentialsJsonOk returns a tuple with the CredentialsJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersSecretsConfig) GetCredentialsJsonOk() (*string, bool) {
	if o == nil || IsNil(o.CredentialsJson) {
		return nil, false
	}
	return o.CredentialsJson, true
}

// HasCredentialsJson returns a boolean if a field has been set.
func (o *UsersSecretsConfig) HasCredentialsJson() bool {
	if o != nil && !IsNil(o.CredentialsJson) {
		return true
	}

	return false
}

// SetCredentialsJson gets a reference to the given string and assigns it to the CredentialsJson field.
func (o *UsersSecretsConfig) SetCredentialsJson(v string) {
	o.CredentialsJson = &v
}

// GetCustomerId returns the CustomerId field value if set, zero value otherwise.
func (o *UsersSecretsConfig) GetCustomerId() string {
	if o == nil || IsNil(o.CustomerId) {
		var ret string
		return ret
	}
	return *o.CustomerId
}

// GetCustomerIdOk returns a tuple with the CustomerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersSecretsConfig) GetCustomerIdOk() (*string, bool) {
	if o == nil || IsNil(o.CustomerId) {
		return nil, false
	}
	return o.CustomerId, true
}

// HasCustomerId returns a boolean if a field has been set.
func (o *UsersSecretsConfig) HasCustomerId() bool {
	if o != nil && !IsNil(o.CustomerId) {
		return true
	}

	return false
}

// SetCustomerId gets a reference to the given string and assigns it to the CustomerId field.
func (o *UsersSecretsConfig) SetCustomerId(v string) {
	o.CustomerId = &v
}

// GetDomain returns the Domain field value if set, zero value otherwise.
func (o *UsersSecretsConfig) GetDomain() string {
	if o == nil || IsNil(o.Domain) {
		var ret string
		return ret
	}
	return *o.Domain
}

// GetDomainOk returns a tuple with the Domain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersSecretsConfig) GetDomainOk() (*string, bool) {
	if o == nil || IsNil(o.Domain) {
		return nil, false
	}
	return o.Domain, true
}

// HasDomain returns a boolean if a field has been set.
func (o *UsersSecretsConfig) HasDomain() bool {
	if o != nil && !IsNil(o.Domain) {
		return true
	}

	return false
}

// SetDomain gets a reference to the given string and assigns it to the Domain field.
func (o *UsersSecretsConfig) SetDomain(v string) {
	o.Domain = &v
}

func (o UsersSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UsersSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CredentialsJson) {
		toSerialize["credentials_json"] = o.CredentialsJson
	}
	if !IsNil(o.CustomerId) {
		toSerialize["customer_id"] = o.CustomerId
	}
	if !IsNil(o.Domain) {
		toSerialize["domain"] = o.Domain
	}
	return toSerialize, nil
}

type NullableUsersSecretsConfig struct {
	value *UsersSecretsConfig
	isSet bool
}

func (v NullableUsersSecretsConfig) Get() *UsersSecretsConfig {
	return v.value
}

func (v *NullableUsersSecretsConfig) Set(val *UsersSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersSecretsConfig(val *UsersSecretsConfig) *NullableUsersSecretsConfig {
	return &NullableUsersSecretsConfig{value: val, isSet: true}
}

func (v NullableUsersSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


