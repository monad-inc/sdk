/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsPipelineMetricsValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPipelineMetricsValue{}

// ModelsPipelineMetricsValue struct for ModelsPipelineMetricsValue
type ModelsPipelineMetricsValue struct {
	Timestamp *int32 `json:"timestamp,omitempty"`
	Value *float32 `json:"value,omitempty"`
}

// NewModelsPipelineMetricsValue instantiates a new ModelsPipelineMetricsValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPipelineMetricsValue() *ModelsPipelineMetricsValue {
	this := ModelsPipelineMetricsValue{}
	return &this
}

// NewModelsPipelineMetricsValueWithDefaults instantiates a new ModelsPipelineMetricsValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPipelineMetricsValueWithDefaults() *ModelsPipelineMetricsValue {
	this := ModelsPipelineMetricsValue{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelsPipelineMetricsValue) GetTimestamp() int32 {
	if o == nil || IsNil(o.Timestamp) {
		var ret int32
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetricsValue) GetTimestampOk() (*int32, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelsPipelineMetricsValue) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given int32 and assigns it to the Timestamp field.
func (o *ModelsPipelineMetricsValue) SetTimestamp(v int32) {
	o.Timestamp = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ModelsPipelineMetricsValue) GetValue() float32 {
	if o == nil || IsNil(o.Value) {
		var ret float32
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetricsValue) GetValueOk() (*float32, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ModelsPipelineMetricsValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given float32 and assigns it to the Value field.
func (o *ModelsPipelineMetricsValue) SetValue(v float32) {
	o.Value = &v
}

func (o ModelsPipelineMetricsValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPipelineMetricsValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableModelsPipelineMetricsValue struct {
	value *ModelsPipelineMetricsValue
	isSet bool
}

func (v NullableModelsPipelineMetricsValue) Get() *ModelsPipelineMetricsValue {
	return v.value
}

func (v *NullableModelsPipelineMetricsValue) Set(val *ModelsPipelineMetricsValue) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPipelineMetricsValue) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPipelineMetricsValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPipelineMetricsValue(val *ModelsPipelineMetricsValue) *NullableModelsPipelineMetricsValue {
	return &NullableModelsPipelineMetricsValue{value: val, isSet: true}
}

func (v NullableModelsPipelineMetricsValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPipelineMetricsValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


