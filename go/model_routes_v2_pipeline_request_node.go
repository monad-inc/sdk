/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the RoutesV2PipelineRequestNode type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2PipelineRequestNode{}

// RoutesV2PipelineRequestNode struct for RoutesV2PipelineRequestNode
type RoutesV2PipelineRequestNode struct {
	ComponentId string `json:"component_id"`
	ComponentType string `json:"component_type"`
	Enabled bool `json:"enabled"`
	Id *string `json:"id,omitempty"`
	Slug *string `json:"slug,omitempty"`
}

type _RoutesV2PipelineRequestNode RoutesV2PipelineRequestNode

// NewRoutesV2PipelineRequestNode instantiates a new RoutesV2PipelineRequestNode object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2PipelineRequestNode(componentId string, componentType string, enabled bool) *RoutesV2PipelineRequestNode {
	this := RoutesV2PipelineRequestNode{}
	this.ComponentId = componentId
	this.ComponentType = componentType
	this.Enabled = enabled
	return &this
}

// NewRoutesV2PipelineRequestNodeWithDefaults instantiates a new RoutesV2PipelineRequestNode object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2PipelineRequestNodeWithDefaults() *RoutesV2PipelineRequestNode {
	this := RoutesV2PipelineRequestNode{}
	return &this
}

// GetComponentId returns the ComponentId field value
func (o *RoutesV2PipelineRequestNode) GetComponentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComponentId
}

// GetComponentIdOk returns a tuple with the ComponentId field value
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestNode) GetComponentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentId, true
}

// SetComponentId sets field value
func (o *RoutesV2PipelineRequestNode) SetComponentId(v string) {
	o.ComponentId = v
}

// GetComponentType returns the ComponentType field value
func (o *RoutesV2PipelineRequestNode) GetComponentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComponentType
}

// GetComponentTypeOk returns a tuple with the ComponentType field value
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestNode) GetComponentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComponentType, true
}

// SetComponentType sets field value
func (o *RoutesV2PipelineRequestNode) SetComponentType(v string) {
	o.ComponentType = v
}

// GetEnabled returns the Enabled field value
func (o *RoutesV2PipelineRequestNode) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestNode) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *RoutesV2PipelineRequestNode) SetEnabled(v bool) {
	o.Enabled = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RoutesV2PipelineRequestNode) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestNode) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RoutesV2PipelineRequestNode) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *RoutesV2PipelineRequestNode) SetId(v string) {
	o.Id = &v
}

// GetSlug returns the Slug field value if set, zero value otherwise.
func (o *RoutesV2PipelineRequestNode) GetSlug() string {
	if o == nil || IsNil(o.Slug) {
		var ret string
		return ret
	}
	return *o.Slug
}

// GetSlugOk returns a tuple with the Slug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineRequestNode) GetSlugOk() (*string, bool) {
	if o == nil || IsNil(o.Slug) {
		return nil, false
	}
	return o.Slug, true
}

// HasSlug returns a boolean if a field has been set.
func (o *RoutesV2PipelineRequestNode) HasSlug() bool {
	if o != nil && !IsNil(o.Slug) {
		return true
	}

	return false
}

// SetSlug gets a reference to the given string and assigns it to the Slug field.
func (o *RoutesV2PipelineRequestNode) SetSlug(v string) {
	o.Slug = &v
}

func (o RoutesV2PipelineRequestNode) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2PipelineRequestNode) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["component_id"] = o.ComponentId
	toSerialize["component_type"] = o.ComponentType
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Slug) {
		toSerialize["slug"] = o.Slug
	}
	return toSerialize, nil
}

func (o *RoutesV2PipelineRequestNode) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"component_id",
		"component_type",
		"enabled",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoutesV2PipelineRequestNode := _RoutesV2PipelineRequestNode{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoutesV2PipelineRequestNode)

	if err != nil {
		return err
	}

	*o = RoutesV2PipelineRequestNode(varRoutesV2PipelineRequestNode)

	return err
}

type NullableRoutesV2PipelineRequestNode struct {
	value *RoutesV2PipelineRequestNode
	isSet bool
}

func (v NullableRoutesV2PipelineRequestNode) Get() *RoutesV2PipelineRequestNode {
	return v.value
}

func (v *NullableRoutesV2PipelineRequestNode) Set(val *RoutesV2PipelineRequestNode) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2PipelineRequestNode) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2PipelineRequestNode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2PipelineRequestNode(val *RoutesV2PipelineRequestNode) *NullableRoutesV2PipelineRequestNode {
	return &NullableRoutesV2PipelineRequestNode{value: val, isSet: true}
}

func (v NullableRoutesV2PipelineRequestNode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2PipelineRequestNode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


