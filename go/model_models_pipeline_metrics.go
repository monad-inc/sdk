/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsPipelineMetrics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPipelineMetrics{}

// ModelsPipelineMetrics struct for ModelsPipelineMetrics
type ModelsPipelineMetrics struct {
	EndAt *string `json:"end_at,omitempty"`
	Metric *string `json:"metric,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	NodeSlug *string `json:"node_slug,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
	OrganizationName *string `json:"organization_name,omitempty"`
	PipelineId *string `json:"pipeline_id,omitempty"`
	PipelineName *string `json:"pipeline_name,omitempty"`
	Resolution *string `json:"resolution,omitempty"`
	StartAt *string `json:"start_at,omitempty"`
	Values []ModelsPipelineMetricsValue `json:"values,omitempty"`
}

// NewModelsPipelineMetrics instantiates a new ModelsPipelineMetrics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPipelineMetrics() *ModelsPipelineMetrics {
	this := ModelsPipelineMetrics{}
	return &this
}

// NewModelsPipelineMetricsWithDefaults instantiates a new ModelsPipelineMetrics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPipelineMetricsWithDefaults() *ModelsPipelineMetrics {
	this := ModelsPipelineMetrics{}
	return &this
}

// GetEndAt returns the EndAt field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetEndAt() string {
	if o == nil || IsNil(o.EndAt) {
		var ret string
		return ret
	}
	return *o.EndAt
}

// GetEndAtOk returns a tuple with the EndAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetEndAtOk() (*string, bool) {
	if o == nil || IsNil(o.EndAt) {
		return nil, false
	}
	return o.EndAt, true
}

// HasEndAt returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasEndAt() bool {
	if o != nil && !IsNil(o.EndAt) {
		return true
	}

	return false
}

// SetEndAt gets a reference to the given string and assigns it to the EndAt field.
func (o *ModelsPipelineMetrics) SetEndAt(v string) {
	o.EndAt = &v
}

// GetMetric returns the Metric field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetMetric() string {
	if o == nil || IsNil(o.Metric) {
		var ret string
		return ret
	}
	return *o.Metric
}

// GetMetricOk returns a tuple with the Metric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetMetricOk() (*string, bool) {
	if o == nil || IsNil(o.Metric) {
		return nil, false
	}
	return o.Metric, true
}

// HasMetric returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasMetric() bool {
	if o != nil && !IsNil(o.Metric) {
		return true
	}

	return false
}

// SetMetric gets a reference to the given string and assigns it to the Metric field.
func (o *ModelsPipelineMetrics) SetMetric(v string) {
	o.Metric = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetNodeId() string {
	if o == nil || IsNil(o.NodeId) {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.NodeId) {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasNodeId() bool {
	if o != nil && !IsNil(o.NodeId) {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *ModelsPipelineMetrics) SetNodeId(v string) {
	o.NodeId = &v
}

// GetNodeSlug returns the NodeSlug field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetNodeSlug() string {
	if o == nil || IsNil(o.NodeSlug) {
		var ret string
		return ret
	}
	return *o.NodeSlug
}

// GetNodeSlugOk returns a tuple with the NodeSlug field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetNodeSlugOk() (*string, bool) {
	if o == nil || IsNil(o.NodeSlug) {
		return nil, false
	}
	return o.NodeSlug, true
}

// HasNodeSlug returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasNodeSlug() bool {
	if o != nil && !IsNil(o.NodeSlug) {
		return true
	}

	return false
}

// SetNodeSlug gets a reference to the given string and assigns it to the NodeSlug field.
func (o *ModelsPipelineMetrics) SetNodeSlug(v string) {
	o.NodeSlug = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetOrganizationId() string {
	if o == nil || IsNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetOrganizationIdOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationId) {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasOrganizationId() bool {
	if o != nil && !IsNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *ModelsPipelineMetrics) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetOrganizationName returns the OrganizationName field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetOrganizationName() string {
	if o == nil || IsNil(o.OrganizationName) {
		var ret string
		return ret
	}
	return *o.OrganizationName
}

// GetOrganizationNameOk returns a tuple with the OrganizationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetOrganizationNameOk() (*string, bool) {
	if o == nil || IsNil(o.OrganizationName) {
		return nil, false
	}
	return o.OrganizationName, true
}

// HasOrganizationName returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasOrganizationName() bool {
	if o != nil && !IsNil(o.OrganizationName) {
		return true
	}

	return false
}

// SetOrganizationName gets a reference to the given string and assigns it to the OrganizationName field.
func (o *ModelsPipelineMetrics) SetOrganizationName(v string) {
	o.OrganizationName = &v
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetPipelineId() string {
	if o == nil || IsNil(o.PipelineId) {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *ModelsPipelineMetrics) SetPipelineId(v string) {
	o.PipelineId = &v
}

// GetPipelineName returns the PipelineName field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetPipelineName() string {
	if o == nil || IsNil(o.PipelineName) {
		var ret string
		return ret
	}
	return *o.PipelineName
}

// GetPipelineNameOk returns a tuple with the PipelineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetPipelineNameOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineName) {
		return nil, false
	}
	return o.PipelineName, true
}

// HasPipelineName returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasPipelineName() bool {
	if o != nil && !IsNil(o.PipelineName) {
		return true
	}

	return false
}

// SetPipelineName gets a reference to the given string and assigns it to the PipelineName field.
func (o *ModelsPipelineMetrics) SetPipelineName(v string) {
	o.PipelineName = &v
}

// GetResolution returns the Resolution field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetResolution() string {
	if o == nil || IsNil(o.Resolution) {
		var ret string
		return ret
	}
	return *o.Resolution
}

// GetResolutionOk returns a tuple with the Resolution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetResolutionOk() (*string, bool) {
	if o == nil || IsNil(o.Resolution) {
		return nil, false
	}
	return o.Resolution, true
}

// HasResolution returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasResolution() bool {
	if o != nil && !IsNil(o.Resolution) {
		return true
	}

	return false
}

// SetResolution gets a reference to the given string and assigns it to the Resolution field.
func (o *ModelsPipelineMetrics) SetResolution(v string) {
	o.Resolution = &v
}

// GetStartAt returns the StartAt field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetStartAt() string {
	if o == nil || IsNil(o.StartAt) {
		var ret string
		return ret
	}
	return *o.StartAt
}

// GetStartAtOk returns a tuple with the StartAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetStartAtOk() (*string, bool) {
	if o == nil || IsNil(o.StartAt) {
		return nil, false
	}
	return o.StartAt, true
}

// HasStartAt returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasStartAt() bool {
	if o != nil && !IsNil(o.StartAt) {
		return true
	}

	return false
}

// SetStartAt gets a reference to the given string and assigns it to the StartAt field.
func (o *ModelsPipelineMetrics) SetStartAt(v string) {
	o.StartAt = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *ModelsPipelineMetrics) GetValues() []ModelsPipelineMetricsValue {
	if o == nil || IsNil(o.Values) {
		var ret []ModelsPipelineMetricsValue
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineMetrics) GetValuesOk() ([]ModelsPipelineMetricsValue, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *ModelsPipelineMetrics) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []ModelsPipelineMetricsValue and assigns it to the Values field.
func (o *ModelsPipelineMetrics) SetValues(v []ModelsPipelineMetricsValue) {
	o.Values = v
}

func (o ModelsPipelineMetrics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPipelineMetrics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndAt) {
		toSerialize["end_at"] = o.EndAt
	}
	if !IsNil(o.Metric) {
		toSerialize["metric"] = o.Metric
	}
	if !IsNil(o.NodeId) {
		toSerialize["node_id"] = o.NodeId
	}
	if !IsNil(o.NodeSlug) {
		toSerialize["node_slug"] = o.NodeSlug
	}
	if !IsNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !IsNil(o.OrganizationName) {
		toSerialize["organization_name"] = o.OrganizationName
	}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.PipelineName) {
		toSerialize["pipeline_name"] = o.PipelineName
	}
	if !IsNil(o.Resolution) {
		toSerialize["resolution"] = o.Resolution
	}
	if !IsNil(o.StartAt) {
		toSerialize["start_at"] = o.StartAt
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableModelsPipelineMetrics struct {
	value *ModelsPipelineMetrics
	isSet bool
}

func (v NullableModelsPipelineMetrics) Get() *ModelsPipelineMetrics {
	return v.value
}

func (v *NullableModelsPipelineMetrics) Set(val *ModelsPipelineMetrics) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPipelineMetrics) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPipelineMetrics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPipelineMetrics(val *ModelsPipelineMetrics) *NullableModelsPipelineMetrics {
	return &NullableModelsPipelineMetrics{value: val, isSet: true}
}

func (v NullableModelsPipelineMetrics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPipelineMetrics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


