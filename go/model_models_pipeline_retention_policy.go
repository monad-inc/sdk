/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsPipelineRetentionPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPipelineRetentionPolicy{}

// ModelsPipelineRetentionPolicy struct for ModelsPipelineRetentionPolicy
type ModelsPipelineRetentionPolicy struct {
	StreamAgeLimit *int32 `json:"stream_age_limit,omitempty"`
	StreamReplicas *int32 `json:"stream_replicas,omitempty"`
	StreamSizeLimit *ResourceQuantity `json:"stream_size_limit,omitempty"`
}

// NewModelsPipelineRetentionPolicy instantiates a new ModelsPipelineRetentionPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPipelineRetentionPolicy() *ModelsPipelineRetentionPolicy {
	this := ModelsPipelineRetentionPolicy{}
	return &this
}

// NewModelsPipelineRetentionPolicyWithDefaults instantiates a new ModelsPipelineRetentionPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPipelineRetentionPolicyWithDefaults() *ModelsPipelineRetentionPolicy {
	this := ModelsPipelineRetentionPolicy{}
	return &this
}

// GetStreamAgeLimit returns the StreamAgeLimit field value if set, zero value otherwise.
func (o *ModelsPipelineRetentionPolicy) GetStreamAgeLimit() int32 {
	if o == nil || IsNil(o.StreamAgeLimit) {
		var ret int32
		return ret
	}
	return *o.StreamAgeLimit
}

// GetStreamAgeLimitOk returns a tuple with the StreamAgeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineRetentionPolicy) GetStreamAgeLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.StreamAgeLimit) {
		return nil, false
	}
	return o.StreamAgeLimit, true
}

// HasStreamAgeLimit returns a boolean if a field has been set.
func (o *ModelsPipelineRetentionPolicy) HasStreamAgeLimit() bool {
	if o != nil && !IsNil(o.StreamAgeLimit) {
		return true
	}

	return false
}

// SetStreamAgeLimit gets a reference to the given int32 and assigns it to the StreamAgeLimit field.
func (o *ModelsPipelineRetentionPolicy) SetStreamAgeLimit(v int32) {
	o.StreamAgeLimit = &v
}

// GetStreamReplicas returns the StreamReplicas field value if set, zero value otherwise.
func (o *ModelsPipelineRetentionPolicy) GetStreamReplicas() int32 {
	if o == nil || IsNil(o.StreamReplicas) {
		var ret int32
		return ret
	}
	return *o.StreamReplicas
}

// GetStreamReplicasOk returns a tuple with the StreamReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineRetentionPolicy) GetStreamReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.StreamReplicas) {
		return nil, false
	}
	return o.StreamReplicas, true
}

// HasStreamReplicas returns a boolean if a field has been set.
func (o *ModelsPipelineRetentionPolicy) HasStreamReplicas() bool {
	if o != nil && !IsNil(o.StreamReplicas) {
		return true
	}

	return false
}

// SetStreamReplicas gets a reference to the given int32 and assigns it to the StreamReplicas field.
func (o *ModelsPipelineRetentionPolicy) SetStreamReplicas(v int32) {
	o.StreamReplicas = &v
}

// GetStreamSizeLimit returns the StreamSizeLimit field value if set, zero value otherwise.
func (o *ModelsPipelineRetentionPolicy) GetStreamSizeLimit() ResourceQuantity {
	if o == nil || IsNil(o.StreamSizeLimit) {
		var ret ResourceQuantity
		return ret
	}
	return *o.StreamSizeLimit
}

// GetStreamSizeLimitOk returns a tuple with the StreamSizeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPipelineRetentionPolicy) GetStreamSizeLimitOk() (*ResourceQuantity, bool) {
	if o == nil || IsNil(o.StreamSizeLimit) {
		return nil, false
	}
	return o.StreamSizeLimit, true
}

// HasStreamSizeLimit returns a boolean if a field has been set.
func (o *ModelsPipelineRetentionPolicy) HasStreamSizeLimit() bool {
	if o != nil && !IsNil(o.StreamSizeLimit) {
		return true
	}

	return false
}

// SetStreamSizeLimit gets a reference to the given ResourceQuantity and assigns it to the StreamSizeLimit field.
func (o *ModelsPipelineRetentionPolicy) SetStreamSizeLimit(v ResourceQuantity) {
	o.StreamSizeLimit = &v
}

func (o ModelsPipelineRetentionPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPipelineRetentionPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StreamAgeLimit) {
		toSerialize["stream_age_limit"] = o.StreamAgeLimit
	}
	if !IsNil(o.StreamReplicas) {
		toSerialize["stream_replicas"] = o.StreamReplicas
	}
	if !IsNil(o.StreamSizeLimit) {
		toSerialize["stream_size_limit"] = o.StreamSizeLimit
	}
	return toSerialize, nil
}

type NullableModelsPipelineRetentionPolicy struct {
	value *ModelsPipelineRetentionPolicy
	isSet bool
}

func (v NullableModelsPipelineRetentionPolicy) Get() *ModelsPipelineRetentionPolicy {
	return v.value
}

func (v *NullableModelsPipelineRetentionPolicy) Set(val *ModelsPipelineRetentionPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPipelineRetentionPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPipelineRetentionPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPipelineRetentionPolicy(val *ModelsPipelineRetentionPolicy) *NullableModelsPipelineRetentionPolicy {
	return &NullableModelsPipelineRetentionPolicy{value: val, isSet: true}
}

func (v NullableModelsPipelineRetentionPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPipelineRetentionPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


