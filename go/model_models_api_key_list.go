/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the ModelsAPIKeyList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsAPIKeyList{}

// ModelsAPIKeyList struct for ModelsAPIKeyList
type ModelsAPIKeyList struct {
	ApiKeys []ModelsAPIKey `json:"api_keys,omitempty"`
	Pagination *ModelsPagination `json:"pagination,omitempty"`
}

// NewModelsAPIKeyList instantiates a new ModelsAPIKeyList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsAPIKeyList() *ModelsAPIKeyList {
	this := ModelsAPIKeyList{}
	return &this
}

// NewModelsAPIKeyListWithDefaults instantiates a new ModelsAPIKeyList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsAPIKeyListWithDefaults() *ModelsAPIKeyList {
	this := ModelsAPIKeyList{}
	return &this
}

// GetApiKeys returns the ApiKeys field value if set, zero value otherwise.
func (o *ModelsAPIKeyList) GetApiKeys() []ModelsAPIKey {
	if o == nil || IsNil(o.ApiKeys) {
		var ret []ModelsAPIKey
		return ret
	}
	return o.ApiKeys
}

// GetApiKeysOk returns a tuple with the ApiKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAPIKeyList) GetApiKeysOk() ([]ModelsAPIKey, bool) {
	if o == nil || IsNil(o.ApiKeys) {
		return nil, false
	}
	return o.ApiKeys, true
}

// HasApiKeys returns a boolean if a field has been set.
func (o *ModelsAPIKeyList) HasApiKeys() bool {
	if o != nil && !IsNil(o.ApiKeys) {
		return true
	}

	return false
}

// SetApiKeys gets a reference to the given []ModelsAPIKey and assigns it to the ApiKeys field.
func (o *ModelsAPIKeyList) SetApiKeys(v []ModelsAPIKey) {
	o.ApiKeys = v
}

// GetPagination returns the Pagination field value if set, zero value otherwise.
func (o *ModelsAPIKeyList) GetPagination() ModelsPagination {
	if o == nil || IsNil(o.Pagination) {
		var ret ModelsPagination
		return ret
	}
	return *o.Pagination
}

// GetPaginationOk returns a tuple with the Pagination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsAPIKeyList) GetPaginationOk() (*ModelsPagination, bool) {
	if o == nil || IsNil(o.Pagination) {
		return nil, false
	}
	return o.Pagination, true
}

// HasPagination returns a boolean if a field has been set.
func (o *ModelsAPIKeyList) HasPagination() bool {
	if o != nil && !IsNil(o.Pagination) {
		return true
	}

	return false
}

// SetPagination gets a reference to the given ModelsPagination and assigns it to the Pagination field.
func (o *ModelsAPIKeyList) SetPagination(v ModelsPagination) {
	o.Pagination = &v
}

func (o ModelsAPIKeyList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsAPIKeyList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiKeys) {
		toSerialize["api_keys"] = o.ApiKeys
	}
	if !IsNil(o.Pagination) {
		toSerialize["pagination"] = o.Pagination
	}
	return toSerialize, nil
}

type NullableModelsAPIKeyList struct {
	value *ModelsAPIKeyList
	isSet bool
}

func (v NullableModelsAPIKeyList) Get() *ModelsAPIKeyList {
	return v.value
}

func (v *NullableModelsAPIKeyList) Set(val *ModelsAPIKeyList) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsAPIKeyList) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsAPIKeyList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsAPIKeyList(val *ModelsAPIKeyList) *NullableModelsAPIKeyList {
	return &NullableModelsAPIKeyList{value: val, isSet: true}
}

func (v NullableModelsAPIKeyList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsAPIKeyList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


