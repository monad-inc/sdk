/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the GitlabIssuesSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GitlabIssuesSecretsConfig{}

// GitlabIssuesSecretsConfig Gitlab Issues secrets
type GitlabIssuesSecretsConfig struct {
	PersonalAccessToken *ModelsSecret `json:"personal_access_token,omitempty"`
}

// NewGitlabIssuesSecretsConfig instantiates a new GitlabIssuesSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitlabIssuesSecretsConfig() *GitlabIssuesSecretsConfig {
	this := GitlabIssuesSecretsConfig{}
	return &this
}

// NewGitlabIssuesSecretsConfigWithDefaults instantiates a new GitlabIssuesSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitlabIssuesSecretsConfigWithDefaults() *GitlabIssuesSecretsConfig {
	this := GitlabIssuesSecretsConfig{}
	return &this
}

// GetPersonalAccessToken returns the PersonalAccessToken field value if set, zero value otherwise.
func (o *GitlabIssuesSecretsConfig) GetPersonalAccessToken() ModelsSecret {
	if o == nil || IsNil(o.PersonalAccessToken) {
		var ret ModelsSecret
		return ret
	}
	return *o.PersonalAccessToken
}

// GetPersonalAccessTokenOk returns a tuple with the PersonalAccessToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitlabIssuesSecretsConfig) GetPersonalAccessTokenOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.PersonalAccessToken) {
		return nil, false
	}
	return o.PersonalAccessToken, true
}

// HasPersonalAccessToken returns a boolean if a field has been set.
func (o *GitlabIssuesSecretsConfig) HasPersonalAccessToken() bool {
	if o != nil && !IsNil(o.PersonalAccessToken) {
		return true
	}

	return false
}

// SetPersonalAccessToken gets a reference to the given ModelsSecret and assigns it to the PersonalAccessToken field.
func (o *GitlabIssuesSecretsConfig) SetPersonalAccessToken(v ModelsSecret) {
	o.PersonalAccessToken = &v
}

func (o GitlabIssuesSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GitlabIssuesSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PersonalAccessToken) {
		toSerialize["personal_access_token"] = o.PersonalAccessToken
	}
	return toSerialize, nil
}

type NullableGitlabIssuesSecretsConfig struct {
	value *GitlabIssuesSecretsConfig
	isSet bool
}

func (v NullableGitlabIssuesSecretsConfig) Get() *GitlabIssuesSecretsConfig {
	return v.value
}

func (v *NullableGitlabIssuesSecretsConfig) Set(val *GitlabIssuesSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGitlabIssuesSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGitlabIssuesSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitlabIssuesSecretsConfig(val *GitlabIssuesSecretsConfig) *NullableGitlabIssuesSecretsConfig {
	return &NullableGitlabIssuesSecretsConfig{value: val, isSet: true}
}

func (v NullableGitlabIssuesSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitlabIssuesSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


