/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV2GenerateRecordRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2GenerateRecordRequest{}

// RoutesV2GenerateRecordRequest struct for RoutesV2GenerateRecordRequest
type RoutesV2GenerateRecordRequest struct {
	RecordType *string `json:"record_type,omitempty"`
}

// NewRoutesV2GenerateRecordRequest instantiates a new RoutesV2GenerateRecordRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2GenerateRecordRequest() *RoutesV2GenerateRecordRequest {
	this := RoutesV2GenerateRecordRequest{}
	return &this
}

// NewRoutesV2GenerateRecordRequestWithDefaults instantiates a new RoutesV2GenerateRecordRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2GenerateRecordRequestWithDefaults() *RoutesV2GenerateRecordRequest {
	this := RoutesV2GenerateRecordRequest{}
	return &this
}

// GetRecordType returns the RecordType field value if set, zero value otherwise.
func (o *RoutesV2GenerateRecordRequest) GetRecordType() string {
	if o == nil || IsNil(o.RecordType) {
		var ret string
		return ret
	}
	return *o.RecordType
}

// GetRecordTypeOk returns a tuple with the RecordType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2GenerateRecordRequest) GetRecordTypeOk() (*string, bool) {
	if o == nil || IsNil(o.RecordType) {
		return nil, false
	}
	return o.RecordType, true
}

// HasRecordType returns a boolean if a field has been set.
func (o *RoutesV2GenerateRecordRequest) HasRecordType() bool {
	if o != nil && !IsNil(o.RecordType) {
		return true
	}

	return false
}

// SetRecordType gets a reference to the given string and assigns it to the RecordType field.
func (o *RoutesV2GenerateRecordRequest) SetRecordType(v string) {
	o.RecordType = &v
}

func (o RoutesV2GenerateRecordRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2GenerateRecordRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RecordType) {
		toSerialize["record_type"] = o.RecordType
	}
	return toSerialize, nil
}

type NullableRoutesV2GenerateRecordRequest struct {
	value *RoutesV2GenerateRecordRequest
	isSet bool
}

func (v NullableRoutesV2GenerateRecordRequest) Get() *RoutesV2GenerateRecordRequest {
	return v.value
}

func (v *NullableRoutesV2GenerateRecordRequest) Set(val *RoutesV2GenerateRecordRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2GenerateRecordRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2GenerateRecordRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2GenerateRecordRequest(val *RoutesV2GenerateRecordRequest) *NullableRoutesV2GenerateRecordRequest {
	return &NullableRoutesV2GenerateRecordRequest{value: val, isSet: true}
}

func (v NullableRoutesV2GenerateRecordRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2GenerateRecordRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


