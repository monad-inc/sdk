/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// SecretProcessesorInputConfigSettings - struct for SecretProcessesorInputConfigSettings
type SecretProcessesorInputConfigSettings struct {
	ActivityLogsSettingsConfig *ActivityLogsSettingsConfig
	ActorsInfoSettingsConfig *ActorsInfoSettingsConfig
	AdminActivitySettingsConfig *AdminActivitySettingsConfig
	AdminLogsSettingsConfig *AdminLogsSettingsConfig
	AuditLogsSettingsConfig *AuditLogsSettingsConfig
	AuthLogsSettingsConfig *AuthLogsSettingsConfig
	AwsGuarddutySettingsConfig *AwsGuarddutySettingsConfig
	AwsS3SettingsConfig *AwsS3SettingsConfig
	AwssqsSettingsConfig *AwssqsSettingsConfig
	AzureActivityLogsSettingsConfig *AzureActivityLogsSettingsConfig
	AzureBlobStorageSettingsConfig *AzureBlobStorageSettingsConfig
	BigqueryInputSettingsConfig *BigqueryInputSettingsConfig
	BoxEventsSettingsConfig *BoxEventsSettingsConfig
	BoxUsersSettingsConfig *BoxUsersSettingsConfig
	CertificateManagerSettingsConfig *CertificateManagerSettingsConfig
	CloudAssetInventorySettingsConfig *CloudAssetInventorySettingsConfig
	CloudConfigurationFindingsSettingsConfig *CloudConfigurationFindingsSettingsConfig
	CloudLogsSettingsConfig *CloudLogsSettingsConfig
	CloudResourceInventorySettingsConfig *CloudResourceInventorySettingsConfig
	CloudtrailSettingsConfig *CloudtrailSettingsConfig
	CrowdstrikeFdrSettingsConfig *CrowdstrikeFdrSettingsConfig
	DefenderForEndpointAlertsSettingsConfig *DefenderForEndpointAlertsSettingsConfig
	DemoCustomSettingsConfig *DemoCustomSettingsConfig
	DemoSettingsConfig *DemoSettingsConfig
	DetectSummariesSettingsConfig *DetectSummariesSettingsConfig
	DeviceActivitySettingsConfig *DeviceActivitySettingsConfig
	DeviceDetailsSettingsConfig *DeviceDetailsSettingsConfig
	DevicesSettingsConfig *DevicesSettingsConfig
	DriveActivitySettingsConfig *DriveActivitySettingsConfig
	EntraIdSettingsConfig *EntraIdSettingsConfig
	EventSettingsConfig *EventSettingsConfig
	EventsLogsSettingsConfig *EventsLogsSettingsConfig
	FullScansSettingsConfig *FullScansSettingsConfig
	GitlabIssuesSettingsConfig *GitlabIssuesSettingsConfig
	GoogleCloudStorageSettingsConfig *GoogleCloudStorageSettingsConfig
	IssuesSettingsConfig *IssuesSettingsConfig
	LogAnalyticsQuerySettingsConfig *LogAnalyticsQuerySettingsConfig
	LoginActivitySettingsConfig *LoginActivitySettingsConfig
	LoginSessionsSettingsConfig *LoginSessionsSettingsConfig
	MonadLogSettingsConfig *MonadLogSettingsConfig
	OauthActivitySettingsConfig *OauthActivitySettingsConfig
	ObjectStorageInputSettingsConfig *ObjectStorageInputSettingsConfig
	OneloginEventsSettingsConfig *OneloginEventsSettingsConfig
	RolesInfoSettingsConfig *RolesInfoSettingsConfig
	SemgrepDeploymentsSettingsConfig *SemgrepDeploymentsSettingsConfig
	SemgrepProjectDetailsSettingsConfig *SemgrepProjectDetailsSettingsConfig
	SemgrepProjectsSettingsConfig *SemgrepProjectsSettingsConfig
	SlackUsersSettingsConfig *SlackUsersSettingsConfig
	SlackgroupsSettingsConfig *SlackgroupsSettingsConfig
	SnowflakeInputSettingsConfig *SnowflakeInputSettingsConfig
	SnykOrganizationsSettingsConfig *SnykOrganizationsSettingsConfig
	SnykProjectsSettingsConfig *SnykProjectsSettingsConfig
	TailscaleUsersSettingsConfig *TailscaleUsersSettingsConfig
	TenableAssetsCronSettingsConfig *TenableAssetsCronSettingsConfig
	TenableVulnerabilitiesCronSettingsConfig *TenableVulnerabilitiesCronSettingsConfig
	UsersInfoSettingsConfig *UsersInfoSettingsConfig
	UsersSettingsConfig *UsersSettingsConfig
	VulnerabilitiesCronSettingsConfig *VulnerabilitiesCronSettingsConfig
	VulnerabilitiesSettingsConfig *VulnerabilitiesSettingsConfig
	VulnerabilityFindingsSettingsConfig *VulnerabilityFindingsSettingsConfig
	MapmapOfStringAny *map[string]interface{}
}

// ActivityLogsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns ActivityLogsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func ActivityLogsSettingsConfigAsSecretProcessesorInputConfigSettings(v *ActivityLogsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		ActivityLogsSettingsConfig: v,
	}
}

// ActorsInfoSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns ActorsInfoSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func ActorsInfoSettingsConfigAsSecretProcessesorInputConfigSettings(v *ActorsInfoSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		ActorsInfoSettingsConfig: v,
	}
}

// AdminActivitySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AdminActivitySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AdminActivitySettingsConfigAsSecretProcessesorInputConfigSettings(v *AdminActivitySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AdminActivitySettingsConfig: v,
	}
}

// AdminLogsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AdminLogsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AdminLogsSettingsConfigAsSecretProcessesorInputConfigSettings(v *AdminLogsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AdminLogsSettingsConfig: v,
	}
}

// AuditLogsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AuditLogsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AuditLogsSettingsConfigAsSecretProcessesorInputConfigSettings(v *AuditLogsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AuditLogsSettingsConfig: v,
	}
}

// AuthLogsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AuthLogsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AuthLogsSettingsConfigAsSecretProcessesorInputConfigSettings(v *AuthLogsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AuthLogsSettingsConfig: v,
	}
}

// AwsGuarddutySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AwsGuarddutySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AwsGuarddutySettingsConfigAsSecretProcessesorInputConfigSettings(v *AwsGuarddutySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AwsGuarddutySettingsConfig: v,
	}
}

// AwsS3SettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AwsS3SettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AwsS3SettingsConfigAsSecretProcessesorInputConfigSettings(v *AwsS3SettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AwsS3SettingsConfig: v,
	}
}

// AwssqsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AwssqsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AwssqsSettingsConfigAsSecretProcessesorInputConfigSettings(v *AwssqsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AwssqsSettingsConfig: v,
	}
}

// AzureActivityLogsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AzureActivityLogsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AzureActivityLogsSettingsConfigAsSecretProcessesorInputConfigSettings(v *AzureActivityLogsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AzureActivityLogsSettingsConfig: v,
	}
}

// AzureBlobStorageSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns AzureBlobStorageSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func AzureBlobStorageSettingsConfigAsSecretProcessesorInputConfigSettings(v *AzureBlobStorageSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		AzureBlobStorageSettingsConfig: v,
	}
}

// BigqueryInputSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns BigqueryInputSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func BigqueryInputSettingsConfigAsSecretProcessesorInputConfigSettings(v *BigqueryInputSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		BigqueryInputSettingsConfig: v,
	}
}

// BoxEventsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns BoxEventsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func BoxEventsSettingsConfigAsSecretProcessesorInputConfigSettings(v *BoxEventsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		BoxEventsSettingsConfig: v,
	}
}

// BoxUsersSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns BoxUsersSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func BoxUsersSettingsConfigAsSecretProcessesorInputConfigSettings(v *BoxUsersSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		BoxUsersSettingsConfig: v,
	}
}

// CertificateManagerSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns CertificateManagerSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func CertificateManagerSettingsConfigAsSecretProcessesorInputConfigSettings(v *CertificateManagerSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		CertificateManagerSettingsConfig: v,
	}
}

// CloudAssetInventorySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns CloudAssetInventorySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func CloudAssetInventorySettingsConfigAsSecretProcessesorInputConfigSettings(v *CloudAssetInventorySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		CloudAssetInventorySettingsConfig: v,
	}
}

// CloudConfigurationFindingsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns CloudConfigurationFindingsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func CloudConfigurationFindingsSettingsConfigAsSecretProcessesorInputConfigSettings(v *CloudConfigurationFindingsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		CloudConfigurationFindingsSettingsConfig: v,
	}
}

// CloudLogsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns CloudLogsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func CloudLogsSettingsConfigAsSecretProcessesorInputConfigSettings(v *CloudLogsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		CloudLogsSettingsConfig: v,
	}
}

// CloudResourceInventorySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns CloudResourceInventorySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func CloudResourceInventorySettingsConfigAsSecretProcessesorInputConfigSettings(v *CloudResourceInventorySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		CloudResourceInventorySettingsConfig: v,
	}
}

// CloudtrailSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns CloudtrailSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func CloudtrailSettingsConfigAsSecretProcessesorInputConfigSettings(v *CloudtrailSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		CloudtrailSettingsConfig: v,
	}
}

// CrowdstrikeFdrSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns CrowdstrikeFdrSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func CrowdstrikeFdrSettingsConfigAsSecretProcessesorInputConfigSettings(v *CrowdstrikeFdrSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		CrowdstrikeFdrSettingsConfig: v,
	}
}

// DefenderForEndpointAlertsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DefenderForEndpointAlertsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DefenderForEndpointAlertsSettingsConfigAsSecretProcessesorInputConfigSettings(v *DefenderForEndpointAlertsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DefenderForEndpointAlertsSettingsConfig: v,
	}
}

// DemoCustomSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DemoCustomSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DemoCustomSettingsConfigAsSecretProcessesorInputConfigSettings(v *DemoCustomSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DemoCustomSettingsConfig: v,
	}
}

// DemoSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DemoSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DemoSettingsConfigAsSecretProcessesorInputConfigSettings(v *DemoSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DemoSettingsConfig: v,
	}
}

// DetectSummariesSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DetectSummariesSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DetectSummariesSettingsConfigAsSecretProcessesorInputConfigSettings(v *DetectSummariesSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DetectSummariesSettingsConfig: v,
	}
}

// DeviceActivitySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DeviceActivitySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DeviceActivitySettingsConfigAsSecretProcessesorInputConfigSettings(v *DeviceActivitySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DeviceActivitySettingsConfig: v,
	}
}

// DeviceDetailsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DeviceDetailsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DeviceDetailsSettingsConfigAsSecretProcessesorInputConfigSettings(v *DeviceDetailsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DeviceDetailsSettingsConfig: v,
	}
}

// DevicesSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DevicesSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DevicesSettingsConfigAsSecretProcessesorInputConfigSettings(v *DevicesSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DevicesSettingsConfig: v,
	}
}

// DriveActivitySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns DriveActivitySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func DriveActivitySettingsConfigAsSecretProcessesorInputConfigSettings(v *DriveActivitySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		DriveActivitySettingsConfig: v,
	}
}

// EntraIdSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns EntraIdSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func EntraIdSettingsConfigAsSecretProcessesorInputConfigSettings(v *EntraIdSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		EntraIdSettingsConfig: v,
	}
}

// EventSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns EventSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func EventSettingsConfigAsSecretProcessesorInputConfigSettings(v *EventSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		EventSettingsConfig: v,
	}
}

// EventsLogsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns EventsLogsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func EventsLogsSettingsConfigAsSecretProcessesorInputConfigSettings(v *EventsLogsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		EventsLogsSettingsConfig: v,
	}
}

// FullScansSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns FullScansSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func FullScansSettingsConfigAsSecretProcessesorInputConfigSettings(v *FullScansSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		FullScansSettingsConfig: v,
	}
}

// GitlabIssuesSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns GitlabIssuesSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func GitlabIssuesSettingsConfigAsSecretProcessesorInputConfigSettings(v *GitlabIssuesSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		GitlabIssuesSettingsConfig: v,
	}
}

// GoogleCloudStorageSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns GoogleCloudStorageSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func GoogleCloudStorageSettingsConfigAsSecretProcessesorInputConfigSettings(v *GoogleCloudStorageSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		GoogleCloudStorageSettingsConfig: v,
	}
}

// IssuesSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns IssuesSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func IssuesSettingsConfigAsSecretProcessesorInputConfigSettings(v *IssuesSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		IssuesSettingsConfig: v,
	}
}

// LogAnalyticsQuerySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns LogAnalyticsQuerySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func LogAnalyticsQuerySettingsConfigAsSecretProcessesorInputConfigSettings(v *LogAnalyticsQuerySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		LogAnalyticsQuerySettingsConfig: v,
	}
}

// LoginActivitySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns LoginActivitySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func LoginActivitySettingsConfigAsSecretProcessesorInputConfigSettings(v *LoginActivitySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		LoginActivitySettingsConfig: v,
	}
}

// LoginSessionsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns LoginSessionsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func LoginSessionsSettingsConfigAsSecretProcessesorInputConfigSettings(v *LoginSessionsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		LoginSessionsSettingsConfig: v,
	}
}

// MonadLogSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns MonadLogSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func MonadLogSettingsConfigAsSecretProcessesorInputConfigSettings(v *MonadLogSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		MonadLogSettingsConfig: v,
	}
}

// OauthActivitySettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns OauthActivitySettingsConfig wrapped in SecretProcessesorInputConfigSettings
func OauthActivitySettingsConfigAsSecretProcessesorInputConfigSettings(v *OauthActivitySettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		OauthActivitySettingsConfig: v,
	}
}

// ObjectStorageInputSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns ObjectStorageInputSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func ObjectStorageInputSettingsConfigAsSecretProcessesorInputConfigSettings(v *ObjectStorageInputSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		ObjectStorageInputSettingsConfig: v,
	}
}

// OneloginEventsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns OneloginEventsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func OneloginEventsSettingsConfigAsSecretProcessesorInputConfigSettings(v *OneloginEventsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		OneloginEventsSettingsConfig: v,
	}
}

// RolesInfoSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns RolesInfoSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func RolesInfoSettingsConfigAsSecretProcessesorInputConfigSettings(v *RolesInfoSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		RolesInfoSettingsConfig: v,
	}
}

// SemgrepDeploymentsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SemgrepDeploymentsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SemgrepDeploymentsSettingsConfigAsSecretProcessesorInputConfigSettings(v *SemgrepDeploymentsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SemgrepDeploymentsSettingsConfig: v,
	}
}

// SemgrepProjectDetailsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SemgrepProjectDetailsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SemgrepProjectDetailsSettingsConfigAsSecretProcessesorInputConfigSettings(v *SemgrepProjectDetailsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SemgrepProjectDetailsSettingsConfig: v,
	}
}

// SemgrepProjectsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SemgrepProjectsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SemgrepProjectsSettingsConfigAsSecretProcessesorInputConfigSettings(v *SemgrepProjectsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SemgrepProjectsSettingsConfig: v,
	}
}

// SlackUsersSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SlackUsersSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SlackUsersSettingsConfigAsSecretProcessesorInputConfigSettings(v *SlackUsersSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SlackUsersSettingsConfig: v,
	}
}

// SlackgroupsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SlackgroupsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SlackgroupsSettingsConfigAsSecretProcessesorInputConfigSettings(v *SlackgroupsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SlackgroupsSettingsConfig: v,
	}
}

// SnowflakeInputSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SnowflakeInputSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SnowflakeInputSettingsConfigAsSecretProcessesorInputConfigSettings(v *SnowflakeInputSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SnowflakeInputSettingsConfig: v,
	}
}

// SnykOrganizationsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SnykOrganizationsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SnykOrganizationsSettingsConfigAsSecretProcessesorInputConfigSettings(v *SnykOrganizationsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SnykOrganizationsSettingsConfig: v,
	}
}

// SnykProjectsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns SnykProjectsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func SnykProjectsSettingsConfigAsSecretProcessesorInputConfigSettings(v *SnykProjectsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		SnykProjectsSettingsConfig: v,
	}
}

// TailscaleUsersSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns TailscaleUsersSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func TailscaleUsersSettingsConfigAsSecretProcessesorInputConfigSettings(v *TailscaleUsersSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		TailscaleUsersSettingsConfig: v,
	}
}

// TenableAssetsCronSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns TenableAssetsCronSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func TenableAssetsCronSettingsConfigAsSecretProcessesorInputConfigSettings(v *TenableAssetsCronSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		TenableAssetsCronSettingsConfig: v,
	}
}

// TenableVulnerabilitiesCronSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns TenableVulnerabilitiesCronSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func TenableVulnerabilitiesCronSettingsConfigAsSecretProcessesorInputConfigSettings(v *TenableVulnerabilitiesCronSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		TenableVulnerabilitiesCronSettingsConfig: v,
	}
}

// UsersInfoSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns UsersInfoSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func UsersInfoSettingsConfigAsSecretProcessesorInputConfigSettings(v *UsersInfoSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		UsersInfoSettingsConfig: v,
	}
}

// UsersSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns UsersSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func UsersSettingsConfigAsSecretProcessesorInputConfigSettings(v *UsersSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		UsersSettingsConfig: v,
	}
}

// VulnerabilitiesCronSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns VulnerabilitiesCronSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func VulnerabilitiesCronSettingsConfigAsSecretProcessesorInputConfigSettings(v *VulnerabilitiesCronSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		VulnerabilitiesCronSettingsConfig: v,
	}
}

// VulnerabilitiesSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns VulnerabilitiesSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func VulnerabilitiesSettingsConfigAsSecretProcessesorInputConfigSettings(v *VulnerabilitiesSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		VulnerabilitiesSettingsConfig: v,
	}
}

// VulnerabilityFindingsSettingsConfigAsSecretProcessesorInputConfigSettings is a convenience function that returns VulnerabilityFindingsSettingsConfig wrapped in SecretProcessesorInputConfigSettings
func VulnerabilityFindingsSettingsConfigAsSecretProcessesorInputConfigSettings(v *VulnerabilityFindingsSettingsConfig) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		VulnerabilityFindingsSettingsConfig: v,
	}
}

// map[string]interface{}AsSecretProcessesorInputConfigSettings is a convenience function that returns map[string]interface{} wrapped in SecretProcessesorInputConfigSettings
func MapmapOfStringAnyAsSecretProcessesorInputConfigSettings(v *map[string]interface{}) SecretProcessesorInputConfigSettings {
	return SecretProcessesorInputConfigSettings{
		MapmapOfStringAny: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *SecretProcessesorInputConfigSettings) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ActivityLogsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.ActivityLogsSettingsConfig)
	if err == nil {
		jsonActivityLogsSettingsConfig, _ := json.Marshal(dst.ActivityLogsSettingsConfig)
		if string(jsonActivityLogsSettingsConfig) == "{}" { // empty struct
			dst.ActivityLogsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.ActivityLogsSettingsConfig); err != nil {
				dst.ActivityLogsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.ActivityLogsSettingsConfig = nil
	}

	// try to unmarshal data into ActorsInfoSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.ActorsInfoSettingsConfig)
	if err == nil {
		jsonActorsInfoSettingsConfig, _ := json.Marshal(dst.ActorsInfoSettingsConfig)
		if string(jsonActorsInfoSettingsConfig) == "{}" { // empty struct
			dst.ActorsInfoSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.ActorsInfoSettingsConfig); err != nil {
				dst.ActorsInfoSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.ActorsInfoSettingsConfig = nil
	}

	// try to unmarshal data into AdminActivitySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AdminActivitySettingsConfig)
	if err == nil {
		jsonAdminActivitySettingsConfig, _ := json.Marshal(dst.AdminActivitySettingsConfig)
		if string(jsonAdminActivitySettingsConfig) == "{}" { // empty struct
			dst.AdminActivitySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AdminActivitySettingsConfig); err != nil {
				dst.AdminActivitySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AdminActivitySettingsConfig = nil
	}

	// try to unmarshal data into AdminLogsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AdminLogsSettingsConfig)
	if err == nil {
		jsonAdminLogsSettingsConfig, _ := json.Marshal(dst.AdminLogsSettingsConfig)
		if string(jsonAdminLogsSettingsConfig) == "{}" { // empty struct
			dst.AdminLogsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AdminLogsSettingsConfig); err != nil {
				dst.AdminLogsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AdminLogsSettingsConfig = nil
	}

	// try to unmarshal data into AuditLogsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AuditLogsSettingsConfig)
	if err == nil {
		jsonAuditLogsSettingsConfig, _ := json.Marshal(dst.AuditLogsSettingsConfig)
		if string(jsonAuditLogsSettingsConfig) == "{}" { // empty struct
			dst.AuditLogsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AuditLogsSettingsConfig); err != nil {
				dst.AuditLogsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AuditLogsSettingsConfig = nil
	}

	// try to unmarshal data into AuthLogsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AuthLogsSettingsConfig)
	if err == nil {
		jsonAuthLogsSettingsConfig, _ := json.Marshal(dst.AuthLogsSettingsConfig)
		if string(jsonAuthLogsSettingsConfig) == "{}" { // empty struct
			dst.AuthLogsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AuthLogsSettingsConfig); err != nil {
				dst.AuthLogsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AuthLogsSettingsConfig = nil
	}

	// try to unmarshal data into AwsGuarddutySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AwsGuarddutySettingsConfig)
	if err == nil {
		jsonAwsGuarddutySettingsConfig, _ := json.Marshal(dst.AwsGuarddutySettingsConfig)
		if string(jsonAwsGuarddutySettingsConfig) == "{}" { // empty struct
			dst.AwsGuarddutySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AwsGuarddutySettingsConfig); err != nil {
				dst.AwsGuarddutySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AwsGuarddutySettingsConfig = nil
	}

	// try to unmarshal data into AwsS3SettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AwsS3SettingsConfig)
	if err == nil {
		jsonAwsS3SettingsConfig, _ := json.Marshal(dst.AwsS3SettingsConfig)
		if string(jsonAwsS3SettingsConfig) == "{}" { // empty struct
			dst.AwsS3SettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AwsS3SettingsConfig); err != nil {
				dst.AwsS3SettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AwsS3SettingsConfig = nil
	}

	// try to unmarshal data into AwssqsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AwssqsSettingsConfig)
	if err == nil {
		jsonAwssqsSettingsConfig, _ := json.Marshal(dst.AwssqsSettingsConfig)
		if string(jsonAwssqsSettingsConfig) == "{}" { // empty struct
			dst.AwssqsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AwssqsSettingsConfig); err != nil {
				dst.AwssqsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AwssqsSettingsConfig = nil
	}

	// try to unmarshal data into AzureActivityLogsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AzureActivityLogsSettingsConfig)
	if err == nil {
		jsonAzureActivityLogsSettingsConfig, _ := json.Marshal(dst.AzureActivityLogsSettingsConfig)
		if string(jsonAzureActivityLogsSettingsConfig) == "{}" { // empty struct
			dst.AzureActivityLogsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AzureActivityLogsSettingsConfig); err != nil {
				dst.AzureActivityLogsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AzureActivityLogsSettingsConfig = nil
	}

	// try to unmarshal data into AzureBlobStorageSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.AzureBlobStorageSettingsConfig)
	if err == nil {
		jsonAzureBlobStorageSettingsConfig, _ := json.Marshal(dst.AzureBlobStorageSettingsConfig)
		if string(jsonAzureBlobStorageSettingsConfig) == "{}" { // empty struct
			dst.AzureBlobStorageSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.AzureBlobStorageSettingsConfig); err != nil {
				dst.AzureBlobStorageSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.AzureBlobStorageSettingsConfig = nil
	}

	// try to unmarshal data into BigqueryInputSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.BigqueryInputSettingsConfig)
	if err == nil {
		jsonBigqueryInputSettingsConfig, _ := json.Marshal(dst.BigqueryInputSettingsConfig)
		if string(jsonBigqueryInputSettingsConfig) == "{}" { // empty struct
			dst.BigqueryInputSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.BigqueryInputSettingsConfig); err != nil {
				dst.BigqueryInputSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.BigqueryInputSettingsConfig = nil
	}

	// try to unmarshal data into BoxEventsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.BoxEventsSettingsConfig)
	if err == nil {
		jsonBoxEventsSettingsConfig, _ := json.Marshal(dst.BoxEventsSettingsConfig)
		if string(jsonBoxEventsSettingsConfig) == "{}" { // empty struct
			dst.BoxEventsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.BoxEventsSettingsConfig); err != nil {
				dst.BoxEventsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.BoxEventsSettingsConfig = nil
	}

	// try to unmarshal data into BoxUsersSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.BoxUsersSettingsConfig)
	if err == nil {
		jsonBoxUsersSettingsConfig, _ := json.Marshal(dst.BoxUsersSettingsConfig)
		if string(jsonBoxUsersSettingsConfig) == "{}" { // empty struct
			dst.BoxUsersSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.BoxUsersSettingsConfig); err != nil {
				dst.BoxUsersSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.BoxUsersSettingsConfig = nil
	}

	// try to unmarshal data into CertificateManagerSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CertificateManagerSettingsConfig)
	if err == nil {
		jsonCertificateManagerSettingsConfig, _ := json.Marshal(dst.CertificateManagerSettingsConfig)
		if string(jsonCertificateManagerSettingsConfig) == "{}" { // empty struct
			dst.CertificateManagerSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CertificateManagerSettingsConfig); err != nil {
				dst.CertificateManagerSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CertificateManagerSettingsConfig = nil
	}

	// try to unmarshal data into CloudAssetInventorySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CloudAssetInventorySettingsConfig)
	if err == nil {
		jsonCloudAssetInventorySettingsConfig, _ := json.Marshal(dst.CloudAssetInventorySettingsConfig)
		if string(jsonCloudAssetInventorySettingsConfig) == "{}" { // empty struct
			dst.CloudAssetInventorySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CloudAssetInventorySettingsConfig); err != nil {
				dst.CloudAssetInventorySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CloudAssetInventorySettingsConfig = nil
	}

	// try to unmarshal data into CloudConfigurationFindingsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CloudConfigurationFindingsSettingsConfig)
	if err == nil {
		jsonCloudConfigurationFindingsSettingsConfig, _ := json.Marshal(dst.CloudConfigurationFindingsSettingsConfig)
		if string(jsonCloudConfigurationFindingsSettingsConfig) == "{}" { // empty struct
			dst.CloudConfigurationFindingsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CloudConfigurationFindingsSettingsConfig); err != nil {
				dst.CloudConfigurationFindingsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CloudConfigurationFindingsSettingsConfig = nil
	}

	// try to unmarshal data into CloudLogsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CloudLogsSettingsConfig)
	if err == nil {
		jsonCloudLogsSettingsConfig, _ := json.Marshal(dst.CloudLogsSettingsConfig)
		if string(jsonCloudLogsSettingsConfig) == "{}" { // empty struct
			dst.CloudLogsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CloudLogsSettingsConfig); err != nil {
				dst.CloudLogsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CloudLogsSettingsConfig = nil
	}

	// try to unmarshal data into CloudResourceInventorySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CloudResourceInventorySettingsConfig)
	if err == nil {
		jsonCloudResourceInventorySettingsConfig, _ := json.Marshal(dst.CloudResourceInventorySettingsConfig)
		if string(jsonCloudResourceInventorySettingsConfig) == "{}" { // empty struct
			dst.CloudResourceInventorySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CloudResourceInventorySettingsConfig); err != nil {
				dst.CloudResourceInventorySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CloudResourceInventorySettingsConfig = nil
	}

	// try to unmarshal data into CloudtrailSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CloudtrailSettingsConfig)
	if err == nil {
		jsonCloudtrailSettingsConfig, _ := json.Marshal(dst.CloudtrailSettingsConfig)
		if string(jsonCloudtrailSettingsConfig) == "{}" { // empty struct
			dst.CloudtrailSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CloudtrailSettingsConfig); err != nil {
				dst.CloudtrailSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CloudtrailSettingsConfig = nil
	}

	// try to unmarshal data into CrowdstrikeFdrSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.CrowdstrikeFdrSettingsConfig)
	if err == nil {
		jsonCrowdstrikeFdrSettingsConfig, _ := json.Marshal(dst.CrowdstrikeFdrSettingsConfig)
		if string(jsonCrowdstrikeFdrSettingsConfig) == "{}" { // empty struct
			dst.CrowdstrikeFdrSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.CrowdstrikeFdrSettingsConfig); err != nil {
				dst.CrowdstrikeFdrSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.CrowdstrikeFdrSettingsConfig = nil
	}

	// try to unmarshal data into DefenderForEndpointAlertsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DefenderForEndpointAlertsSettingsConfig)
	if err == nil {
		jsonDefenderForEndpointAlertsSettingsConfig, _ := json.Marshal(dst.DefenderForEndpointAlertsSettingsConfig)
		if string(jsonDefenderForEndpointAlertsSettingsConfig) == "{}" { // empty struct
			dst.DefenderForEndpointAlertsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DefenderForEndpointAlertsSettingsConfig); err != nil {
				dst.DefenderForEndpointAlertsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DefenderForEndpointAlertsSettingsConfig = nil
	}

	// try to unmarshal data into DemoCustomSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DemoCustomSettingsConfig)
	if err == nil {
		jsonDemoCustomSettingsConfig, _ := json.Marshal(dst.DemoCustomSettingsConfig)
		if string(jsonDemoCustomSettingsConfig) == "{}" { // empty struct
			dst.DemoCustomSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DemoCustomSettingsConfig); err != nil {
				dst.DemoCustomSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DemoCustomSettingsConfig = nil
	}

	// try to unmarshal data into DemoSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DemoSettingsConfig)
	if err == nil {
		jsonDemoSettingsConfig, _ := json.Marshal(dst.DemoSettingsConfig)
		if string(jsonDemoSettingsConfig) == "{}" { // empty struct
			dst.DemoSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DemoSettingsConfig); err != nil {
				dst.DemoSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DemoSettingsConfig = nil
	}

	// try to unmarshal data into DetectSummariesSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DetectSummariesSettingsConfig)
	if err == nil {
		jsonDetectSummariesSettingsConfig, _ := json.Marshal(dst.DetectSummariesSettingsConfig)
		if string(jsonDetectSummariesSettingsConfig) == "{}" { // empty struct
			dst.DetectSummariesSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DetectSummariesSettingsConfig); err != nil {
				dst.DetectSummariesSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DetectSummariesSettingsConfig = nil
	}

	// try to unmarshal data into DeviceActivitySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DeviceActivitySettingsConfig)
	if err == nil {
		jsonDeviceActivitySettingsConfig, _ := json.Marshal(dst.DeviceActivitySettingsConfig)
		if string(jsonDeviceActivitySettingsConfig) == "{}" { // empty struct
			dst.DeviceActivitySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DeviceActivitySettingsConfig); err != nil {
				dst.DeviceActivitySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DeviceActivitySettingsConfig = nil
	}

	// try to unmarshal data into DeviceDetailsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DeviceDetailsSettingsConfig)
	if err == nil {
		jsonDeviceDetailsSettingsConfig, _ := json.Marshal(dst.DeviceDetailsSettingsConfig)
		if string(jsonDeviceDetailsSettingsConfig) == "{}" { // empty struct
			dst.DeviceDetailsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DeviceDetailsSettingsConfig); err != nil {
				dst.DeviceDetailsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DeviceDetailsSettingsConfig = nil
	}

	// try to unmarshal data into DevicesSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DevicesSettingsConfig)
	if err == nil {
		jsonDevicesSettingsConfig, _ := json.Marshal(dst.DevicesSettingsConfig)
		if string(jsonDevicesSettingsConfig) == "{}" { // empty struct
			dst.DevicesSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DevicesSettingsConfig); err != nil {
				dst.DevicesSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DevicesSettingsConfig = nil
	}

	// try to unmarshal data into DriveActivitySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.DriveActivitySettingsConfig)
	if err == nil {
		jsonDriveActivitySettingsConfig, _ := json.Marshal(dst.DriveActivitySettingsConfig)
		if string(jsonDriveActivitySettingsConfig) == "{}" { // empty struct
			dst.DriveActivitySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.DriveActivitySettingsConfig); err != nil {
				dst.DriveActivitySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.DriveActivitySettingsConfig = nil
	}

	// try to unmarshal data into EntraIdSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.EntraIdSettingsConfig)
	if err == nil {
		jsonEntraIdSettingsConfig, _ := json.Marshal(dst.EntraIdSettingsConfig)
		if string(jsonEntraIdSettingsConfig) == "{}" { // empty struct
			dst.EntraIdSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.EntraIdSettingsConfig); err != nil {
				dst.EntraIdSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.EntraIdSettingsConfig = nil
	}

	// try to unmarshal data into EventSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.EventSettingsConfig)
	if err == nil {
		jsonEventSettingsConfig, _ := json.Marshal(dst.EventSettingsConfig)
		if string(jsonEventSettingsConfig) == "{}" { // empty struct
			dst.EventSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.EventSettingsConfig); err != nil {
				dst.EventSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.EventSettingsConfig = nil
	}

	// try to unmarshal data into EventsLogsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.EventsLogsSettingsConfig)
	if err == nil {
		jsonEventsLogsSettingsConfig, _ := json.Marshal(dst.EventsLogsSettingsConfig)
		if string(jsonEventsLogsSettingsConfig) == "{}" { // empty struct
			dst.EventsLogsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.EventsLogsSettingsConfig); err != nil {
				dst.EventsLogsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.EventsLogsSettingsConfig = nil
	}

	// try to unmarshal data into FullScansSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.FullScansSettingsConfig)
	if err == nil {
		jsonFullScansSettingsConfig, _ := json.Marshal(dst.FullScansSettingsConfig)
		if string(jsonFullScansSettingsConfig) == "{}" { // empty struct
			dst.FullScansSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.FullScansSettingsConfig); err != nil {
				dst.FullScansSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.FullScansSettingsConfig = nil
	}

	// try to unmarshal data into GitlabIssuesSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.GitlabIssuesSettingsConfig)
	if err == nil {
		jsonGitlabIssuesSettingsConfig, _ := json.Marshal(dst.GitlabIssuesSettingsConfig)
		if string(jsonGitlabIssuesSettingsConfig) == "{}" { // empty struct
			dst.GitlabIssuesSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.GitlabIssuesSettingsConfig); err != nil {
				dst.GitlabIssuesSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.GitlabIssuesSettingsConfig = nil
	}

	// try to unmarshal data into GoogleCloudStorageSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.GoogleCloudStorageSettingsConfig)
	if err == nil {
		jsonGoogleCloudStorageSettingsConfig, _ := json.Marshal(dst.GoogleCloudStorageSettingsConfig)
		if string(jsonGoogleCloudStorageSettingsConfig) == "{}" { // empty struct
			dst.GoogleCloudStorageSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.GoogleCloudStorageSettingsConfig); err != nil {
				dst.GoogleCloudStorageSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.GoogleCloudStorageSettingsConfig = nil
	}

	// try to unmarshal data into IssuesSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.IssuesSettingsConfig)
	if err == nil {
		jsonIssuesSettingsConfig, _ := json.Marshal(dst.IssuesSettingsConfig)
		if string(jsonIssuesSettingsConfig) == "{}" { // empty struct
			dst.IssuesSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.IssuesSettingsConfig); err != nil {
				dst.IssuesSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.IssuesSettingsConfig = nil
	}

	// try to unmarshal data into LogAnalyticsQuerySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.LogAnalyticsQuerySettingsConfig)
	if err == nil {
		jsonLogAnalyticsQuerySettingsConfig, _ := json.Marshal(dst.LogAnalyticsQuerySettingsConfig)
		if string(jsonLogAnalyticsQuerySettingsConfig) == "{}" { // empty struct
			dst.LogAnalyticsQuerySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.LogAnalyticsQuerySettingsConfig); err != nil {
				dst.LogAnalyticsQuerySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.LogAnalyticsQuerySettingsConfig = nil
	}

	// try to unmarshal data into LoginActivitySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.LoginActivitySettingsConfig)
	if err == nil {
		jsonLoginActivitySettingsConfig, _ := json.Marshal(dst.LoginActivitySettingsConfig)
		if string(jsonLoginActivitySettingsConfig) == "{}" { // empty struct
			dst.LoginActivitySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.LoginActivitySettingsConfig); err != nil {
				dst.LoginActivitySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.LoginActivitySettingsConfig = nil
	}

	// try to unmarshal data into LoginSessionsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.LoginSessionsSettingsConfig)
	if err == nil {
		jsonLoginSessionsSettingsConfig, _ := json.Marshal(dst.LoginSessionsSettingsConfig)
		if string(jsonLoginSessionsSettingsConfig) == "{}" { // empty struct
			dst.LoginSessionsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.LoginSessionsSettingsConfig); err != nil {
				dst.LoginSessionsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.LoginSessionsSettingsConfig = nil
	}

	// try to unmarshal data into MonadLogSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.MonadLogSettingsConfig)
	if err == nil {
		jsonMonadLogSettingsConfig, _ := json.Marshal(dst.MonadLogSettingsConfig)
		if string(jsonMonadLogSettingsConfig) == "{}" { // empty struct
			dst.MonadLogSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.MonadLogSettingsConfig); err != nil {
				dst.MonadLogSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.MonadLogSettingsConfig = nil
	}

	// try to unmarshal data into OauthActivitySettingsConfig
	err = newStrictDecoder(data).Decode(&dst.OauthActivitySettingsConfig)
	if err == nil {
		jsonOauthActivitySettingsConfig, _ := json.Marshal(dst.OauthActivitySettingsConfig)
		if string(jsonOauthActivitySettingsConfig) == "{}" { // empty struct
			dst.OauthActivitySettingsConfig = nil
		} else {
			if err = validator.Validate(dst.OauthActivitySettingsConfig); err != nil {
				dst.OauthActivitySettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.OauthActivitySettingsConfig = nil
	}

	// try to unmarshal data into ObjectStorageInputSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.ObjectStorageInputSettingsConfig)
	if err == nil {
		jsonObjectStorageInputSettingsConfig, _ := json.Marshal(dst.ObjectStorageInputSettingsConfig)
		if string(jsonObjectStorageInputSettingsConfig) == "{}" { // empty struct
			dst.ObjectStorageInputSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.ObjectStorageInputSettingsConfig); err != nil {
				dst.ObjectStorageInputSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.ObjectStorageInputSettingsConfig = nil
	}

	// try to unmarshal data into OneloginEventsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.OneloginEventsSettingsConfig)
	if err == nil {
		jsonOneloginEventsSettingsConfig, _ := json.Marshal(dst.OneloginEventsSettingsConfig)
		if string(jsonOneloginEventsSettingsConfig) == "{}" { // empty struct
			dst.OneloginEventsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.OneloginEventsSettingsConfig); err != nil {
				dst.OneloginEventsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.OneloginEventsSettingsConfig = nil
	}

	// try to unmarshal data into RolesInfoSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.RolesInfoSettingsConfig)
	if err == nil {
		jsonRolesInfoSettingsConfig, _ := json.Marshal(dst.RolesInfoSettingsConfig)
		if string(jsonRolesInfoSettingsConfig) == "{}" { // empty struct
			dst.RolesInfoSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.RolesInfoSettingsConfig); err != nil {
				dst.RolesInfoSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.RolesInfoSettingsConfig = nil
	}

	// try to unmarshal data into SemgrepDeploymentsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SemgrepDeploymentsSettingsConfig)
	if err == nil {
		jsonSemgrepDeploymentsSettingsConfig, _ := json.Marshal(dst.SemgrepDeploymentsSettingsConfig)
		if string(jsonSemgrepDeploymentsSettingsConfig) == "{}" { // empty struct
			dst.SemgrepDeploymentsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SemgrepDeploymentsSettingsConfig); err != nil {
				dst.SemgrepDeploymentsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SemgrepDeploymentsSettingsConfig = nil
	}

	// try to unmarshal data into SemgrepProjectDetailsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SemgrepProjectDetailsSettingsConfig)
	if err == nil {
		jsonSemgrepProjectDetailsSettingsConfig, _ := json.Marshal(dst.SemgrepProjectDetailsSettingsConfig)
		if string(jsonSemgrepProjectDetailsSettingsConfig) == "{}" { // empty struct
			dst.SemgrepProjectDetailsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SemgrepProjectDetailsSettingsConfig); err != nil {
				dst.SemgrepProjectDetailsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SemgrepProjectDetailsSettingsConfig = nil
	}

	// try to unmarshal data into SemgrepProjectsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SemgrepProjectsSettingsConfig)
	if err == nil {
		jsonSemgrepProjectsSettingsConfig, _ := json.Marshal(dst.SemgrepProjectsSettingsConfig)
		if string(jsonSemgrepProjectsSettingsConfig) == "{}" { // empty struct
			dst.SemgrepProjectsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SemgrepProjectsSettingsConfig); err != nil {
				dst.SemgrepProjectsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SemgrepProjectsSettingsConfig = nil
	}

	// try to unmarshal data into SlackUsersSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SlackUsersSettingsConfig)
	if err == nil {
		jsonSlackUsersSettingsConfig, _ := json.Marshal(dst.SlackUsersSettingsConfig)
		if string(jsonSlackUsersSettingsConfig) == "{}" { // empty struct
			dst.SlackUsersSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SlackUsersSettingsConfig); err != nil {
				dst.SlackUsersSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SlackUsersSettingsConfig = nil
	}

	// try to unmarshal data into SlackgroupsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SlackgroupsSettingsConfig)
	if err == nil {
		jsonSlackgroupsSettingsConfig, _ := json.Marshal(dst.SlackgroupsSettingsConfig)
		if string(jsonSlackgroupsSettingsConfig) == "{}" { // empty struct
			dst.SlackgroupsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SlackgroupsSettingsConfig); err != nil {
				dst.SlackgroupsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SlackgroupsSettingsConfig = nil
	}

	// try to unmarshal data into SnowflakeInputSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SnowflakeInputSettingsConfig)
	if err == nil {
		jsonSnowflakeInputSettingsConfig, _ := json.Marshal(dst.SnowflakeInputSettingsConfig)
		if string(jsonSnowflakeInputSettingsConfig) == "{}" { // empty struct
			dst.SnowflakeInputSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SnowflakeInputSettingsConfig); err != nil {
				dst.SnowflakeInputSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SnowflakeInputSettingsConfig = nil
	}

	// try to unmarshal data into SnykOrganizationsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SnykOrganizationsSettingsConfig)
	if err == nil {
		jsonSnykOrganizationsSettingsConfig, _ := json.Marshal(dst.SnykOrganizationsSettingsConfig)
		if string(jsonSnykOrganizationsSettingsConfig) == "{}" { // empty struct
			dst.SnykOrganizationsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SnykOrganizationsSettingsConfig); err != nil {
				dst.SnykOrganizationsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SnykOrganizationsSettingsConfig = nil
	}

	// try to unmarshal data into SnykProjectsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.SnykProjectsSettingsConfig)
	if err == nil {
		jsonSnykProjectsSettingsConfig, _ := json.Marshal(dst.SnykProjectsSettingsConfig)
		if string(jsonSnykProjectsSettingsConfig) == "{}" { // empty struct
			dst.SnykProjectsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.SnykProjectsSettingsConfig); err != nil {
				dst.SnykProjectsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.SnykProjectsSettingsConfig = nil
	}

	// try to unmarshal data into TailscaleUsersSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.TailscaleUsersSettingsConfig)
	if err == nil {
		jsonTailscaleUsersSettingsConfig, _ := json.Marshal(dst.TailscaleUsersSettingsConfig)
		if string(jsonTailscaleUsersSettingsConfig) == "{}" { // empty struct
			dst.TailscaleUsersSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.TailscaleUsersSettingsConfig); err != nil {
				dst.TailscaleUsersSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.TailscaleUsersSettingsConfig = nil
	}

	// try to unmarshal data into TenableAssetsCronSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.TenableAssetsCronSettingsConfig)
	if err == nil {
		jsonTenableAssetsCronSettingsConfig, _ := json.Marshal(dst.TenableAssetsCronSettingsConfig)
		if string(jsonTenableAssetsCronSettingsConfig) == "{}" { // empty struct
			dst.TenableAssetsCronSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.TenableAssetsCronSettingsConfig); err != nil {
				dst.TenableAssetsCronSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.TenableAssetsCronSettingsConfig = nil
	}

	// try to unmarshal data into TenableVulnerabilitiesCronSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.TenableVulnerabilitiesCronSettingsConfig)
	if err == nil {
		jsonTenableVulnerabilitiesCronSettingsConfig, _ := json.Marshal(dst.TenableVulnerabilitiesCronSettingsConfig)
		if string(jsonTenableVulnerabilitiesCronSettingsConfig) == "{}" { // empty struct
			dst.TenableVulnerabilitiesCronSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.TenableVulnerabilitiesCronSettingsConfig); err != nil {
				dst.TenableVulnerabilitiesCronSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.TenableVulnerabilitiesCronSettingsConfig = nil
	}

	// try to unmarshal data into UsersInfoSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.UsersInfoSettingsConfig)
	if err == nil {
		jsonUsersInfoSettingsConfig, _ := json.Marshal(dst.UsersInfoSettingsConfig)
		if string(jsonUsersInfoSettingsConfig) == "{}" { // empty struct
			dst.UsersInfoSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.UsersInfoSettingsConfig); err != nil {
				dst.UsersInfoSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.UsersInfoSettingsConfig = nil
	}

	// try to unmarshal data into UsersSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.UsersSettingsConfig)
	if err == nil {
		jsonUsersSettingsConfig, _ := json.Marshal(dst.UsersSettingsConfig)
		if string(jsonUsersSettingsConfig) == "{}" { // empty struct
			dst.UsersSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.UsersSettingsConfig); err != nil {
				dst.UsersSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.UsersSettingsConfig = nil
	}

	// try to unmarshal data into VulnerabilitiesCronSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.VulnerabilitiesCronSettingsConfig)
	if err == nil {
		jsonVulnerabilitiesCronSettingsConfig, _ := json.Marshal(dst.VulnerabilitiesCronSettingsConfig)
		if string(jsonVulnerabilitiesCronSettingsConfig) == "{}" { // empty struct
			dst.VulnerabilitiesCronSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.VulnerabilitiesCronSettingsConfig); err != nil {
				dst.VulnerabilitiesCronSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.VulnerabilitiesCronSettingsConfig = nil
	}

	// try to unmarshal data into VulnerabilitiesSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.VulnerabilitiesSettingsConfig)
	if err == nil {
		jsonVulnerabilitiesSettingsConfig, _ := json.Marshal(dst.VulnerabilitiesSettingsConfig)
		if string(jsonVulnerabilitiesSettingsConfig) == "{}" { // empty struct
			dst.VulnerabilitiesSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.VulnerabilitiesSettingsConfig); err != nil {
				dst.VulnerabilitiesSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.VulnerabilitiesSettingsConfig = nil
	}

	// try to unmarshal data into VulnerabilityFindingsSettingsConfig
	err = newStrictDecoder(data).Decode(&dst.VulnerabilityFindingsSettingsConfig)
	if err == nil {
		jsonVulnerabilityFindingsSettingsConfig, _ := json.Marshal(dst.VulnerabilityFindingsSettingsConfig)
		if string(jsonVulnerabilityFindingsSettingsConfig) == "{}" { // empty struct
			dst.VulnerabilityFindingsSettingsConfig = nil
		} else {
			if err = validator.Validate(dst.VulnerabilityFindingsSettingsConfig); err != nil {
				dst.VulnerabilityFindingsSettingsConfig = nil
			} else {
				match++
			}
		}
	} else {
		dst.VulnerabilityFindingsSettingsConfig = nil
	}

	// try to unmarshal data into MapmapOfStringAny
	err = newStrictDecoder(data).Decode(&dst.MapmapOfStringAny)
	if err == nil {
		jsonMapmapOfStringAny, _ := json.Marshal(dst.MapmapOfStringAny)
		if string(jsonMapmapOfStringAny) == "{}" { // empty struct
			dst.MapmapOfStringAny = nil
		} else {
			if err = validator.Validate(dst.MapmapOfStringAny); err != nil {
				dst.MapmapOfStringAny = nil
			} else {
				match++
			}
		}
	} else {
		dst.MapmapOfStringAny = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ActivityLogsSettingsConfig = nil
		dst.ActorsInfoSettingsConfig = nil
		dst.AdminActivitySettingsConfig = nil
		dst.AdminLogsSettingsConfig = nil
		dst.AuditLogsSettingsConfig = nil
		dst.AuthLogsSettingsConfig = nil
		dst.AwsGuarddutySettingsConfig = nil
		dst.AwsS3SettingsConfig = nil
		dst.AwssqsSettingsConfig = nil
		dst.AzureActivityLogsSettingsConfig = nil
		dst.AzureBlobStorageSettingsConfig = nil
		dst.BigqueryInputSettingsConfig = nil
		dst.BoxEventsSettingsConfig = nil
		dst.BoxUsersSettingsConfig = nil
		dst.CertificateManagerSettingsConfig = nil
		dst.CloudAssetInventorySettingsConfig = nil
		dst.CloudConfigurationFindingsSettingsConfig = nil
		dst.CloudLogsSettingsConfig = nil
		dst.CloudResourceInventorySettingsConfig = nil
		dst.CloudtrailSettingsConfig = nil
		dst.CrowdstrikeFdrSettingsConfig = nil
		dst.DefenderForEndpointAlertsSettingsConfig = nil
		dst.DemoCustomSettingsConfig = nil
		dst.DemoSettingsConfig = nil
		dst.DetectSummariesSettingsConfig = nil
		dst.DeviceActivitySettingsConfig = nil
		dst.DeviceDetailsSettingsConfig = nil
		dst.DevicesSettingsConfig = nil
		dst.DriveActivitySettingsConfig = nil
		dst.EntraIdSettingsConfig = nil
		dst.EventSettingsConfig = nil
		dst.EventsLogsSettingsConfig = nil
		dst.FullScansSettingsConfig = nil
		dst.GitlabIssuesSettingsConfig = nil
		dst.GoogleCloudStorageSettingsConfig = nil
		dst.IssuesSettingsConfig = nil
		dst.LogAnalyticsQuerySettingsConfig = nil
		dst.LoginActivitySettingsConfig = nil
		dst.LoginSessionsSettingsConfig = nil
		dst.MonadLogSettingsConfig = nil
		dst.OauthActivitySettingsConfig = nil
		dst.ObjectStorageInputSettingsConfig = nil
		dst.OneloginEventsSettingsConfig = nil
		dst.RolesInfoSettingsConfig = nil
		dst.SemgrepDeploymentsSettingsConfig = nil
		dst.SemgrepProjectDetailsSettingsConfig = nil
		dst.SemgrepProjectsSettingsConfig = nil
		dst.SlackUsersSettingsConfig = nil
		dst.SlackgroupsSettingsConfig = nil
		dst.SnowflakeInputSettingsConfig = nil
		dst.SnykOrganizationsSettingsConfig = nil
		dst.SnykProjectsSettingsConfig = nil
		dst.TailscaleUsersSettingsConfig = nil
		dst.TenableAssetsCronSettingsConfig = nil
		dst.TenableVulnerabilitiesCronSettingsConfig = nil
		dst.UsersInfoSettingsConfig = nil
		dst.UsersSettingsConfig = nil
		dst.VulnerabilitiesCronSettingsConfig = nil
		dst.VulnerabilitiesSettingsConfig = nil
		dst.VulnerabilityFindingsSettingsConfig = nil
		dst.MapmapOfStringAny = nil

		return fmt.Errorf("data matches more than one schema in oneOf(SecretProcessesorInputConfigSettings)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(SecretProcessesorInputConfigSettings)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src SecretProcessesorInputConfigSettings) MarshalJSON() ([]byte, error) {
	if src.ActivityLogsSettingsConfig != nil {
		return json.Marshal(&src.ActivityLogsSettingsConfig)
	}

	if src.ActorsInfoSettingsConfig != nil {
		return json.Marshal(&src.ActorsInfoSettingsConfig)
	}

	if src.AdminActivitySettingsConfig != nil {
		return json.Marshal(&src.AdminActivitySettingsConfig)
	}

	if src.AdminLogsSettingsConfig != nil {
		return json.Marshal(&src.AdminLogsSettingsConfig)
	}

	if src.AuditLogsSettingsConfig != nil {
		return json.Marshal(&src.AuditLogsSettingsConfig)
	}

	if src.AuthLogsSettingsConfig != nil {
		return json.Marshal(&src.AuthLogsSettingsConfig)
	}

	if src.AwsGuarddutySettingsConfig != nil {
		return json.Marshal(&src.AwsGuarddutySettingsConfig)
	}

	if src.AwsS3SettingsConfig != nil {
		return json.Marshal(&src.AwsS3SettingsConfig)
	}

	if src.AwssqsSettingsConfig != nil {
		return json.Marshal(&src.AwssqsSettingsConfig)
	}

	if src.AzureActivityLogsSettingsConfig != nil {
		return json.Marshal(&src.AzureActivityLogsSettingsConfig)
	}

	if src.AzureBlobStorageSettingsConfig != nil {
		return json.Marshal(&src.AzureBlobStorageSettingsConfig)
	}

	if src.BigqueryInputSettingsConfig != nil {
		return json.Marshal(&src.BigqueryInputSettingsConfig)
	}

	if src.BoxEventsSettingsConfig != nil {
		return json.Marshal(&src.BoxEventsSettingsConfig)
	}

	if src.BoxUsersSettingsConfig != nil {
		return json.Marshal(&src.BoxUsersSettingsConfig)
	}

	if src.CertificateManagerSettingsConfig != nil {
		return json.Marshal(&src.CertificateManagerSettingsConfig)
	}

	if src.CloudAssetInventorySettingsConfig != nil {
		return json.Marshal(&src.CloudAssetInventorySettingsConfig)
	}

	if src.CloudConfigurationFindingsSettingsConfig != nil {
		return json.Marshal(&src.CloudConfigurationFindingsSettingsConfig)
	}

	if src.CloudLogsSettingsConfig != nil {
		return json.Marshal(&src.CloudLogsSettingsConfig)
	}

	if src.CloudResourceInventorySettingsConfig != nil {
		return json.Marshal(&src.CloudResourceInventorySettingsConfig)
	}

	if src.CloudtrailSettingsConfig != nil {
		return json.Marshal(&src.CloudtrailSettingsConfig)
	}

	if src.CrowdstrikeFdrSettingsConfig != nil {
		return json.Marshal(&src.CrowdstrikeFdrSettingsConfig)
	}

	if src.DefenderForEndpointAlertsSettingsConfig != nil {
		return json.Marshal(&src.DefenderForEndpointAlertsSettingsConfig)
	}

	if src.DemoCustomSettingsConfig != nil {
		return json.Marshal(&src.DemoCustomSettingsConfig)
	}

	if src.DemoSettingsConfig != nil {
		return json.Marshal(&src.DemoSettingsConfig)
	}

	if src.DetectSummariesSettingsConfig != nil {
		return json.Marshal(&src.DetectSummariesSettingsConfig)
	}

	if src.DeviceActivitySettingsConfig != nil {
		return json.Marshal(&src.DeviceActivitySettingsConfig)
	}

	if src.DeviceDetailsSettingsConfig != nil {
		return json.Marshal(&src.DeviceDetailsSettingsConfig)
	}

	if src.DevicesSettingsConfig != nil {
		return json.Marshal(&src.DevicesSettingsConfig)
	}

	if src.DriveActivitySettingsConfig != nil {
		return json.Marshal(&src.DriveActivitySettingsConfig)
	}

	if src.EntraIdSettingsConfig != nil {
		return json.Marshal(&src.EntraIdSettingsConfig)
	}

	if src.EventSettingsConfig != nil {
		return json.Marshal(&src.EventSettingsConfig)
	}

	if src.EventsLogsSettingsConfig != nil {
		return json.Marshal(&src.EventsLogsSettingsConfig)
	}

	if src.FullScansSettingsConfig != nil {
		return json.Marshal(&src.FullScansSettingsConfig)
	}

	if src.GitlabIssuesSettingsConfig != nil {
		return json.Marshal(&src.GitlabIssuesSettingsConfig)
	}

	if src.GoogleCloudStorageSettingsConfig != nil {
		return json.Marshal(&src.GoogleCloudStorageSettingsConfig)
	}

	if src.IssuesSettingsConfig != nil {
		return json.Marshal(&src.IssuesSettingsConfig)
	}

	if src.LogAnalyticsQuerySettingsConfig != nil {
		return json.Marshal(&src.LogAnalyticsQuerySettingsConfig)
	}

	if src.LoginActivitySettingsConfig != nil {
		return json.Marshal(&src.LoginActivitySettingsConfig)
	}

	if src.LoginSessionsSettingsConfig != nil {
		return json.Marshal(&src.LoginSessionsSettingsConfig)
	}

	if src.MonadLogSettingsConfig != nil {
		return json.Marshal(&src.MonadLogSettingsConfig)
	}

	if src.OauthActivitySettingsConfig != nil {
		return json.Marshal(&src.OauthActivitySettingsConfig)
	}

	if src.ObjectStorageInputSettingsConfig != nil {
		return json.Marshal(&src.ObjectStorageInputSettingsConfig)
	}

	if src.OneloginEventsSettingsConfig != nil {
		return json.Marshal(&src.OneloginEventsSettingsConfig)
	}

	if src.RolesInfoSettingsConfig != nil {
		return json.Marshal(&src.RolesInfoSettingsConfig)
	}

	if src.SemgrepDeploymentsSettingsConfig != nil {
		return json.Marshal(&src.SemgrepDeploymentsSettingsConfig)
	}

	if src.SemgrepProjectDetailsSettingsConfig != nil {
		return json.Marshal(&src.SemgrepProjectDetailsSettingsConfig)
	}

	if src.SemgrepProjectsSettingsConfig != nil {
		return json.Marshal(&src.SemgrepProjectsSettingsConfig)
	}

	if src.SlackUsersSettingsConfig != nil {
		return json.Marshal(&src.SlackUsersSettingsConfig)
	}

	if src.SlackgroupsSettingsConfig != nil {
		return json.Marshal(&src.SlackgroupsSettingsConfig)
	}

	if src.SnowflakeInputSettingsConfig != nil {
		return json.Marshal(&src.SnowflakeInputSettingsConfig)
	}

	if src.SnykOrganizationsSettingsConfig != nil {
		return json.Marshal(&src.SnykOrganizationsSettingsConfig)
	}

	if src.SnykProjectsSettingsConfig != nil {
		return json.Marshal(&src.SnykProjectsSettingsConfig)
	}

	if src.TailscaleUsersSettingsConfig != nil {
		return json.Marshal(&src.TailscaleUsersSettingsConfig)
	}

	if src.TenableAssetsCronSettingsConfig != nil {
		return json.Marshal(&src.TenableAssetsCronSettingsConfig)
	}

	if src.TenableVulnerabilitiesCronSettingsConfig != nil {
		return json.Marshal(&src.TenableVulnerabilitiesCronSettingsConfig)
	}

	if src.UsersInfoSettingsConfig != nil {
		return json.Marshal(&src.UsersInfoSettingsConfig)
	}

	if src.UsersSettingsConfig != nil {
		return json.Marshal(&src.UsersSettingsConfig)
	}

	if src.VulnerabilitiesCronSettingsConfig != nil {
		return json.Marshal(&src.VulnerabilitiesCronSettingsConfig)
	}

	if src.VulnerabilitiesSettingsConfig != nil {
		return json.Marshal(&src.VulnerabilitiesSettingsConfig)
	}

	if src.VulnerabilityFindingsSettingsConfig != nil {
		return json.Marshal(&src.VulnerabilityFindingsSettingsConfig)
	}

	if src.MapmapOfStringAny != nil {
		return json.Marshal(&src.MapmapOfStringAny)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *SecretProcessesorInputConfigSettings) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ActivityLogsSettingsConfig != nil {
		return obj.ActivityLogsSettingsConfig
	}

	if obj.ActorsInfoSettingsConfig != nil {
		return obj.ActorsInfoSettingsConfig
	}

	if obj.AdminActivitySettingsConfig != nil {
		return obj.AdminActivitySettingsConfig
	}

	if obj.AdminLogsSettingsConfig != nil {
		return obj.AdminLogsSettingsConfig
	}

	if obj.AuditLogsSettingsConfig != nil {
		return obj.AuditLogsSettingsConfig
	}

	if obj.AuthLogsSettingsConfig != nil {
		return obj.AuthLogsSettingsConfig
	}

	if obj.AwsGuarddutySettingsConfig != nil {
		return obj.AwsGuarddutySettingsConfig
	}

	if obj.AwsS3SettingsConfig != nil {
		return obj.AwsS3SettingsConfig
	}

	if obj.AwssqsSettingsConfig != nil {
		return obj.AwssqsSettingsConfig
	}

	if obj.AzureActivityLogsSettingsConfig != nil {
		return obj.AzureActivityLogsSettingsConfig
	}

	if obj.AzureBlobStorageSettingsConfig != nil {
		return obj.AzureBlobStorageSettingsConfig
	}

	if obj.BigqueryInputSettingsConfig != nil {
		return obj.BigqueryInputSettingsConfig
	}

	if obj.BoxEventsSettingsConfig != nil {
		return obj.BoxEventsSettingsConfig
	}

	if obj.BoxUsersSettingsConfig != nil {
		return obj.BoxUsersSettingsConfig
	}

	if obj.CertificateManagerSettingsConfig != nil {
		return obj.CertificateManagerSettingsConfig
	}

	if obj.CloudAssetInventorySettingsConfig != nil {
		return obj.CloudAssetInventorySettingsConfig
	}

	if obj.CloudConfigurationFindingsSettingsConfig != nil {
		return obj.CloudConfigurationFindingsSettingsConfig
	}

	if obj.CloudLogsSettingsConfig != nil {
		return obj.CloudLogsSettingsConfig
	}

	if obj.CloudResourceInventorySettingsConfig != nil {
		return obj.CloudResourceInventorySettingsConfig
	}

	if obj.CloudtrailSettingsConfig != nil {
		return obj.CloudtrailSettingsConfig
	}

	if obj.CrowdstrikeFdrSettingsConfig != nil {
		return obj.CrowdstrikeFdrSettingsConfig
	}

	if obj.DefenderForEndpointAlertsSettingsConfig != nil {
		return obj.DefenderForEndpointAlertsSettingsConfig
	}

	if obj.DemoCustomSettingsConfig != nil {
		return obj.DemoCustomSettingsConfig
	}

	if obj.DemoSettingsConfig != nil {
		return obj.DemoSettingsConfig
	}

	if obj.DetectSummariesSettingsConfig != nil {
		return obj.DetectSummariesSettingsConfig
	}

	if obj.DeviceActivitySettingsConfig != nil {
		return obj.DeviceActivitySettingsConfig
	}

	if obj.DeviceDetailsSettingsConfig != nil {
		return obj.DeviceDetailsSettingsConfig
	}

	if obj.DevicesSettingsConfig != nil {
		return obj.DevicesSettingsConfig
	}

	if obj.DriveActivitySettingsConfig != nil {
		return obj.DriveActivitySettingsConfig
	}

	if obj.EntraIdSettingsConfig != nil {
		return obj.EntraIdSettingsConfig
	}

	if obj.EventSettingsConfig != nil {
		return obj.EventSettingsConfig
	}

	if obj.EventsLogsSettingsConfig != nil {
		return obj.EventsLogsSettingsConfig
	}

	if obj.FullScansSettingsConfig != nil {
		return obj.FullScansSettingsConfig
	}

	if obj.GitlabIssuesSettingsConfig != nil {
		return obj.GitlabIssuesSettingsConfig
	}

	if obj.GoogleCloudStorageSettingsConfig != nil {
		return obj.GoogleCloudStorageSettingsConfig
	}

	if obj.IssuesSettingsConfig != nil {
		return obj.IssuesSettingsConfig
	}

	if obj.LogAnalyticsQuerySettingsConfig != nil {
		return obj.LogAnalyticsQuerySettingsConfig
	}

	if obj.LoginActivitySettingsConfig != nil {
		return obj.LoginActivitySettingsConfig
	}

	if obj.LoginSessionsSettingsConfig != nil {
		return obj.LoginSessionsSettingsConfig
	}

	if obj.MonadLogSettingsConfig != nil {
		return obj.MonadLogSettingsConfig
	}

	if obj.OauthActivitySettingsConfig != nil {
		return obj.OauthActivitySettingsConfig
	}

	if obj.ObjectStorageInputSettingsConfig != nil {
		return obj.ObjectStorageInputSettingsConfig
	}

	if obj.OneloginEventsSettingsConfig != nil {
		return obj.OneloginEventsSettingsConfig
	}

	if obj.RolesInfoSettingsConfig != nil {
		return obj.RolesInfoSettingsConfig
	}

	if obj.SemgrepDeploymentsSettingsConfig != nil {
		return obj.SemgrepDeploymentsSettingsConfig
	}

	if obj.SemgrepProjectDetailsSettingsConfig != nil {
		return obj.SemgrepProjectDetailsSettingsConfig
	}

	if obj.SemgrepProjectsSettingsConfig != nil {
		return obj.SemgrepProjectsSettingsConfig
	}

	if obj.SlackUsersSettingsConfig != nil {
		return obj.SlackUsersSettingsConfig
	}

	if obj.SlackgroupsSettingsConfig != nil {
		return obj.SlackgroupsSettingsConfig
	}

	if obj.SnowflakeInputSettingsConfig != nil {
		return obj.SnowflakeInputSettingsConfig
	}

	if obj.SnykOrganizationsSettingsConfig != nil {
		return obj.SnykOrganizationsSettingsConfig
	}

	if obj.SnykProjectsSettingsConfig != nil {
		return obj.SnykProjectsSettingsConfig
	}

	if obj.TailscaleUsersSettingsConfig != nil {
		return obj.TailscaleUsersSettingsConfig
	}

	if obj.TenableAssetsCronSettingsConfig != nil {
		return obj.TenableAssetsCronSettingsConfig
	}

	if obj.TenableVulnerabilitiesCronSettingsConfig != nil {
		return obj.TenableVulnerabilitiesCronSettingsConfig
	}

	if obj.UsersInfoSettingsConfig != nil {
		return obj.UsersInfoSettingsConfig
	}

	if obj.UsersSettingsConfig != nil {
		return obj.UsersSettingsConfig
	}

	if obj.VulnerabilitiesCronSettingsConfig != nil {
		return obj.VulnerabilitiesCronSettingsConfig
	}

	if obj.VulnerabilitiesSettingsConfig != nil {
		return obj.VulnerabilitiesSettingsConfig
	}

	if obj.VulnerabilityFindingsSettingsConfig != nil {
		return obj.VulnerabilityFindingsSettingsConfig
	}

	if obj.MapmapOfStringAny != nil {
		return obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj SecretProcessesorInputConfigSettings) GetActualInstanceValue() (interface{}) {
	if obj.ActivityLogsSettingsConfig != nil {
		return *obj.ActivityLogsSettingsConfig
	}

	if obj.ActorsInfoSettingsConfig != nil {
		return *obj.ActorsInfoSettingsConfig
	}

	if obj.AdminActivitySettingsConfig != nil {
		return *obj.AdminActivitySettingsConfig
	}

	if obj.AdminLogsSettingsConfig != nil {
		return *obj.AdminLogsSettingsConfig
	}

	if obj.AuditLogsSettingsConfig != nil {
		return *obj.AuditLogsSettingsConfig
	}

	if obj.AuthLogsSettingsConfig != nil {
		return *obj.AuthLogsSettingsConfig
	}

	if obj.AwsGuarddutySettingsConfig != nil {
		return *obj.AwsGuarddutySettingsConfig
	}

	if obj.AwsS3SettingsConfig != nil {
		return *obj.AwsS3SettingsConfig
	}

	if obj.AwssqsSettingsConfig != nil {
		return *obj.AwssqsSettingsConfig
	}

	if obj.AzureActivityLogsSettingsConfig != nil {
		return *obj.AzureActivityLogsSettingsConfig
	}

	if obj.AzureBlobStorageSettingsConfig != nil {
		return *obj.AzureBlobStorageSettingsConfig
	}

	if obj.BigqueryInputSettingsConfig != nil {
		return *obj.BigqueryInputSettingsConfig
	}

	if obj.BoxEventsSettingsConfig != nil {
		return *obj.BoxEventsSettingsConfig
	}

	if obj.BoxUsersSettingsConfig != nil {
		return *obj.BoxUsersSettingsConfig
	}

	if obj.CertificateManagerSettingsConfig != nil {
		return *obj.CertificateManagerSettingsConfig
	}

	if obj.CloudAssetInventorySettingsConfig != nil {
		return *obj.CloudAssetInventorySettingsConfig
	}

	if obj.CloudConfigurationFindingsSettingsConfig != nil {
		return *obj.CloudConfigurationFindingsSettingsConfig
	}

	if obj.CloudLogsSettingsConfig != nil {
		return *obj.CloudLogsSettingsConfig
	}

	if obj.CloudResourceInventorySettingsConfig != nil {
		return *obj.CloudResourceInventorySettingsConfig
	}

	if obj.CloudtrailSettingsConfig != nil {
		return *obj.CloudtrailSettingsConfig
	}

	if obj.CrowdstrikeFdrSettingsConfig != nil {
		return *obj.CrowdstrikeFdrSettingsConfig
	}

	if obj.DefenderForEndpointAlertsSettingsConfig != nil {
		return *obj.DefenderForEndpointAlertsSettingsConfig
	}

	if obj.DemoCustomSettingsConfig != nil {
		return *obj.DemoCustomSettingsConfig
	}

	if obj.DemoSettingsConfig != nil {
		return *obj.DemoSettingsConfig
	}

	if obj.DetectSummariesSettingsConfig != nil {
		return *obj.DetectSummariesSettingsConfig
	}

	if obj.DeviceActivitySettingsConfig != nil {
		return *obj.DeviceActivitySettingsConfig
	}

	if obj.DeviceDetailsSettingsConfig != nil {
		return *obj.DeviceDetailsSettingsConfig
	}

	if obj.DevicesSettingsConfig != nil {
		return *obj.DevicesSettingsConfig
	}

	if obj.DriveActivitySettingsConfig != nil {
		return *obj.DriveActivitySettingsConfig
	}

	if obj.EntraIdSettingsConfig != nil {
		return *obj.EntraIdSettingsConfig
	}

	if obj.EventSettingsConfig != nil {
		return *obj.EventSettingsConfig
	}

	if obj.EventsLogsSettingsConfig != nil {
		return *obj.EventsLogsSettingsConfig
	}

	if obj.FullScansSettingsConfig != nil {
		return *obj.FullScansSettingsConfig
	}

	if obj.GitlabIssuesSettingsConfig != nil {
		return *obj.GitlabIssuesSettingsConfig
	}

	if obj.GoogleCloudStorageSettingsConfig != nil {
		return *obj.GoogleCloudStorageSettingsConfig
	}

	if obj.IssuesSettingsConfig != nil {
		return *obj.IssuesSettingsConfig
	}

	if obj.LogAnalyticsQuerySettingsConfig != nil {
		return *obj.LogAnalyticsQuerySettingsConfig
	}

	if obj.LoginActivitySettingsConfig != nil {
		return *obj.LoginActivitySettingsConfig
	}

	if obj.LoginSessionsSettingsConfig != nil {
		return *obj.LoginSessionsSettingsConfig
	}

	if obj.MonadLogSettingsConfig != nil {
		return *obj.MonadLogSettingsConfig
	}

	if obj.OauthActivitySettingsConfig != nil {
		return *obj.OauthActivitySettingsConfig
	}

	if obj.ObjectStorageInputSettingsConfig != nil {
		return *obj.ObjectStorageInputSettingsConfig
	}

	if obj.OneloginEventsSettingsConfig != nil {
		return *obj.OneloginEventsSettingsConfig
	}

	if obj.RolesInfoSettingsConfig != nil {
		return *obj.RolesInfoSettingsConfig
	}

	if obj.SemgrepDeploymentsSettingsConfig != nil {
		return *obj.SemgrepDeploymentsSettingsConfig
	}

	if obj.SemgrepProjectDetailsSettingsConfig != nil {
		return *obj.SemgrepProjectDetailsSettingsConfig
	}

	if obj.SemgrepProjectsSettingsConfig != nil {
		return *obj.SemgrepProjectsSettingsConfig
	}

	if obj.SlackUsersSettingsConfig != nil {
		return *obj.SlackUsersSettingsConfig
	}

	if obj.SlackgroupsSettingsConfig != nil {
		return *obj.SlackgroupsSettingsConfig
	}

	if obj.SnowflakeInputSettingsConfig != nil {
		return *obj.SnowflakeInputSettingsConfig
	}

	if obj.SnykOrganizationsSettingsConfig != nil {
		return *obj.SnykOrganizationsSettingsConfig
	}

	if obj.SnykProjectsSettingsConfig != nil {
		return *obj.SnykProjectsSettingsConfig
	}

	if obj.TailscaleUsersSettingsConfig != nil {
		return *obj.TailscaleUsersSettingsConfig
	}

	if obj.TenableAssetsCronSettingsConfig != nil {
		return *obj.TenableAssetsCronSettingsConfig
	}

	if obj.TenableVulnerabilitiesCronSettingsConfig != nil {
		return *obj.TenableVulnerabilitiesCronSettingsConfig
	}

	if obj.UsersInfoSettingsConfig != nil {
		return *obj.UsersInfoSettingsConfig
	}

	if obj.UsersSettingsConfig != nil {
		return *obj.UsersSettingsConfig
	}

	if obj.VulnerabilitiesCronSettingsConfig != nil {
		return *obj.VulnerabilitiesCronSettingsConfig
	}

	if obj.VulnerabilitiesSettingsConfig != nil {
		return *obj.VulnerabilitiesSettingsConfig
	}

	if obj.VulnerabilityFindingsSettingsConfig != nil {
		return *obj.VulnerabilityFindingsSettingsConfig
	}

	if obj.MapmapOfStringAny != nil {
		return *obj.MapmapOfStringAny
	}

	// all schemas are nil
	return nil
}

type NullableSecretProcessesorInputConfigSettings struct {
	value *SecretProcessesorInputConfigSettings
	isSet bool
}

func (v NullableSecretProcessesorInputConfigSettings) Get() *SecretProcessesorInputConfigSettings {
	return v.value
}

func (v *NullableSecretProcessesorInputConfigSettings) Set(val *SecretProcessesorInputConfigSettings) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretProcessesorInputConfigSettings) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretProcessesorInputConfigSettings) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretProcessesorInputConfigSettings(val *SecretProcessesorInputConfigSettings) *NullableSecretProcessesorInputConfigSettings {
	return &NullableSecretProcessesorInputConfigSettings{value: val, isSet: true}
}

func (v NullableSecretProcessesorInputConfigSettings) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretProcessesorInputConfigSettings) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


