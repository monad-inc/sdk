/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the SentinelSettingsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SentinelSettingsConfig{}

// SentinelSettingsConfig Sentinel Output Settings
type SentinelSettingsConfig struct {
	// The Azure Monitor Data Collection Rule (DCR) ingestion endpoint URL.
	Endpoint *string `json:"endpoint,omitempty"`
	// The unique identifier of the Data Collection Rule (DCR).
	RuleId *string `json:"rule_id,omitempty"`
	// The name of the data stream defined in the Data Collection Rule.
	StreamName *string `json:"stream_name,omitempty"`
}

// NewSentinelSettingsConfig instantiates a new SentinelSettingsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSentinelSettingsConfig() *SentinelSettingsConfig {
	this := SentinelSettingsConfig{}
	return &this
}

// NewSentinelSettingsConfigWithDefaults instantiates a new SentinelSettingsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSentinelSettingsConfigWithDefaults() *SentinelSettingsConfig {
	this := SentinelSettingsConfig{}
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *SentinelSettingsConfig) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SentinelSettingsConfig) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *SentinelSettingsConfig) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *SentinelSettingsConfig) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetRuleId returns the RuleId field value if set, zero value otherwise.
func (o *SentinelSettingsConfig) GetRuleId() string {
	if o == nil || IsNil(o.RuleId) {
		var ret string
		return ret
	}
	return *o.RuleId
}

// GetRuleIdOk returns a tuple with the RuleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SentinelSettingsConfig) GetRuleIdOk() (*string, bool) {
	if o == nil || IsNil(o.RuleId) {
		return nil, false
	}
	return o.RuleId, true
}

// HasRuleId returns a boolean if a field has been set.
func (o *SentinelSettingsConfig) HasRuleId() bool {
	if o != nil && !IsNil(o.RuleId) {
		return true
	}

	return false
}

// SetRuleId gets a reference to the given string and assigns it to the RuleId field.
func (o *SentinelSettingsConfig) SetRuleId(v string) {
	o.RuleId = &v
}

// GetStreamName returns the StreamName field value if set, zero value otherwise.
func (o *SentinelSettingsConfig) GetStreamName() string {
	if o == nil || IsNil(o.StreamName) {
		var ret string
		return ret
	}
	return *o.StreamName
}

// GetStreamNameOk returns a tuple with the StreamName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SentinelSettingsConfig) GetStreamNameOk() (*string, bool) {
	if o == nil || IsNil(o.StreamName) {
		return nil, false
	}
	return o.StreamName, true
}

// HasStreamName returns a boolean if a field has been set.
func (o *SentinelSettingsConfig) HasStreamName() bool {
	if o != nil && !IsNil(o.StreamName) {
		return true
	}

	return false
}

// SetStreamName gets a reference to the given string and assigns it to the StreamName field.
func (o *SentinelSettingsConfig) SetStreamName(v string) {
	o.StreamName = &v
}

func (o SentinelSettingsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SentinelSettingsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.RuleId) {
		toSerialize["rule_id"] = o.RuleId
	}
	if !IsNil(o.StreamName) {
		toSerialize["stream_name"] = o.StreamName
	}
	return toSerialize, nil
}

type NullableSentinelSettingsConfig struct {
	value *SentinelSettingsConfig
	isSet bool
}

func (v NullableSentinelSettingsConfig) Get() *SentinelSettingsConfig {
	return v.value
}

func (v *NullableSentinelSettingsConfig) Set(val *SentinelSettingsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableSentinelSettingsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableSentinelSettingsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSentinelSettingsConfig(val *SentinelSettingsConfig) *NullableSentinelSettingsConfig {
	return &NullableSentinelSettingsConfig{value: val, isSet: true}
}

func (v NullableSentinelSettingsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSentinelSettingsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


