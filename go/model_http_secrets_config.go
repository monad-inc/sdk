/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the HttpSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpSecretsConfig{}

// HttpSecretsConfig HTTP Output Secrets
type HttpSecretsConfig struct {
	// Authentication headers
	AuthHeaders map[string]ModelsSecret `json:"auth_headers,omitempty"`
}

// NewHttpSecretsConfig instantiates a new HttpSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpSecretsConfig() *HttpSecretsConfig {
	this := HttpSecretsConfig{}
	return &this
}

// NewHttpSecretsConfigWithDefaults instantiates a new HttpSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpSecretsConfigWithDefaults() *HttpSecretsConfig {
	this := HttpSecretsConfig{}
	return &this
}

// GetAuthHeaders returns the AuthHeaders field value if set, zero value otherwise.
func (o *HttpSecretsConfig) GetAuthHeaders() map[string]ModelsSecret {
	if o == nil || IsNil(o.AuthHeaders) {
		var ret map[string]ModelsSecret
		return ret
	}
	return o.AuthHeaders
}

// GetAuthHeadersOk returns a tuple with the AuthHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpSecretsConfig) GetAuthHeadersOk() (map[string]ModelsSecret, bool) {
	if o == nil || IsNil(o.AuthHeaders) {
		return map[string]ModelsSecret{}, false
	}
	return o.AuthHeaders, true
}

// HasAuthHeaders returns a boolean if a field has been set.
func (o *HttpSecretsConfig) HasAuthHeaders() bool {
	if o != nil && !IsNil(o.AuthHeaders) {
		return true
	}

	return false
}

// SetAuthHeaders gets a reference to the given map[string]ModelsSecret and assigns it to the AuthHeaders field.
func (o *HttpSecretsConfig) SetAuthHeaders(v map[string]ModelsSecret) {
	o.AuthHeaders = v
}

func (o HttpSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthHeaders) {
		toSerialize["auth_headers"] = o.AuthHeaders
	}
	return toSerialize, nil
}

type NullableHttpSecretsConfig struct {
	value *HttpSecretsConfig
	isSet bool
}

func (v NullableHttpSecretsConfig) Get() *HttpSecretsConfig {
	return v.value
}

func (v *NullableHttpSecretsConfig) Set(val *HttpSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpSecretsConfig(val *HttpSecretsConfig) *NullableHttpSecretsConfig {
	return &NullableHttpSecretsConfig{value: val, isSet: true}
}

func (v NullableHttpSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


