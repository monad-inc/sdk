/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the BoxEventsSecretsConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BoxEventsSecretsConfig{}

// BoxEventsSecretsConfig Box Events secrets
type BoxEventsSecretsConfig struct {
	ClientId *ModelsSecret `json:"client_id,omitempty"`
	ClientSecret *ModelsSecret `json:"client_secret,omitempty"`
	EnterpriseId *ModelsSecret `json:"enterprise_id,omitempty"`
}

// NewBoxEventsSecretsConfig instantiates a new BoxEventsSecretsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBoxEventsSecretsConfig() *BoxEventsSecretsConfig {
	this := BoxEventsSecretsConfig{}
	return &this
}

// NewBoxEventsSecretsConfigWithDefaults instantiates a new BoxEventsSecretsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBoxEventsSecretsConfigWithDefaults() *BoxEventsSecretsConfig {
	this := BoxEventsSecretsConfig{}
	return &this
}

// GetClientId returns the ClientId field value if set, zero value otherwise.
func (o *BoxEventsSecretsConfig) GetClientId() ModelsSecret {
	if o == nil || IsNil(o.ClientId) {
		var ret ModelsSecret
		return ret
	}
	return *o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoxEventsSecretsConfig) GetClientIdOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.ClientId) {
		return nil, false
	}
	return o.ClientId, true
}

// HasClientId returns a boolean if a field has been set.
func (o *BoxEventsSecretsConfig) HasClientId() bool {
	if o != nil && !IsNil(o.ClientId) {
		return true
	}

	return false
}

// SetClientId gets a reference to the given ModelsSecret and assigns it to the ClientId field.
func (o *BoxEventsSecretsConfig) SetClientId(v ModelsSecret) {
	o.ClientId = &v
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *BoxEventsSecretsConfig) GetClientSecret() ModelsSecret {
	if o == nil || IsNil(o.ClientSecret) {
		var ret ModelsSecret
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoxEventsSecretsConfig) GetClientSecretOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *BoxEventsSecretsConfig) HasClientSecret() bool {
	if o != nil && !IsNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given ModelsSecret and assigns it to the ClientSecret field.
func (o *BoxEventsSecretsConfig) SetClientSecret(v ModelsSecret) {
	o.ClientSecret = &v
}

// GetEnterpriseId returns the EnterpriseId field value if set, zero value otherwise.
func (o *BoxEventsSecretsConfig) GetEnterpriseId() ModelsSecret {
	if o == nil || IsNil(o.EnterpriseId) {
		var ret ModelsSecret
		return ret
	}
	return *o.EnterpriseId
}

// GetEnterpriseIdOk returns a tuple with the EnterpriseId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BoxEventsSecretsConfig) GetEnterpriseIdOk() (*ModelsSecret, bool) {
	if o == nil || IsNil(o.EnterpriseId) {
		return nil, false
	}
	return o.EnterpriseId, true
}

// HasEnterpriseId returns a boolean if a field has been set.
func (o *BoxEventsSecretsConfig) HasEnterpriseId() bool {
	if o != nil && !IsNil(o.EnterpriseId) {
		return true
	}

	return false
}

// SetEnterpriseId gets a reference to the given ModelsSecret and assigns it to the EnterpriseId field.
func (o *BoxEventsSecretsConfig) SetEnterpriseId(v ModelsSecret) {
	o.EnterpriseId = &v
}

func (o BoxEventsSecretsConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BoxEventsSecretsConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClientId) {
		toSerialize["client_id"] = o.ClientId
	}
	if !IsNil(o.ClientSecret) {
		toSerialize["client_secret"] = o.ClientSecret
	}
	if !IsNil(o.EnterpriseId) {
		toSerialize["enterprise_id"] = o.EnterpriseId
	}
	return toSerialize, nil
}

type NullableBoxEventsSecretsConfig struct {
	value *BoxEventsSecretsConfig
	isSet bool
}

func (v NullableBoxEventsSecretsConfig) Get() *BoxEventsSecretsConfig {
	return v.value
}

func (v *NullableBoxEventsSecretsConfig) Set(val *BoxEventsSecretsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableBoxEventsSecretsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableBoxEventsSecretsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBoxEventsSecretsConfig(val *BoxEventsSecretsConfig) *NullableBoxEventsSecretsConfig {
	return &NullableBoxEventsSecretsConfig{value: val, isSet: true}
}

func (v NullableBoxEventsSecretsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBoxEventsSecretsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


