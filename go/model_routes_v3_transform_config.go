/*
Monad API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV3TransformConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV3TransformConfig{}

// RoutesV3TransformConfig struct for RoutesV3TransformConfig
type RoutesV3TransformConfig struct {
	Operations []RoutesV3TransformOperation `json:"operations,omitempty"`
}

// NewRoutesV3TransformConfig instantiates a new RoutesV3TransformConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV3TransformConfig() *RoutesV3TransformConfig {
	this := RoutesV3TransformConfig{}
	return &this
}

// NewRoutesV3TransformConfigWithDefaults instantiates a new RoutesV3TransformConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV3TransformConfigWithDefaults() *RoutesV3TransformConfig {
	this := RoutesV3TransformConfig{}
	return &this
}

// GetOperations returns the Operations field value if set, zero value otherwise.
func (o *RoutesV3TransformConfig) GetOperations() []RoutesV3TransformOperation {
	if o == nil || IsNil(o.Operations) {
		var ret []RoutesV3TransformOperation
		return ret
	}
	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV3TransformConfig) GetOperationsOk() ([]RoutesV3TransformOperation, bool) {
	if o == nil || IsNil(o.Operations) {
		return nil, false
	}
	return o.Operations, true
}

// HasOperations returns a boolean if a field has been set.
func (o *RoutesV3TransformConfig) HasOperations() bool {
	if o != nil && !IsNil(o.Operations) {
		return true
	}

	return false
}

// SetOperations gets a reference to the given []RoutesV3TransformOperation and assigns it to the Operations field.
func (o *RoutesV3TransformConfig) SetOperations(v []RoutesV3TransformOperation) {
	o.Operations = v
}

func (o RoutesV3TransformConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV3TransformConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Operations) {
		toSerialize["operations"] = o.Operations
	}
	return toSerialize, nil
}

type NullableRoutesV3TransformConfig struct {
	value *RoutesV3TransformConfig
	isSet bool
}

func (v NullableRoutesV3TransformConfig) Get() *RoutesV3TransformConfig {
	return v.value
}

func (v *NullableRoutesV3TransformConfig) Set(val *RoutesV3TransformConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV3TransformConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV3TransformConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV3TransformConfig(val *RoutesV3TransformConfig) *NullableRoutesV3TransformConfig {
	return &NullableRoutesV3TransformConfig{value: val, isSet: true}
}

func (v NullableRoutesV3TransformConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV3TransformConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


