/*
Monad Swagger API

This is the monad API

API version: 1.0
Contact: support@swagger.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package monad

import (
	"encoding/json"
)

// checks if the RoutesV2PipelineMetric type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutesV2PipelineMetric{}

// RoutesV2PipelineMetric struct for RoutesV2PipelineMetric
type RoutesV2PipelineMetric struct {
	PipelineId *string `json:"pipeline_id,omitempty"`
	PipelineName *string `json:"pipeline_name,omitempty"`
	TotalBytes *int32 `json:"total_bytes,omitempty"`
	Values []RoutesV2MetricsValue `json:"values,omitempty"`
}

// NewRoutesV2PipelineMetric instantiates a new RoutesV2PipelineMetric object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutesV2PipelineMetric() *RoutesV2PipelineMetric {
	this := RoutesV2PipelineMetric{}
	return &this
}

// NewRoutesV2PipelineMetricWithDefaults instantiates a new RoutesV2PipelineMetric object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutesV2PipelineMetricWithDefaults() *RoutesV2PipelineMetric {
	this := RoutesV2PipelineMetric{}
	return &this
}

// GetPipelineId returns the PipelineId field value if set, zero value otherwise.
func (o *RoutesV2PipelineMetric) GetPipelineId() string {
	if o == nil || IsNil(o.PipelineId) {
		var ret string
		return ret
	}
	return *o.PipelineId
}

// GetPipelineIdOk returns a tuple with the PipelineId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineMetric) GetPipelineIdOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineId) {
		return nil, false
	}
	return o.PipelineId, true
}

// HasPipelineId returns a boolean if a field has been set.
func (o *RoutesV2PipelineMetric) HasPipelineId() bool {
	if o != nil && !IsNil(o.PipelineId) {
		return true
	}

	return false
}

// SetPipelineId gets a reference to the given string and assigns it to the PipelineId field.
func (o *RoutesV2PipelineMetric) SetPipelineId(v string) {
	o.PipelineId = &v
}

// GetPipelineName returns the PipelineName field value if set, zero value otherwise.
func (o *RoutesV2PipelineMetric) GetPipelineName() string {
	if o == nil || IsNil(o.PipelineName) {
		var ret string
		return ret
	}
	return *o.PipelineName
}

// GetPipelineNameOk returns a tuple with the PipelineName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineMetric) GetPipelineNameOk() (*string, bool) {
	if o == nil || IsNil(o.PipelineName) {
		return nil, false
	}
	return o.PipelineName, true
}

// HasPipelineName returns a boolean if a field has been set.
func (o *RoutesV2PipelineMetric) HasPipelineName() bool {
	if o != nil && !IsNil(o.PipelineName) {
		return true
	}

	return false
}

// SetPipelineName gets a reference to the given string and assigns it to the PipelineName field.
func (o *RoutesV2PipelineMetric) SetPipelineName(v string) {
	o.PipelineName = &v
}

// GetTotalBytes returns the TotalBytes field value if set, zero value otherwise.
func (o *RoutesV2PipelineMetric) GetTotalBytes() int32 {
	if o == nil || IsNil(o.TotalBytes) {
		var ret int32
		return ret
	}
	return *o.TotalBytes
}

// GetTotalBytesOk returns a tuple with the TotalBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineMetric) GetTotalBytesOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalBytes) {
		return nil, false
	}
	return o.TotalBytes, true
}

// HasTotalBytes returns a boolean if a field has been set.
func (o *RoutesV2PipelineMetric) HasTotalBytes() bool {
	if o != nil && !IsNil(o.TotalBytes) {
		return true
	}

	return false
}

// SetTotalBytes gets a reference to the given int32 and assigns it to the TotalBytes field.
func (o *RoutesV2PipelineMetric) SetTotalBytes(v int32) {
	o.TotalBytes = &v
}

// GetValues returns the Values field value if set, zero value otherwise.
func (o *RoutesV2PipelineMetric) GetValues() []RoutesV2MetricsValue {
	if o == nil || IsNil(o.Values) {
		var ret []RoutesV2MetricsValue
		return ret
	}
	return o.Values
}

// GetValuesOk returns a tuple with the Values field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutesV2PipelineMetric) GetValuesOk() ([]RoutesV2MetricsValue, bool) {
	if o == nil || IsNil(o.Values) {
		return nil, false
	}
	return o.Values, true
}

// HasValues returns a boolean if a field has been set.
func (o *RoutesV2PipelineMetric) HasValues() bool {
	if o != nil && !IsNil(o.Values) {
		return true
	}

	return false
}

// SetValues gets a reference to the given []RoutesV2MetricsValue and assigns it to the Values field.
func (o *RoutesV2PipelineMetric) SetValues(v []RoutesV2MetricsValue) {
	o.Values = v
}

func (o RoutesV2PipelineMetric) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutesV2PipelineMetric) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PipelineId) {
		toSerialize["pipeline_id"] = o.PipelineId
	}
	if !IsNil(o.PipelineName) {
		toSerialize["pipeline_name"] = o.PipelineName
	}
	if !IsNil(o.TotalBytes) {
		toSerialize["total_bytes"] = o.TotalBytes
	}
	if !IsNil(o.Values) {
		toSerialize["values"] = o.Values
	}
	return toSerialize, nil
}

type NullableRoutesV2PipelineMetric struct {
	value *RoutesV2PipelineMetric
	isSet bool
}

func (v NullableRoutesV2PipelineMetric) Get() *RoutesV2PipelineMetric {
	return v.value
}

func (v *NullableRoutesV2PipelineMetric) Set(val *RoutesV2PipelineMetric) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutesV2PipelineMetric) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutesV2PipelineMetric) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutesV2PipelineMetric(val *RoutesV2PipelineMetric) *NullableRoutesV2PipelineMetric {
	return &NullableRoutesV2PipelineMetric{value: val, isSet: true}
}

func (v NullableRoutesV2PipelineMetric) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutesV2PipelineMetric) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


