/**
 * Monad API
 * This is the monad API
 *
 * OpenAPI spec version: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* SQS Output Settings
*/
export class AwssqsoutputSettingsConfig {
    /**
    * The message group ID for FIFO queues. This is required for FIFO queues.
    */
    'messageGroupId'?: string;
    /**
    * The type of SQS queue to use. Can be either \"standard\" or \"fifo\".
    */
    'queueType'?: string;
    /**
    * The URL of the SQS queue to poll for messages.
    */
    'queueUrl'?: string;
    /**
    * The AWS region where the SQS queue is located.
    */
    'region'?: string;
    /**
    * The ARN of the IAM role to assume for accessing the SQS queue.
    */
    'roleArn'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "messageGroupId",
            "baseName": "message_group_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "queueType",
            "baseName": "queue_type",
            "type": "string",
            "format": ""
        },
        {
            "name": "queueUrl",
            "baseName": "queue_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string",
            "format": ""
        },
        {
            "name": "roleArn",
            "baseName": "role_arn",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AwssqsoutputSettingsConfig.attributeTypeMap;
    }

    public constructor() {
    }
}
