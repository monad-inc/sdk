/**
 * Monad Swagger API
 * This is the monad API
 *
 * OpenAPI spec version: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DelimitedDelimiterFormatter } from '../models/DelimitedDelimiterFormatter';
import { JsonJsonFormatter } from '../models/JsonJsonFormatter';
import { ParquetParquetFormatter } from '../models/ParquetParquetFormatter';
import { HttpFile } from '../http/http';

/**
* The format config to use
*/
export class FormatterFormatConfig {
    'format'?: string;
    'delimitedFormat'?: DelimitedDelimiterFormatter;
    'jsonFormat'?: JsonJsonFormatter;
    'parquetFormat'?: ParquetParquetFormatter;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "format",
            "baseName": "Format",
            "type": "string",
            "format": ""
        },
        {
            "name": "delimitedFormat",
            "baseName": "delimited_format",
            "type": "DelimitedDelimiterFormatter",
            "format": ""
        },
        {
            "name": "jsonFormat",
            "baseName": "json_format",
            "type": "JsonJsonFormatter",
            "format": ""
        },
        {
            "name": "parquetFormat",
            "baseName": "parquet_format",
            "type": "ParquetParquetFormatter",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return FormatterFormatConfig.attributeTypeMap;
    }

    public constructor() {
    }
}
