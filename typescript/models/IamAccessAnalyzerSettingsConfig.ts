/**
 * Monad API
 * This is the monad API
 *
 * OpenAPI spec version: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { IamAccessAnalyzerFilter } from '../models/IamAccessAnalyzerFilter';
import { HttpFile } from '../http/http';

/**
* AWS IAM Access Analyzer settings
*/
export class IamAccessAnalyzerSettingsConfig {
    /**
    * The [ARN of the analyzer] to retrieve findings from.
    */
    'analyzerArn'?: string;
    /**
    * Cron string for scheduling the ingest of your input. eg: `0 0 * * *` - Daily at midnight, or `*_/15 * * * *` - Every 15 minutes
    */
    'cron'?: string;
    /**
    * A filter to match for the findings to return.
    */
    'filters'?: Array<IamAccessAnalyzerFilter>;
    /**
    * The Region that you would receieve findings for
    */
    'region'?: string;
    /**
    * The ARN of the role to assume to access the bucket
    */
    'roleArn'?: string;
    /**
    * Generate synthetic demo data instead of connecting to the real data source.
    */
    'useSyntheticData'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "analyzerArn",
            "baseName": "analyzer_arn",
            "type": "string",
            "format": ""
        },
        {
            "name": "cron",
            "baseName": "cron",
            "type": "string",
            "format": ""
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "Array<IamAccessAnalyzerFilter>",
            "format": ""
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string",
            "format": ""
        },
        {
            "name": "roleArn",
            "baseName": "role_arn",
            "type": "string",
            "format": ""
        },
        {
            "name": "useSyntheticData",
            "baseName": "use_synthetic_data",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return IamAccessAnalyzerSettingsConfig.attributeTypeMap;
    }

    public constructor() {
    }
}
