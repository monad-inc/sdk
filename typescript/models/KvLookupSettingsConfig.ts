/**
 * Monad API
 * This is the monad API
 *
 * OpenAPI spec version: 1.0
 * Contact: support@swagger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* KVLookup enrichment settings
*/
export class KvLookupSettingsConfig {
    /**
    * DestinationKey the path where the result will be stored in the record. Use \'.\' for the root object, \'field.subfield\' for nested properties, \'array[0]\' for array elements, or combined paths like \'users[0].name\'.
    */
    'destinationKey'?: string;
    /**
    * ErrorOnMissingKey if true, will throw an error if the key is not found in the KV lookup output
    */
    'errorOnMissingKey'?: boolean;
    /**
    * JoinKey is the key in the record whose value will be used to join with the KV lookup output
    */
    'joinKey'?: string;
    /**
    * KVLookupOutputID is the ID of the KV lookup output to join with
    */
    'kvLookupOutputId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "destinationKey",
            "baseName": "destination_key",
            "type": "string",
            "format": ""
        },
        {
            "name": "errorOnMissingKey",
            "baseName": "error_on_missing_key",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "joinKey",
            "baseName": "join_key",
            "type": "string",
            "format": ""
        },
        {
            "name": "kvLookupOutputId",
            "baseName": "kv_lookup_output_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return KvLookupSettingsConfig.attributeTypeMap;
    }

    public constructor() {
    }
}
